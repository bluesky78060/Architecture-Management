{"version":3,"file":"static/js/648.83727047.chunk.js","mappings":"sPAmEA,MAAMA,EAAiBA,IACd,IAAIC,EAAAA,SAGPC,EAAqBA,CAAyEC,EAA4BC,EAAWC,EAAmBC,KAC5J,MAAMC,EAAYJ,EAASK,aAAaH,GAExC,GAAID,EAAKK,OAAS,EAAG,CAEnB,MAAMC,EAAUC,OAAOC,KAAKR,EAAK,IACfG,EAAUM,OAAOH,GAGzBI,SAAUC,IAClBA,EAAKC,KAAO,CAAEC,MAAM,GACpBF,EAAKG,KAAO,CACVC,KAAM,UACNC,QAAS,QACTC,QAAS,CAAEC,KAAM,aAEnBP,EAAKQ,OAAS,CACZC,IAAK,CAAEC,MAAO,QACdC,KAAM,CAAED,MAAO,QACfE,OAAQ,CAAEF,MAAO,QACjBG,MAAO,CAAEH,MAAO,WAKpBrB,EAAKyB,QAAQC,IACX,MAAMC,EAAMrB,EAAQsB,IAAIC,GAAUH,EAAKG,IACvB1B,EAAUM,OAAOkB,GAGzBjB,SAAUC,IAChBA,EAAKQ,OAAS,CACZC,IAAK,CAAEC,MAAO,QACdC,KAAM,CAAED,MAAO,QACfE,OAAQ,CAAEF,MAAO,QACjBG,MAAO,CAAEH,MAAO,aAMlBS,MAAMC,QAAQ7B,IAChBA,EAAUuB,QAAQ,CAACO,EAAOC,KACT9B,EAAU+B,UAAUD,EAAQ,GACpCD,MAAQA,GAGrB,CAEA,OAAO7B,GAGHgC,EAAeC,MAAOrC,EAA4BsC,KACtD,MAAMC,QAAevC,EAASwC,KAAKC,cAC7BC,EAAO,IAAIC,KAAK,CAACJ,GAAS,CAAEvB,KAAM,sEAClC4B,EAAMC,OAAOC,IAAIC,gBAAgBL,GACjCM,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAOP,EACTI,EAAEI,SAAWd,EACbW,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,GAC1BH,OAAOC,IAAIW,gBAAgBb,IAIhBc,EAAa,CAExBC,QAAStB,UACP,MAAMpC,EAAuB0D,EAAQ9B,IAAI+B,IAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAK,CAClD,GAAML,EAAOM,GACb,eAAMN,EAAOO,KACb,qBAAoB,QAAfN,EAAED,EAAOQ,cAAM,IAAAP,EAAAA,EAAI,GACxB,qBAAmB,QAAdC,EAAEF,EAAOS,aAAK,IAAAP,EAAAA,EAAI,GACvB,eAAoB,QAAhBC,EAAEH,EAAOU,eAAO,IAAAP,EAAAA,EAAI,GACxB,eAAsB,aAAhBH,EAAO5C,KAAsB,qBAAQ,eAC3C,2BAAuC,kBAAvB4C,EAAOW,YAA2BX,EAAOW,YAAc,EACvE,qBAAsC,kBAAvBX,EAAOY,YAA2BZ,EAAOY,YAAc,EACtE,qBAAuB,QAAlBR,EAAEJ,EAAOa,iBAAS,IAAAT,EAAAA,EAAI,GAC3B,eAAkB,QAAdC,EAAEL,EAAOc,aAAK,IAAAT,EAAAA,EAAI,MAGlBjE,EAAWH,IAEjBE,EAAmBC,EAAUC,EAAM,kCAAU,CAC3C,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,WAIImC,EAAapC,EAAU,yCAI/B2E,UAAWtC,UACT,MAAMpC,EAAyB0E,EAAU9C,IAAIF,IAAI,IAAAiD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAK,CACpD,GAAM7D,EAAKuC,GACX,qBAAsB,QAAjBU,EAAEjD,EAAK8D,kBAAU,IAAAb,EAAAA,EAAI,GAC1B,qBAAyB,QAApBC,EAAElD,EAAK+D,qBAAa,IAAAb,EAAAA,EAAI,GAC7B,2BAAwB,QAAlBC,EAAEnD,EAAKgE,mBAAW,IAAAb,EAAAA,EAAI,GAC5B,eAAMnD,EAAKwC,KACX,2BAAqB,QAAfY,EAAEpD,EAAKiE,gBAAQ,IAAAb,EAAAA,EAAI,GACzB,2BAAsC,kBAAtBpD,EAAKkE,aAA4BlE,EAAKkE,aAAe,EACrE,eAAgC,kBAAlBlE,EAAKmE,SAAwBnE,EAAKmE,SAAW,EAC3D,eAAe,QAAXd,EAAErD,EAAKoE,YAAI,IAAAf,EAAAA,EAAI,GACnB,sBAAQgB,OAAOC,SAASD,OAAOrE,EAAKkE,eAAiBG,OAAOrE,EAAKkE,cAAgB,IAAMG,OAAOC,SAASD,OAAOrE,EAAKmE,WAAaE,OAAOrE,EAAKmE,UAAY,GACxJ,2BAAQI,OAAwB,QAAlBjB,EAACtD,EAAKwE,oBAAY,IAAAlB,EAAAA,EAAI,IACpC,2BAAQiB,OAAyB,QAAnBhB,EAACvD,EAAKyE,qBAAa,IAAAlB,EAAAA,EAAI,IACrC,uCAAUgB,OAA+B,QAAzBf,EAACxD,EAAK0E,2BAAmB,IAAAlB,EAAAA,EAAI,IAC7C,uCAAUe,OAAgC,QAA1Bd,EAACzD,EAAK2E,4BAAoB,IAAAlB,EAAAA,EAAI,IAC9C,eAAiB,QAAbC,EAAE1D,EAAK4E,cAAM,IAAAlB,EAAAA,EAAI,GACrB,qBAAgB,QAAXC,EAAE3D,EAAK6E,YAAI,IAAAlB,EAAAA,EAAI,GACpB,2BAAwB,QAAlBC,EAAE5D,EAAK8E,mBAAW,IAAAlB,EAAAA,EAAI,GAC5B,eAAgB,QAAZC,EAAE7D,EAAK+C,aAAK,IAAAc,EAAAA,EAAI,MAGhBxF,EAAWH,IAEjBE,EAAmBC,EAAUC,EAAM,4BAAS,CAC1C,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,WAIImC,EAAapC,EAAU,mCAI/B0G,SAAUrE,UACR,MAAMpC,EAAwByG,EAAS7E,IAAI8E,IAAO,CAChD,iCAASA,EAAQzC,GACjB,qBAAOyC,EAAQ/C,OACf,2BAAQ+C,EAAQC,SAAW,GAC3B,iCAASD,EAAQE,kBAAoB,GACrC,2BAAQF,EAAQG,OAChB,eAAMH,EAAQJ,OACd,qBAAOI,EAAQH,KACf,iCAASG,EAAQhC,UAAUrE,UAGvBN,EAAWH,IAEjBE,EAAmBC,EAAUC,EAAM,kCAAU,CAC3C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WAIImC,EAAapC,EAAU,yCAI/B+G,UAAW1E,UACT,MAAMpC,EAAyB8G,EAAUlF,IAAImF,IAAQ,CACnD,iCAASA,EAAS9C,GAClB,qBAAO8C,EAASvB,YAAc,GAC9B,qBAAOuB,EAAStB,eAAiB,GACjC,2BAAQsB,EAASrB,aAAe,GAChC,eAAMqB,EAASC,MACf,qBAAOD,EAASE,YAChB,eAAMF,EAAST,OACf,qBAAOS,EAASR,MAAQ,GACxB,iCAASQ,EAASG,MAAM7G,UAGpBN,EAAWH,IAEjBE,EAAmBC,EAAUC,EAAM,kCAAU,CAC3C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WAIImC,EAAapC,EAAU,yCAI/BoH,eAAgB/E,UACd,MAAMrC,EAAWH,IAGXwH,EAAa,CACjB,CAAC,iCAASL,EAAS9C,IACnB,CAAC,qBAAO8C,EAASvB,YAAc,IAC/B,CAAC,qBAAOuB,EAAStB,eAAiB,IAClC,CAAC,2BAAQsB,EAASrB,aAAe,IACjC,CAAC,eAAMqB,EAASC,OAChB,CAAC,qBAAOD,EAASR,MAAQ,IACzB,CAAC,2BAAQQ,EAASM,YAAc,IAChC,CAAC,qBAAON,EAASE,aACjB,CAAC,eAAMF,EAAST,QAChB,CAAC,eAAMS,EAAStC,OAAS,KAGrB6C,EAAcvH,EAASK,aAAa,mCAC1CgH,EAAW3F,QAAQE,IACjB2F,EAAY7G,OAAOkB,KAIrB,MAAM4F,EAAeR,EAASG,MAAMtF,IAAI,CAACF,EAAMO,KAAK,CAClD,eAAMA,EAAQ,EACd,2BAAQP,EAAKiE,UAAY,GACzB,eAAMjE,EAAKwC,KACX,2BAAQxC,EAAK8E,aAAe,GAC5B,eAAM9E,EAAKmE,SACX,eAAMnE,EAAKoE,MAAQ,GACnB,eAAMpE,EAAK8F,UACX,eAA+B,kBAAlB9F,EAAKmE,UAAmD,kBAAnBnE,EAAK8F,UAAyB9F,EAAKmE,SAAWnE,EAAK8F,UAAY,EACjH,eAAM9F,EAAK+C,OAAS,MAItB3E,EAAmBC,EAAUwH,EAAc,4BAAS,CAClD,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,WAIIpF,EAAapC,EAAS,sBAAD0H,OAASV,EAAS9C,GAAE,WAIjDyD,cAAetF,UACb,MAAMrC,EAAWH,IAGXwH,EAAa,CACjB,CAAC,iCAASV,EAAQzC,IAClB,CAAC,qBAAOyC,EAAQ/C,QAChB,CAAC,2BAAQ+C,EAAQC,SAAW,IAC5B,CAAC,iCAASD,EAAQE,kBAAoB,IACtC,CAAC,qBAAOF,EAAQH,MAChB,CAAC,qBAAOG,EAAQG,QAChB,CAAC,eAAMH,EAAQJ,SAGXgB,EAAcvH,EAASK,aAAa,mCAC1CgH,EAAW3F,QAAQE,IACjB2F,EAAY7G,OAAOkB,KAIrB,MAAM4F,EAAeb,EAAQhC,UAAU9C,IAAI,CAACF,EAAMO,KAAK,CACrD,eAAMA,EAAQ,EACd,2BAAQP,EAAKiE,UAAY,GACzB,eAAMjE,EAAKwC,KACX,2BAAQxC,EAAK8E,aAAe,GAC5B,eAAM9E,EAAKmE,SACX,eAAMnE,EAAKoE,MAAQ,GACnB,eAAMpE,EAAK8F,UACX,eAAM9F,EAAKiG,MACX,qBAAOjG,EAAK6E,MAAQ,GACpB,eAAM7E,EAAK+C,OAAS,MAItB3E,EAAmBC,EAAUwH,EAAc,4BAAS,CAClD,EACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,WAIIpF,EAAapC,EAAS,sBAAD0H,OAASf,EAAQzC,GAAE,WAMhD2D,gBAAiB,CAEflE,QAAUmE,GACD,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS/F,UACd,IAAK,IAADgG,EACF,GAAa,QAATA,EAACC,EAAEC,cAAM,IAAAF,IAARA,EAAUG,OACb,MAAM,IAAIC,MAAM,oEAElB,MAAMxI,EAAO,IAAIyI,WAAWJ,EAAEC,OAAOC,QAC/BxI,EAAW,IAAIF,EAAAA,eACfE,EAASwC,KAAKmG,KAAK1I,GACzB,MAAMG,EAAYJ,EAAS4I,aAAa,GAExC,IAAKxI,EACH,MAAM,IAAIqI,MAAM,gFAGlB,MAAM9E,EAA6B,GAC7BpD,EAAoB,GAGRH,EAAUyI,OAAO,GACzBlI,SAAUC,IAClBL,EAAQuI,KAAKlI,EAAKmI,SAIpB3I,EAAU4I,QAAQ,CAACpH,EAAKqH,KACtB,GAAkB,IAAdA,EAAiB,OAErB,MAAMrF,EAA0B,CAAC,EAC3BsF,EAAoB,GAE1BtH,EAAIjB,SAAUC,IACZsI,EAAOJ,KAAKlI,EAAKmI,SAGnBxI,EAAQmB,QAAQ,CAACI,EAAQI,KACvB,MAAM6G,EAAQG,EAAOhH,GACrB,QAAciH,IAAVJ,GAAiC,OAAVA,EAAgB,OAE3C,MAAMK,EAAMlD,OAAO6C,GAAOM,OAC1B,GAAY,KAARD,EAEJ,OAAQtH,GACN,IAAK,KACL,IAAK,eACH8B,EAAOO,KAAOiF,EACd,MACF,IAAK,qBACHxF,EAAOQ,OAASgF,EAChB,MACF,IAAK,qBACHxF,EAAOS,MAAQ+E,EACf,MACF,IAAK,eACHxF,EAAOU,QAAU8E,EACjB,MACF,IAAK,eACHxF,EAAO5C,KAAe,uBAARoI,EAAgB,WAAa,SAC3C,MACF,IAAK,eACHxF,EAAOc,MAAQ0E,UAKDD,IAAhBvF,EAAOO,MAAsC,KAAhBP,EAAOO,MACtCR,EAAQmF,KAAKlF,KAIjBoE,EAAQrE,EACV,CAAE,MAAO2F,GACPrB,EAAOqB,EACT,GAEFpB,EAAOqB,QAAU,IAAMtB,EAAO,IAAIQ,MAAM,2CACxCP,EAAOsB,kBAAkB1B,KAK7BnD,UAAYmD,GACH,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS/F,UACd,IAAK,IAADoH,EACF,GAAa,QAATA,EAACnB,EAAEC,cAAM,IAAAkB,IAARA,EAAUjB,OACb,MAAM,IAAIC,MAAM,oEAElB,MAAMxI,EAAO,IAAIyI,WAAWJ,EAAEC,OAAOC,QAC/BxI,EAAW,IAAIF,EAAAA,eACfE,EAASwC,KAAKmG,KAAK1I,GACzB,MAAMG,EAAYJ,EAAS4I,aAAa,GAExC,IAAKxI,EACH,MAAM,IAAIqI,MAAM,gFAGlB,MAAM9D,EAAiC,GACjCpE,EAAoB,GAGRH,EAAUyI,OAAO,GACzBlI,SAAUC,IAClBL,EAAQuI,KAAKlI,EAAKmI,SAIpB3I,EAAU4I,QAAQ,CAACpH,EAAKqH,KACtB,GAAkB,IAAdA,EAAiB,OAErB,MAAMS,EAA8B,CAAC,EAC/BR,EAAoB,GAE1BtH,EAAIjB,SAAUC,IACZsI,EAAOJ,KAAKlI,EAAKmI,SAGnBxI,EAAQmB,QAAQ,CAACI,EAAQI,KACvB,MAAM6G,EAAQG,EAAOhH,GACrB,QAAciH,IAAVJ,GAAiC,OAAVA,EAAgB,OAE3C,MAAMK,EAAMlD,OAAO6C,GAAOM,OAC1B,GAAY,KAARD,EAEJ,OAAQtH,GACN,IAAK,eACH4H,EAASvF,KAAOiF,EAChB,MACF,IAAK,qBACHM,EAASjE,WAAa2D,EACtB,MACF,IAAK,qBACHM,EAAShE,cAAgB0D,EACzB,MACF,IAAK,2BACHM,EAAS/D,YAAcyD,EACvB,MACF,IAAK,2BACHM,EAAS9D,SAAWwD,EACpB,MACF,IAAK,eACHM,EAAS3D,KAAOqD,EAChB,MACF,IAAK,2BACH,CACE,MAAMO,EAAI3D,OAAOoD,GACjBM,EAAS7D,aAAeG,OAAOC,SAAS0D,GAAKA,EAAI,CACnD,CACA,MACF,IAAK,eACH,CACE,MAAMA,EAAI3D,OAAOoD,GACjBM,EAAS5D,SAAWE,OAAOC,SAAS0D,GAAKA,EAAI,CAC/C,CACA,MACF,IAAK,eACHD,EAASnD,OAAS6C,EAClB,MACF,IAAK,qBACHM,EAASlD,KAAO4C,EAChB,MACF,IAAK,2BACHM,EAASjD,YAAc2C,EACvB,MACF,IAAK,eACHM,EAAShF,MAAQ0E,KAKnBM,EAASvF,MACXQ,EAAUmE,KAAKY,KAInB1B,EAAQrD,EACV,CAAE,MAAO2E,GACPrB,EAAOqB,EACT,GAEFpB,EAAOqB,QAAU,IAAMtB,EAAO,IAAIQ,MAAM,2CACxCP,EAAOsB,kBAAkB1B,KAK7Bf,UAAYe,GACH,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS/F,UACd,IAAK,IAADuH,EACF,GAAa,QAATA,EAACtB,EAAEC,cAAM,IAAAqB,IAARA,EAAUpB,OACb,MAAM,IAAIC,MAAM,oEAElB,MAAMxI,EAAO,IAAIyI,WAAWJ,EAAEC,OAAOC,QAC/BxI,EAAW,IAAIF,EAAAA,eACfE,EAASwC,KAAKmG,KAAK1I,GACzB,MAAMG,EAAYJ,EAAS4I,aAAa,GAExC,IAAKxI,EACH,MAAM,IAAIqI,MAAM,gFAGlB,MAAM1B,EAAiC,GACjCxG,EAAoB,GAGRH,EAAUyI,OAAO,GACzBlI,SAAUC,IAClBL,EAAQuI,KAAKlI,EAAKmI,SAIpB3I,EAAU4I,QAAQ,CAACpH,EAAKqH,KACtB,GAAkB,IAAdA,EAAiB,OAErB,MAAMjC,EAA8B,CAAC,EAC/BkC,EAAoB,GAE1BtH,EAAIjB,SAAUC,IACZsI,EAAOJ,KAAKlI,EAAKmI,SAGnBxI,EAAQmB,QAAQ,CAACI,EAAQI,KACvB,MAAM6G,EAAQG,EAAOhH,GACrB,QAAciH,IAAVJ,GAAiC,OAAVA,EAAgB,OAE3C,MAAMK,EAAMlD,OAAO6C,GAAOM,OAC1B,GAAKD,EAEL,OAAQtH,GACN,IAAK,iCACHkF,EAAS9C,GAAKkF,EACd,MACF,IAAK,qBACHpC,EAASvB,WAAa2D,EACtB,MACF,IAAK,qBACHpC,EAAStB,cAAgB0D,EACzB,MACF,IAAK,2BACHpC,EAASrB,YAAcyD,EACvB,MACF,IAAK,eACHpC,EAASC,MAAQmC,EACjB,MACF,IAAK,qBACHpC,EAASE,YAAclB,OAAOoD,IAAQ,EACtC,MACF,IAAK,eACHpC,EAAST,OAAS6C,EAClB,MACF,IAAK,qBACHpC,EAASR,KAAO4C,KAKlBpC,EAASC,OACXF,EAAU+B,KAAK9B,KAInBgB,EAAQjB,EACV,CAAE,MAAOuC,GACPrB,EAAOqB,EACT,GAEFpB,EAAOqB,QAAU,IAAMtB,EAAO,IAAIQ,MAAM,2CACxCP,EAAOsB,kBAAkB1B,MAM/B+B,kBAAmB,CAEjBlG,QAAStB,UACP,MAeMrC,EAAWH,IAEjBE,EAAmBC,EAjBE,CACnB,CACE,GAAM,GACN,eAAM,qBACN,qBAAO,gBACP,qBAAO,mBACP,eAAM,qEACN,eAAM,eACN,2BAAQ,EACR,qBAAO,EACP,qBAAO,GACP,eAAM,oCAMiC,wCAAW,CACpD,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,WAIIoC,EAAapC,EAAU,+CAI/B2E,UAAWtC,UACT,MAuBMrC,EAAWH,IAEjBE,EAAmBC,EAzBE,CACnB,CACE,GAAM,GACN,qBAAO,qBACP,qBAAO,kCACP,2BAAQ,wCACR,eAAM,4BACN,2BAAQ,2BACR,2BAAQ,IACR,eAAM,GACN,eAAM,QACN,qBAAO,IACP,2BAAQ,EACR,2BAAQ,IACR,uCAAU,EACV,uCAAU,KACV,eAAM,eACN,qBAAO,GACP,2BAAQ,yCACR,eAAM,0CAMiC,8CAAY,CACrD,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,WAIIoC,EAAapC,EAAU,qDAI/B+G,UAAW1E,UACT,MAcMrC,EAAWH,IAEjBE,EAAmBC,EAhBE,CACnB,CACE,iCAAS,eACT,qBAAO,qBACP,qBAAO,kCACP,2BAAQ,wCACR,eAAM,2DACN,qBAAO,IACP,eAAM,qBACN,qBAAO,aACP,iCAAS,IAM8B,wCAAW,CACpD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WAIIoC,EAAapC,EAAU,+CAI/B0G,SAAUrE,UACR,MAaMrC,EAAWH,IAEjBE,EAAmBC,EAfE,CACnB,CACE,iCAAS,eACT,qBAAO,qBACP,2BAAQ,wCACR,iCAAS,qEACT,2BAAQ,IACR,eAAM,2BACN,qBAAO,aACP,iCAAS,IAM8B,wCAAW,CACpD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WAIIoC,EAAapC,EAAU,iDAMtB8J,EAAgBpG,EAChBmE,EAAkBnE,EAAWmE,gBAC7BkC,EAAiBrG,EAAWmG,iB,6EC/zBzC,MAAMG,GAAoBC,EAAAA,EAAAA,IAAeC,IAAUC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAqC9I,MAAO4I,EAAOG,GAAIC,KAAK,UAASC,UAC7HC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,WAAW9I,MAAO4I,EAAOO,GAAGF,SAAA,EACzCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qGAAoGG,SAChHL,EAAOQ,MAEVP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAA0B9I,MAAO4I,EAAOS,UAEnD,CACdxG,KAAM,oBACNyG,QAAS,CAAC,QAENC,GAAYZ,EAAAA,EAAAA,IAAea,GAAWA,EAAQT,GAAI,CACtDlG,KAAM,YACNyG,QAAS,CAAC,QAyIZ,EAvIgB,SAAgBG,GAId,IAJe,MAC/BC,EAAK,SACLT,EAAQ,SACRU,EAAW,OACEF,EACb,MAAMG,GAAaC,EAAAA,EAAAA,QAAwB,OACpCC,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,IAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAGzB,CACDG,EAAG,EACHC,EAAG,IAECC,GAAiBC,EAAAA,EAAAA,aAAY,KACjC,MAAMC,EAAKX,EAAWY,QACtB,GAAW,OAAPD,EAAa,OACjB,MAAME,EAAOF,EAAGG,wBAChB,OAAQf,GACN,IAAK,SACH,CACE,MAAMgB,EAAO,EACbT,EAAU,CACRC,EAAGM,EAAKxK,KAAOwK,EAAK9J,MAAQgK,EAC5BP,EAAGK,EAAKvK,QAEZ,CACA,MACF,IAAK,OACH,CACE,MAAMyK,EAAO,EACbT,EAAU,CACRC,EAAGM,EAAKxK,KACRmK,EAAGK,EAAK1K,IAAM0K,EAAKG,OAASD,GAEhC,CACA,MACF,IAAK,QACH,CACE,MAAMA,EAAO,EACbT,EAAU,CACRC,EAAGM,EAAKtK,MACRiK,EAAGK,EAAK1K,IAAM0K,EAAKG,OAASD,GAEhC,CACA,MAEF,QACE,CACE,MAAMA,EAAO,EACbT,EAAU,CACRC,EAAGM,EAAKxK,KAAOwK,EAAK9J,MAAQgK,EAC5BP,EAAGK,EAAK1K,KAEZ,IAGH,CAAC4J,KACJkB,EAAAA,EAAAA,WAAU,KACR,IAAKf,EAAM,OACXO,IACA,MAAMS,EAAWA,IAAMT,IACjBU,EAAWA,IAAMV,IAGvB,OAFA9I,OAAOyJ,iBAAiB,SAAUF,GAAU,GAC5CvJ,OAAOyJ,iBAAiB,SAAUD,GAC3B,KACLxJ,OAAO0J,oBAAoB,SAAUH,GAAU,GAC/CvJ,OAAO0J,oBAAoB,SAAUF,KAEtC,CAACjB,EAAMO,IACV,MACMa,EAAkC,CAAC,EACzC,OAAQvB,GACN,IAAK,SACHuB,EAAWC,UAAS,mBAAA/E,OAJZ,EAIqC,OAC7C,MACF,IAAK,OACH8E,EAAWC,UAAS,0BAAA/E,OAPZ,EAO4C,cACpD,MACF,IAAK,QACH8E,EAAWC,UAAS,aAAA/E,OAVZ,EAU+B,aACvC,MAEF,QACE8E,EAAWC,UAAS,gCAAA/E,OAdZ,EAckD,QAG9D,MAEMgF,EAAkC,CACtCzK,MAHY,GAIZiK,OAJY,IAMG,QAAbjB,EACFzK,OAAOmM,OAAOD,EAAY,CACxBlL,QAPiB,EAQjBD,KAAM,MACNkL,UAAW,mCAES,WAAbxB,EACTzK,OAAOmM,OAAOD,EAAY,CACxBrL,KAbiB,EAcjBE,KAAM,MACNkL,UAAW,mCAES,SAAbxB,EACTzK,OAAOmM,OAAOD,EAAY,CACxBjL,OAnBiB,EAoBjBJ,IAAK,MACLoL,UAAW,mCAES,UAAbxB,GACTzK,OAAOmM,OAAOD,EAAY,CACxBnL,MAzBiB,EA0BjBF,IAAK,MACLoL,UAAW,mCAGf,MAAMG,EAAcxB,GAAOyB,EAAAA,EAAAA,eAAkC1C,EAAAA,EAAAA,KAACH,EAAiB,CAACK,GAAI,CAClF9I,KAAMgK,EAAOE,EACbpK,IAAKkK,EAAOG,GACXjB,GAAI+B,EAAY9B,GAAIM,EAAOL,GAAI+B,IAAgBzJ,SAASI,MAAQ,KACnE,OAA4B8G,EAAAA,EAAAA,KAACU,EAAS,CAACR,IAAIG,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,oCAAoC0C,IAAK5B,EAAY6B,aAAcA,IAAM1B,GAAQ,GAAO2B,aAAcA,IAAM3B,GAAQ,GAAQ4B,QAASA,IAAM5B,GAAQ,GAAO6B,OAAQA,IAAM7B,GAAQ,GAAOd,SAAA,CAC7OA,EACAqC,MAEP,C","sources":["utils/excelUtils.ts","components/Tooltip.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/strict-boolean-expressions, no-magic-numbers */\nimport * as ExcelJS from 'exceljs';\nimport { Client, WorkItem, Invoice, Estimate, ID, InvoiceStatus, WorkStatus, EstimateStatus } from '../types/domain';\n\n// Helper types for Excel export\ninterface ExportClient {\n  [key: string]: string | number;\n  'ID': ID;\n  '이름': string;\n  '휴대폰': string;\n  '이메일': string;\n  '주소': string;\n  '유형': string;\n  '총청구액': number;\n  '미수금': number;\n  '등록일': string;\n  '비고': string;\n}\n\ninterface ExportWorkItem {\n  [key: string]: string | number;\n  'ID': ID;\n  '건축주': string;\n  '작업장': string;\n  '프로젝트': string;\n  '내용': string;\n  '카테고리': string;\n  '기본단가': number;\n  '수량': number;\n  '단위': string;\n  '총금액': number;\n  '인부인원': string | number;\n  '인부단가': string | number;\n  '일반인부인원': string | number;\n  '일반인부단가': string | number;\n  '상태': string;\n  '작업일': string;\n  '세부작업': string;\n  '비고': string;\n}\n\ninterface ExportInvoice {\n  [key: string]: string | number;\n  '청구서번호': string;\n  '건축주': string;\n  '프로젝트': string;\n  '작업장주소': string;\n  '청구금액': number;\n  '상태': InvoiceStatus;\n  '발행일': string;\n  '작업항목수': number;\n}\n\ninterface ExportEstimate {\n  [key: string]: string | number;\n  '견적서번호': string;\n  '건축주': string;\n  '작업장': string;\n  '프로젝트': string;\n  '제목': string;\n  '총금액': number;\n  '상태': string;\n  '발행일': string;\n  '작업항목수': number;\n}\n\n// Helper functions\nconst createWorkbook = (): ExcelJS.Workbook => {\n  return new ExcelJS.Workbook();\n};\n\nconst addJsonDataToSheet = <T extends Record<string, string | number | boolean | null | undefined>>(workbook: ExcelJS.Workbook, data: T[], sheetName: string, colWidths?: number[]): ExcelJS.Worksheet => {\n  const worksheet = workbook.addWorksheet(sheetName);\n  \n  if (data.length > 0) {\n    // Add headers\n    const headers = Object.keys(data[0]);\n    const headerRow = worksheet.addRow(headers);\n    \n    // Style headers\n    headerRow.eachCell((cell) => {\n      cell.font = { bold: true };\n      cell.fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFE0E0E0' }\n      };\n      cell.border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' }\n      };\n    });\n    \n    // Add data rows\n    data.forEach(item => {\n      const row = headers.map(header => item[header]);\n      const dataRow = worksheet.addRow(row);\n      \n      // Style data cells\n      dataRow.eachCell((cell) => {\n        cell.border = {\n          top: { style: 'thin' },\n          left: { style: 'thin' },\n          bottom: { style: 'thin' },\n          right: { style: 'thin' }\n        };\n      });\n    });\n    \n    // Set column widths\n    if (Array.isArray(colWidths)) {\n      colWidths.forEach((width, index) => {\n        const column = worksheet.getColumn(index + 1);\n        column.width = width;\n      });\n    }\n  }\n  \n  return worksheet;\n};\n\nconst saveWorkbook = async (workbook: ExcelJS.Workbook, filename: string): Promise<void> => {\n  const buffer = await workbook.xlsx.writeBuffer();\n  const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n  const url = window.URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = filename;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  window.URL.revokeObjectURL(url);\n};\n\n// Export functions\nexport const excelUtils = {\n  // 건축주 데이터 내보내기\n  clients: async (clients: Client[]): Promise<void> => {\n    const data: ExportClient[] = clients.map(client => ({\n      'ID': client.id,\n      '이름': client.name,\n      '휴대폰': client.mobile ?? '',\n      '이메일': client.email ?? '',\n      '주소': client.address ?? '',\n      '유형': client.type === 'BUSINESS' ? '사업자' : '개인',\n      '총청구액': (typeof client.totalBilled === 'number' ? client.totalBilled : 0),\n      '미수금': (typeof client.outstanding === 'number' ? client.outstanding : 0),\n      '등록일': client.createdAt ?? '',\n      '비고': client.notes ?? ''\n    }));\n\n    const workbook = createWorkbook();\n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, data, '건축주 목록', [\n      8,   // ID\n      12,  // 이름  \n      15,  // 휴대폰\n      20,  // 이메일\n      25,  // 주소\n      8,   // 유형\n      12,  // 총청구액\n      12,  // 미수금\n      12,  // 등록일\n      20   // 비고\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, '건축주_목록.xlsx');\n  },\n\n  // 작업 항목 데이터 내보내기\n  workItems: async (workItems: WorkItem[]): Promise<void> => {\n    const data: ExportWorkItem[] = workItems.map(item => ({\n      'ID': item.id,\n      '건축주': item.clientName ?? '',\n      '작업장': item.workplaceName ?? '',\n      '프로젝트': item.projectName ?? '',\n      '내용': item.name,\n      '카테고리': item.category ?? '',\n      '기본단가': (typeof item.defaultPrice === 'number' ? item.defaultPrice : 0),\n      '수량': (typeof item.quantity === 'number' ? item.quantity : 0),\n      '단위': item.unit ?? '',\n      '총금액': (Number.isFinite(Number(item.defaultPrice)) ? Number(item.defaultPrice) : 0) * (Number.isFinite(Number(item.quantity)) ? Number(item.quantity) : 0),\n      '인부인원': String(item.laborPersons ?? ''),\n      '인부단가': String(item.laborUnitRate ?? ''),\n      '일반인부인원': String(item.laborPersonsGeneral ?? ''),\n      '일반인부단가': String(item.laborUnitRateGeneral ?? ''),\n      '상태': item.status ?? '',\n      '작업일': item.date ?? '',\n      '세부작업': item.description ?? '',\n      '비고': item.notes ?? ''\n    }));\n\n    const workbook = createWorkbook();\n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, data, '작업 항목', [\n      8,   // ID\n      12,  // 건축주\n      15,  // 작업장\n      15,  // 프로젝트\n      20,  // 내용\n      10,  // 카테고리\n      12,  // 기본단가\n      8,   // 수량\n      8,   // 단위\n      12,  // 총금액\n      10,  // 인부인원\n      12,  // 인부단가\n      12,  // 일반인부인원\n      12,  // 일반인부단가\n      8,   // 상태\n      12,  // 작업일\n      20,  // 세부작업\n      15   // 비고\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, '작업_항목.xlsx');\n  },\n\n  // 청구서 데이터 내보내기\n  invoices: async (invoices: Invoice[]): Promise<void> => {\n    const data: ExportInvoice[] = invoices.map(invoice => ({\n      '청구서번호': invoice.id,\n      '건축주': invoice.client,\n      '프로젝트': invoice.project || '',\n      '작업장주소': invoice.workplaceAddress || '',\n      '청구금액': invoice.amount,\n      '상태': invoice.status,\n      '발행일': invoice.date,\n      '작업항목수': invoice.workItems.length\n    }));\n\n    const workbook = createWorkbook();\n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, data, '청구서 목록', [\n      15,  // 청구서번호\n      12,  // 건축주\n      15,  // 프로젝트\n      25,  // 작업장주소\n      12,  // 청구금액\n      10,  // 상태\n      12,  // 발행일\n      10   // 작업항목수\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, '청구서_목록.xlsx');\n  },\n\n  // 견적서 데이터 내보내기\n  estimates: async (estimates: Estimate[]): Promise<void> => {\n    const data: ExportEstimate[] = estimates.map(estimate => ({\n      '견적서번호': estimate.id,\n      '건축주': estimate.clientName || '',\n      '작업장': estimate.workplaceName || '',\n      '프로젝트': estimate.projectName || '',\n      '제목': estimate.title,\n      '총금액': estimate.totalAmount,\n      '상태': estimate.status,\n      '발행일': estimate.date || '',\n      '작업항목수': estimate.items.length\n    }));\n\n    const workbook = createWorkbook();\n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, data, '견적서 목록', [\n      15,  // 견적서번호\n      12,  // 건축주\n      15,  // 작업장\n      15,  // 프로젝트\n      20,  // 제목\n      12,  // 총금액\n      10,  // 상태\n      12,  // 발행일\n      10   // 작업항목수\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, '견적서_목록.xlsx');\n  },\n\n  // 상세 견적서 내보내기\n  estimateDetail: async (estimate: Estimate): Promise<void> => {\n    const workbook = createWorkbook();\n    \n    // 견적서 정보 시트\n    const headerData = [\n      ['견적서번호', estimate.id],\n      ['건축주', estimate.clientName || ''],\n      ['작업장', estimate.workplaceName || ''],\n      ['프로젝트', estimate.projectName || ''],\n      ['제목', estimate.title],\n      ['발행일', estimate.date || ''],\n      ['유효기한', estimate.validUntil || ''],\n      ['총금액', estimate.totalAmount],\n      ['상태', estimate.status],\n      ['비고', estimate.notes || '']\n    ];\n    \n    const headerSheet = workbook.addWorksheet('견적서 정보');\n    headerData.forEach(row => {\n      headerSheet.addRow(row);\n    });\n    \n    // 작업 항목 시트\n    const workItemData = estimate.items.map((item, index) => ({\n      '순번': index + 1,\n      '카테고리': item.category || '',\n      '내용': item.name,\n      '세부작업': item.description || '',\n      '수량': item.quantity,\n      '단위': item.unit || '',\n      '단가': item.unitPrice,\n      '금액': typeof item.quantity === 'number' && typeof item.unitPrice === 'number' ? item.quantity * item.unitPrice : 0,\n      '비고': item.notes || ''\n    }));\n    \n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, workItemData, '작업 내역', [\n      8,   // 순번\n      12,  // 카테고리\n      20,  // 내용\n      20,  // 세부작업\n      8,   // 수량\n      8,   // 단위\n      12,  // 단가\n      12,  // 금액\n      15   // 비고\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, `견적서_${estimate.id}.xlsx`);\n  },\n\n  // 상세 청구서 내보내기\n  invoiceDetail: async (invoice: Invoice): Promise<void> => {\n    const workbook = createWorkbook();\n    \n    // 청구서 정보 시트\n    const headerData = [\n      ['청구서번호', invoice.id],\n      ['건축주', invoice.client],\n      ['프로젝트', invoice.project || ''],\n      ['작업장주소', invoice.workplaceAddress || ''],\n      ['발행일', invoice.date],\n      ['총금액', invoice.amount],\n      ['상태', invoice.status]\n    ];\n    \n    const headerSheet = workbook.addWorksheet('청구서 정보');\n    headerData.forEach(row => {\n      headerSheet.addRow(row);\n    });\n    \n    // 작업 항목 시트\n    const workItemData = invoice.workItems.map((item, index) => ({\n      '순번': index + 1,\n      '카테고리': item.category || '',\n      '내용': item.name,\n      '세부작업': item.description || '',\n      '수량': item.quantity,\n      '단위': item.unit || '',\n      '단가': item.unitPrice,\n      '금액': item.total,\n      '작업일': item.date || '',\n      '비고': item.notes || ''\n    }));\n    \n    /* eslint-disable no-magic-numbers */\n    addJsonDataToSheet(workbook, workItemData, '작업 내역', [\n      8,   // 순번\n      12,  // 카테고리\n      20,  // 내용\n      20,  // 세부작업\n      8,   // 수량\n      8,   // 단위\n      12,  // 단가\n      12,  // 금액\n      12,  // 작업일\n      15   // 비고\n    ]);\n    /* eslint-enable no-magic-numbers */\n    \n    await saveWorkbook(workbook, `청구서_${invoice.id}.xlsx`);\n  },\n\n  /**\n   * 파일 업로드 및 파싱 유틸리티\n   */\n  importFromExcel: {\n    // 건축주 데이터 업로드\n    clients: (file: File): Promise<Partial<Client>[]> => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          try {\n            if (!e.target?.result) {\n              throw new Error('파일을 읽을 수 없습니다.');\n            }\n            const data = new Uint8Array(e.target.result as ArrayBuffer);\n            const workbook = new ExcelJS.Workbook();\n            await workbook.xlsx.load(data);\n            const worksheet = workbook.getWorksheet(1);\n            \n            if (!worksheet) {\n              throw new Error('워크시트를 찾을 수 없습니다.');\n            }\n\n            const clients: Partial<Client>[] = [];\n            const headers: string[] = [];\n            \n            // Get headers from first row\n            const headerRow = worksheet.getRow(1);\n            headerRow.eachCell((cell) => {\n              headers.push(cell.value as string);\n            });\n\n            // Process data rows\n            worksheet.eachRow((row, rowNumber) => {\n              if (rowNumber === 1) return; // Skip header row\n              \n              const client: Partial<Client> = {};\n              const values: unknown[] = [];\n              \n              row.eachCell((cell) => {\n                values.push(cell.value);\n              });\n\n              headers.forEach((header, index) => {\n                const value = values[index];\n                if (value === undefined || value === null) return;\n                \n                const val = String(value).trim();\n                if (val === '') return;\n\n                switch (header) {\n                  case 'ID':\n                  case '이름':\n                    client.name = val;\n                    break;\n                  case '휴대폰':\n                    client.mobile = val;\n                    break;\n                  case '이메일':\n                    client.email = val;\n                    break;\n                  case '주소':\n                    client.address = val;\n                    break;\n                  case '유형':\n                    client.type = val === '사업자' ? 'BUSINESS' : 'PERSON';\n                    break;\n                  case '비고':\n                    client.notes = val;\n                    break;\n                }\n              });\n              \n              if (client.name !== undefined && client.name !== '') {\n                clients.push(client);\n              }\n            });\n\n            resolve(clients);\n          } catch (error) {\n            reject(error);\n          }\n        };\n        reader.onerror = () => reject(new Error('파일 읽기 오류'));\n        reader.readAsArrayBuffer(file);\n      });\n    },\n\n    // 작업 항목 데이터 업로드\n    workItems: (file: File): Promise<Partial<WorkItem>[]> => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          try {\n            if (!e.target?.result) {\n              throw new Error('파일을 읽을 수 없습니다.');\n            }\n            const data = new Uint8Array(e.target.result as ArrayBuffer);\n            const workbook = new ExcelJS.Workbook();\n            await workbook.xlsx.load(data);\n            const worksheet = workbook.getWorksheet(1);\n            \n            if (!worksheet) {\n              throw new Error('워크시트를 찾을 수 없습니다.');\n            }\n\n            const workItems: Partial<WorkItem>[] = [];\n            const headers: string[] = [];\n            \n            // Get headers from first row\n            const headerRow = worksheet.getRow(1);\n            headerRow.eachCell((cell) => {\n              headers.push(cell.value as string);\n            });\n\n            // Process data rows\n            worksheet.eachRow((row, rowNumber) => {\n              if (rowNumber === 1) return; // Skip header row\n              \n              const workItem: Partial<WorkItem> = {};\n              const values: unknown[] = [];\n              \n              row.eachCell((cell) => {\n                values.push(cell.value);\n              });\n\n              headers.forEach((header, index) => {\n                const value = values[index];\n                if (value === undefined || value === null) return;\n                \n                const val = String(value).trim();\n                if (val === '') return;\n\n                switch (header) {\n                  case '내용':\n                    workItem.name = val;\n                    break;\n                  case '건축주':\n                    workItem.clientName = val;\n                    break;\n                  case '작업장':\n                    workItem.workplaceName = val;\n                    break;\n                  case '프로젝트':\n                    workItem.projectName = val;\n                    break;\n                  case '카테고리':\n                    workItem.category = val;\n                    break;\n                  case '단위':\n                    workItem.unit = val;\n                    break;\n                  case '기본단가':\n                    {\n                      const n = Number(val);\n                      workItem.defaultPrice = Number.isFinite(n) ? n : 0;\n                    }\n                    break;\n                  case '수량':\n                    {\n                      const n = Number(val);\n                      workItem.quantity = Number.isFinite(n) ? n : 0;\n                    }\n                    break;\n                  case '상태':\n                    workItem.status = val as WorkStatus;\n                    break;\n                  case '작업일':\n                    workItem.date = val;\n                    break;\n                  case '세부작업':\n                    workItem.description = val;\n                    break;\n                  case '비고':\n                    workItem.notes = val;\n                    break;\n                }\n              });\n              \n              if (workItem.name) {\n                workItems.push(workItem);\n              }\n            });\n\n            resolve(workItems);\n          } catch (error) {\n            reject(error);\n          }\n        };\n        reader.onerror = () => reject(new Error('파일 읽기 오류'));\n        reader.readAsArrayBuffer(file);\n      });\n    },\n\n    // 견적서 데이터 업로드\n    estimates: (file: File): Promise<Partial<Estimate>[]> => {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = async (e) => {\n          try {\n            if (!e.target?.result) {\n              throw new Error('파일을 읽을 수 없습니다.');\n            }\n            const data = new Uint8Array(e.target.result as ArrayBuffer);\n            const workbook = new ExcelJS.Workbook();\n            await workbook.xlsx.load(data);\n            const worksheet = workbook.getWorksheet(1);\n            \n            if (!worksheet) {\n              throw new Error('워크시트를 찾을 수 없습니다.');\n            }\n\n            const estimates: Partial<Estimate>[] = [];\n            const headers: string[] = [];\n            \n            // Get headers from first row\n            const headerRow = worksheet.getRow(1);\n            headerRow.eachCell((cell) => {\n              headers.push(cell.value as string);\n            });\n\n            // Process data rows\n            worksheet.eachRow((row, rowNumber) => {\n              if (rowNumber === 1) return; // Skip header row\n              \n              const estimate: Partial<Estimate> = {};\n              const values: unknown[] = [];\n              \n              row.eachCell((cell) => {\n                values.push(cell.value);\n              });\n\n              headers.forEach((header, index) => {\n                const value = values[index];\n                if (value === undefined || value === null) return;\n                \n                const val = String(value).trim();\n                if (!val) return;\n\n                switch (header) {\n                  case '견적서번호':\n                    estimate.id = val;\n                    break;\n                  case '건축주':\n                    estimate.clientName = val;\n                    break;\n                  case '작업장':\n                    estimate.workplaceName = val;\n                    break;\n                  case '프로젝트':\n                    estimate.projectName = val;\n                    break;\n                  case '제목':\n                    estimate.title = val;\n                    break;\n                  case '총금액':\n                    estimate.totalAmount = Number(val) || 0;\n                    break;\n                  case '상태':\n                    estimate.status = val as EstimateStatus;\n                    break;\n                  case '발행일':\n                    estimate.date = val;\n                    break;\n                }\n              });\n              \n              if (estimate.title) {\n                estimates.push(estimate);\n              }\n            });\n\n            resolve(estimates);\n          } catch (error) {\n            reject(error);\n          }\n        };\n        reader.onerror = () => reject(new Error('파일 읽기 오류'));\n        reader.readAsArrayBuffer(file);\n      });\n    }\n  },\n\n  // 템플릿 다운로드\n  downloadTemplates: {\n    // 건축주 템플릿\n    clients: async (): Promise<void> => {\n      const templateData = [\n        {\n          'ID': '',\n          '이름': '홍길동',\n          '휴대폰': '010-1234-5678',\n          '이메일': 'hong@example.com',\n          '주소': '서울시 강남구 테헤란로 123',\n          '유형': '개인',\n          '총청구액': 0,\n          '미수금': 0,\n          '등록일': '',\n          '비고': '샘플 건축주'\n        }\n      ];\n\n      const workbook = createWorkbook();\n      /* eslint-disable no-magic-numbers */\n      addJsonDataToSheet(workbook, templateData, '건축주 템플릿', [\n        8,   // ID\n        12,  // 이름  \n        15,  // 휴대폰\n        20,  // 이메일\n        25,  // 주소\n        8,   // 유형\n        12,  // 총청구액\n        12,  // 미수금\n        12,  // 등록일\n        20   // 비고\n      ]);\n      /* eslint-enable no-magic-numbers */\n      \n      await saveWorkbook(workbook, '건축주_템플릿.xlsx');\n    },\n\n    // 작업 항목 템플릿\n    workItems: async (): Promise<void> => {\n      const templateData = [\n        {\n          'ID': '',\n          '건축주': '홍길동',\n          '작업장': '서울 아파트',\n          '프로젝트': '욕실 리모델링',\n          '내용': '타일 시공',\n          '카테고리': '마감공사',\n          '기본단가': 50000,\n          '수량': 10,\n          '단위': 'm²',\n          '총금액': 500000,\n          '인부인원': 2,\n          '인부단가': 200000,\n          '일반인부인원': 1,\n          '일반인부단가': 150000,\n          '상태': '예정',\n          '작업일': '',\n          '세부작업': '벽면 타일 교체',\n          '비고': '샘플 작업항목'\n        }\n      ];\n\n      const workbook = createWorkbook();\n      /* eslint-disable no-magic-numbers */\n      addJsonDataToSheet(workbook, templateData, '작업항목 템플릿', [\n        8,   // ID\n        12,  // 건축주\n        15,  // 작업장\n        15,  // 프로젝트\n        20,  // 내용\n        10,  // 카테고리\n        12,  // 기본단가\n        8,   // 수량\n        8,   // 단위\n        12,  // 총금액\n        10,  // 인부인원\n        12,  // 인부단가\n        12,  // 일반인부인원\n        12,  // 일반인부단가\n        8,   // 상태\n        12,  // 작업일\n        20,  // 세부작업\n        15   // 비고\n      ]);\n      /* eslint-enable no-magic-numbers */\n      \n      await saveWorkbook(workbook, '작업항목_템플릿.xlsx');\n    },\n\n    // 견적서 템플릿\n    estimates: async (): Promise<void> => {\n      const templateData = [\n        {\n          '견적서번호': 'EST-2024-001',\n          '건축주': '홍길동',\n          '작업장': '서울 아파트',\n          '프로젝트': '욕실 리모델링',\n          '제목': '욕실 리모델링 견적서',\n          '총금액': 1000000,\n          '상태': '검토중',\n          '발행일': '2024-01-01',\n          '작업항목수': 5\n        }\n      ];\n\n      const workbook = createWorkbook();\n      /* eslint-disable no-magic-numbers */\n      addJsonDataToSheet(workbook, templateData, '견적서 템플릿', [\n        15,  // 견적서번호\n        12,  // 건축주\n        15,  // 작업장\n        15,  // 프로젝트\n        20,  // 제목\n        12,  // 총금액\n        10,  // 상태\n        12,  // 발행일\n        10   // 작업항목수\n      ]);\n      /* eslint-enable no-magic-numbers */\n      \n      await saveWorkbook(workbook, '견적서_템플릿.xlsx');\n    },\n\n    // 청구서 템플릿\n    invoices: async (): Promise<void> => {\n      const templateData = [\n        {\n          '청구서번호': 'INV-2024-001',\n          '건축주': '홍길동',\n          '프로젝트': '욕실 리모델링',\n          '작업장주소': '서울시 강남구 테헤란로 123',\n          '청구금액': 1000000,\n          '상태': '발송대기',\n          '발행일': '2024-01-01',\n          '작업항목수': 5\n        }\n      ];\n\n      const workbook = createWorkbook();\n      /* eslint-disable no-magic-numbers */\n      addJsonDataToSheet(workbook, templateData, '청구서 템플릿', [\n        15,  // 청구서번호\n        12,  // 건축주\n        15,  // 프로젝트\n        25,  // 작업장주소\n        12,  // 청구금액\n        10,  // 상태\n        12,  // 발행일\n        10   // 작업항목수\n      ]);\n      /* eslint-enable no-magic-numbers */\n      \n      await saveWorkbook(workbook, '청구서_템플릿.xlsx');\n    }\n  }\n};\n\n// Legacy API compatibility\nexport const exportToExcel = excelUtils;\nexport const importFromExcel = excelUtils.importFromExcel;\nexport const createTemplate = excelUtils.downloadTemplates;\n/* eslint-disable @typescript-eslint/strict-boolean-expressions, no-magic-numbers */\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst JSX_tooltipNode_1 = _compiledBlock(_props => <div className=\"pointer-events-none fixed z-[9999]\" style={_props.v0} role=\"tooltip\">\n          <div className=\"relative\" style={_props.v1}>\n            <div className=\"bg-primary-600 text-white text-sm font-medium py-1.5 px-3 rounded-full shadow-lg whitespace-nowrap\">\n              {_props.v2}\n            </div>\n            <div className=\"absolute bg-primary-600\" style={_props.v3} />\n          </div>\n        </div>, {\n  name: \"JSX_tooltipNode_1\",\n  portals: [\"v2\"]\n});\nconst Tooltip_1 = _compiledBlock(_props2 => _props2.v0, {\n  name: \"Tooltip_1\",\n  portals: [\"v0\"]\n});\nconst Tooltip = function Tooltip({\n  label,\n  children,\n  position = 'top'\n}: TooltipProps) {\n  const triggerRef = useRef<HTMLSpanElement>(null);\n  const [open, setOpen] = useState(false);\n  const [coords, setCoords] = useState<{\n    x: number;\n    y: number;\n  }>({\n    x: 0,\n    y: 0\n  });\n  const updatePosition = useCallback(() => {\n    const el = triggerRef.current;\n    if (el === null) return;\n    const rect = el.getBoundingClientRect();\n    switch (position) {\n      case 'bottom':\n        {\n          const HALF = 2; // eslint-disable-line no-magic-numbers\n          setCoords({\n            x: rect.left + rect.width / HALF,\n            y: rect.bottom\n          });\n        }\n        break;\n      case 'left':\n        {\n          const HALF = 2; // eslint-disable-line no-magic-numbers\n          setCoords({\n            x: rect.left,\n            y: rect.top + rect.height / HALF\n          });\n        }\n        break;\n      case 'right':\n        {\n          const HALF = 2; // eslint-disable-line no-magic-numbers\n          setCoords({\n            x: rect.right,\n            y: rect.top + rect.height / HALF\n          });\n        }\n        break;\n      case 'top':\n      default:\n        {\n          const HALF = 2; // eslint-disable-line no-magic-numbers\n          setCoords({\n            x: rect.left + rect.width / HALF,\n            y: rect.top\n          });\n        }\n        break;\n    }\n  }, [position]);\n  useEffect(() => {\n    if (!open) return;\n    updatePosition();\n    const onScroll = () => updatePosition();\n    const onResize = () => updatePosition();\n    window.addEventListener('scroll', onScroll, true);\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n      window.removeEventListener('resize', onResize);\n    };\n  }, [open, updatePosition]);\n  const GAP = 6; // px gap between trigger edge and bubble\n  const innerStyle: React.CSSProperties = {};\n  switch (position) {\n    case 'bottom':\n      innerStyle.transform = `translate(-50%, ${GAP}px)`;\n      break;\n    case 'left':\n      innerStyle.transform = `translate(calc(-100% - ${GAP}px), -50%)`;\n      break;\n    case 'right':\n      innerStyle.transform = `translate(${GAP}px, -50%)`;\n      break;\n    case 'top':\n    default:\n      innerStyle.transform = `translate(-50%, calc(-100% - ${GAP}px))`;\n      break;\n  }\n  const ARROW = 10; // px square size\n  const ARROW_OFFSET = 5; // how much the arrow protrudes towards trigger\n  const arrowStyle: React.CSSProperties = {\n    width: ARROW,\n    height: ARROW\n  };\n  if (position === 'top') {\n    Object.assign(arrowStyle, {\n      bottom: -ARROW_OFFSET,\n      left: '50%',\n      transform: 'translateX(-50%) rotate(45deg)'\n    });\n  } else if (position === 'bottom') {\n    Object.assign(arrowStyle, {\n      top: -ARROW_OFFSET,\n      left: '50%',\n      transform: 'translateX(-50%) rotate(45deg)'\n    });\n  } else if (position === 'left') {\n    Object.assign(arrowStyle, {\n      right: -ARROW_OFFSET,\n      top: '50%',\n      transform: 'translateY(-50%) rotate(45deg)'\n    });\n  } else if (position === 'right') {\n    Object.assign(arrowStyle, {\n      left: -ARROW_OFFSET,\n      top: '50%',\n      transform: 'translateY(-50%) rotate(45deg)'\n    });\n  }\n  const tooltipNode = open ? createPortal(/*@million jsx-skip*/<JSX_tooltipNode_1 v0={{\n    left: coords.x,\n    top: coords.y\n  }} v1={innerStyle} v2={label} v3={arrowStyle} />, document.body) : null;\n  return /*@million jsx-skip*/<Tooltip_1 v0={<span className=\"relative inline-flex items-center\" ref={triggerRef} onMouseEnter={() => setOpen(true)} onMouseLeave={() => setOpen(false)} onFocus={() => setOpen(true)} onBlur={() => setOpen(false)}>\n      {children}\n      {tooltipNode}\n    </span>} />;\n};\nimport { block as _block } from \"million/react\";\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\ntype TooltipProps = {\n  label: string;\n  children: React.ReactNode;\n  position?: 'top' | 'bottom' | 'left' | 'right';\n};\nexport default Tooltip;"],"names":["createWorkbook","ExcelJS","addJsonDataToSheet","workbook","data","sheetName","colWidths","worksheet","addWorksheet","length","headers","Object","keys","addRow","eachCell","cell","font","bold","fill","type","pattern","fgColor","argb","border","top","style","left","bottom","right","forEach","item","row","map","header","Array","isArray","width","index","getColumn","saveWorkbook","async","filename","buffer","xlsx","writeBuffer","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","excelUtils","clients","client","_client$mobile","_client$email","_client$address","_client$createdAt","_client$notes","id","name","mobile","email","address","totalBilled","outstanding","createdAt","notes","workItems","_item$clientName","_item$workplaceName","_item$projectName","_item$category","_item$unit","_item$laborPersons","_item$laborUnitRate","_item$laborPersonsGen","_item$laborUnitRateGe","_item$status","_item$date","_item$description","_item$notes","clientName","workplaceName","projectName","category","defaultPrice","quantity","unit","Number","isFinite","String","laborPersons","laborUnitRate","laborPersonsGeneral","laborUnitRateGeneral","status","date","description","invoices","invoice","project","workplaceAddress","amount","estimates","estimate","title","totalAmount","items","estimateDetail","headerData","validUntil","headerSheet","workItemData","unitPrice","concat","invoiceDetail","total","importFromExcel","file","Promise","resolve","reject","reader","FileReader","onload","_e$target","e","target","result","Error","Uint8Array","load","getWorksheet","getRow","push","value","eachRow","rowNumber","values","undefined","val","trim","error","onerror","readAsArrayBuffer","_e$target2","workItem","n","_e$target3","downloadTemplates","exportToExcel","createTemplate","JSX_tooltipNode_1","_compiledBlock","_props","_jsx","className","v0","role","children","_jsxs","v1","v2","v3","portals","Tooltip_1","_props2","_ref","label","position","triggerRef","useRef","open","setOpen","useState","coords","setCoords","x","y","updatePosition","useCallback","el","current","rect","getBoundingClientRect","HALF","height","useEffect","onScroll","onResize","addEventListener","removeEventListener","innerStyle","transform","arrowStyle","assign","tooltipNode","createPortal","ref","onMouseEnter","onMouseLeave","onFocus","onBlur"],"sourceRoot":""}