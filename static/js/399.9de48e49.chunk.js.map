{"version":3,"file":"static/js/399.9de48e49.chunk.js","mappings":"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","sources":["components/invoices/StatsCards.tsx","components/invoices/FilterBar.tsx","components/invoices/InvoicesTable.tsx","components/invoices/InvoiceDetailTable.tsx","components/Invoices.tsx","pages/InvoicesPage.tsx","constants/formatting.ts","components/ConfirmDialog.tsx","hooks/useSelection.ts","hooks/useNumberFormat.ts","hooks/useFilters.ts"],"sourcesContent":["import { compiledBlock as _compiledBlock } from \"million/react\";\nconst StatsCards_1 = _compiledBlock(_props => <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n      {_props.v0}\n      {_props.v1}\n      {_props.v2}\n      {_props.v3}\n    </div>, {\n  name: \"StatsCards_1\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\"]\n});\nconst StatsCards = function StatsCards({\n  invoices\n}: Props) {\n  const totalCount = invoices.length;\n  const totalAmount = invoices.reduce((s, i) => {\n    const n = Number(i.amount);\n    return s + (Number.isFinite(n) ? n : 0);\n  }, 0);\n  const paidCount = invoices.filter(i => i.status === '결제완료').length;\n  const unpaidCount = invoices.filter(i => i.status === '미결제').length;\n  const Card = ({\n    title,\n    value,\n    icon: Icon,\n    bg,\n    iconBg\n  }: {\n    title: string;\n    value: string;\n    icon: ComponentType<SVGProps<SVGSVGElement>>;\n    bg: string;\n    iconBg: string;\n  }) => <div className={`${bg} rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700`}>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex-1\">\n          <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">{title}</p>\n          <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{value}</p>\n        </div>\n        <div className={`${iconBg} rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12`}>\n          <Icon className=\"h-6 w-6\" aria-hidden={true} />\n        </div>\n      </div>\n    </div>;\n  return /*@million jsx-skip*/<StatsCards_1 v0={<Card title=\"총 청구서\" value={`${totalCount}건`} icon={DocumentTextIcon} bg=\"bg-indigo-100 dark:bg-indigo-900/30\" iconBg=\"bg-indigo-500 dark:bg-indigo-600\" />} v1={<Card title=\"결제완료\" value={`${paidCount}건`} icon={CheckCircleIcon} bg=\"bg-green-100 dark:bg-green-900/30\" iconBg=\"bg-green-500 dark:bg-green-600\" />} v2={<Card title=\"미결제\" value={`${unpaidCount}건`} icon={ClockIcon} bg=\"bg-orange-100 dark:bg-orange-900/30\" iconBg=\"bg-orange-500 dark:bg-orange-600\" />} v3={<Card title=\"총 청구 금액\" value={`₩${totalAmount.toLocaleString()}원`} icon={CurrencyDollarIcon} bg=\"bg-blue-100 dark:bg-blue-900/30\" iconBg=\"bg-blue-500 dark:bg-blue-600\" />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { DocumentTextIcon, CheckCircleIcon, ClockIcon, CurrencyDollarIcon } from '@heroicons/react/24/outline';\nimport type { ComponentType, SVGProps } from 'react';\nimport type { Invoice } from '../../types/domain';\ntype Props = {\n  invoices: Invoice[];\n};\nexport default StatsCards;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst FilterBar_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-md shadow-sm p-3 mb-4\">\n      <div className=\"flex items-center space-x-3 flex-wrap\">\n        <span className=\"text-xs font-medium text-gray-500 dark:text-gray-300\">필터:</span>\n        <div className=\"relative inline-flex items-center\">\n          <select value={_props.v0} onChange={_props.v1} className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0\">\n            <option value=\"\">전체 건축주</option>\n            {_props.v2}\n          </select>\n        </div>\n        <div className=\"relative inline-flex items-center\">\n          <select value={_props.v3} onChange={_props.v4} disabled={_props.v5} className={_props.v6}>\n            <option value=\"\">{_props.v7}</option>\n            <option value=\"발송대기\">발송대기</option>\n            <option value=\"발송됨\">발송됨</option>\n            <option value=\"미결제\">미결제</option>\n            <option value=\"결제완료\">결제완료</option>\n          </select>\n        </div>\n        <span className=\"text-xs text-gray-500 dark:text-gray-300\">{_props.v8}개</span>\n        {_props.v9}\n      </div>\n    </div>, {\n  name: \"FilterBar_1\",\n  portals: [\"v2\", \"v7\", \"v8\", \"v9\"]\n});\nconst FilterBar = function FilterBar({\n  clients,\n  selectedClient,\n  selectedStatus,\n  filteredCount,\n  onChangeClient,\n  onChangeStatus,\n  onReset\n}: Props) {\n  const hasClient = String(selectedClient ?? '') !== '';\n  const hasStatus = (selectedStatus ?? '').trim() !== '';\n  const hasFilter = hasClient || hasStatus;\n  return /*@million jsx-skip*/<FilterBar_1 v0={selectedClient == null ? '' : String(selectedClient)} v1={e => onChangeClient(e.target.value)} v2={clients.map(c => <option key={c.id} value={String(c.id)}>{c.name}</option>)} v3={selectedStatus} v4={e => onChangeStatus(e.target.value)} v5={!hasClient} v6={`border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0 ${!hasClient ? 'text-gray-400 dark:text-gray-500 cursor-not-allowed' : 'text-gray-700 dark:text-gray-200'}`} v7={!hasClient ? '건축주 선택 후' : '전체 상태'} v8={filteredCount} v9={hasFilter && <button onClick={onReset} className=\"text-xs text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 underline\">초기화</button>} />;\n};\nimport { block as _block } from \"million/react\";\nimport type { Client } from '../../types/domain';\ntype Props = {\n  clients: Client[];\n  selectedClient: string | number;\n  selectedStatus: string;\n  filteredCount: number;\n  onChangeClient: (val: string) => void;\n  onChangeStatus: (val: string) => void;\n  onReset: () => void;\n};\nexport default FilterBar;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst InvoicesTable_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n          <tr>\n            <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-12\">\n              <input type=\"checkbox\" className=\"w-4 h-4 rounded border-gray-300 dark:border-gray-600\" checked={_props.v0} onChange={_props.v1} title=\"전체 선택\" />\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              청구서 번호\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              건 축 주\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              프로젝트\n            </th>\n            <th className=\"px-2 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              작 업 장\n            </th>\n            <th className=\"px-2 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              청구 금액\n            </th>\n            <th className=\"px-2 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              상&nbsp;&nbsp;&nbsp;&nbsp;태\n            </th>\n            <th className=\"px-2 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              날&nbsp;&nbsp;&nbsp;&nbsp;짜\n            </th>\n            <th className=\"px-2 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-20\">\n              작&nbsp;&nbsp;&nbsp;&nbsp;업\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n          {_props.v2}\n        </tbody>\n      </table>\n    </div>, {\n  name: \"InvoicesTable_1\",\n  portals: [\"v2\"]\n});\nconst InvoicesTable = function InvoicesTable({\n  items,\n  allSelected,\n  selectedIds,\n  onToggleAll,\n  onToggleOne,\n  format,\n  onChangeStatus,\n  onViewDetails,\n  onOpenPrint,\n  onDelete,\n  statuses,\n  getStatusColor\n}: Props) {\n  return /*@million jsx-skip*/<InvoicesTable_1 v0={allSelected} v1={e => onToggleAll(e.target.checked)} v2={items.map(invoice => <tr key={invoice.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n              <td className=\"px-3 py-2 whitespace-nowrap\">\n                <input type=\"checkbox\" className=\"w-4 h-4 rounded border-gray-300 dark:border-gray-600\" checked={selectedIds.includes(invoice.id)} onChange={e => onToggleOne(invoice.id as string, e.target.checked)} title=\"선택\" />\n              </td>\n              <td className=\"px-3 py-2 whitespace-nowrap\">\n                <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{invoice.id}</div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">{invoice.dueDate}</div>\n              </td>\n              <td className=\"px-3 py-2 whitespace-nowrap\">\n                <div className=\"text-sm text-gray-900 dark:text-gray-100\">{invoice.client}</div>\n              </td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">{invoice.project}</td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">{invoice.workplaceAddress}</td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-center text-sm text-gray-900 dark:text-gray-100\">{format(invoice.amount)}원</td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-center\">\n                <select className={`px-2 py-1 text-xs font-semibold rounded-full border-0 ${getStatusColor(invoice.status)} focus:outline-none focus:ring-0`} value={invoice.status} onChange={e => onChangeStatus(invoice.id as string, e.target.value)} title=\"청구서 상태 변경\">\n                  {statuses.map(status => <option key={status} value={status}>{status}</option>)}\n                </select>\n              </td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100\">{invoice.date}</td>\n              <td className=\"px-3 py-2 whitespace-nowrap text-sm font-medium\">\n                <div className=\"flex justify-center\">\n                  <Tooltip label=\"상세보기\"><button onClick={() => onViewDetails(invoice)} className=\"text-blue-600 dark:text-blue-400 hover:text-blue-900 dark:hover:text-blue-300 mx-2\" title=\"청구서 상세보기\">🔍</button></Tooltip>\n                  <Tooltip label=\"출력\"><button onClick={() => onOpenPrint(invoice)} className=\"text-green-600 dark:text-green-400 hover:text-green-900 dark:hover:text-green-300 mx-2\" title=\"청구서 출력\">🖨️</button></Tooltip>\n                  <Tooltip label=\"삭제\"><button onClick={() => onDelete(invoice.id as string)} className=\"text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300 mx-2\" title=\"청구서 삭제\">🗑️</button></Tooltip>\n                </div>\n              </td>\n            </tr>)} />;\n};\nimport { block as _block } from \"million/react\";\nimport Tooltip from '../Tooltip';\nimport type { Invoice } from '../../types/domain';\ntype Props = {\n  items: Invoice[];\n  allSelected: boolean;\n  selectedIds: (string | number)[];\n  onToggleAll: (checked: boolean) => void;\n  onToggleOne: (id: string, checked: boolean) => void;\n  format: (n: number) => string;\n  onChangeStatus: (id: string, next: string) => void;\n  onViewDetails: (invoice: Invoice) => void;\n  onOpenPrint: (invoice: Invoice) => void;\n  onDelete: (id: string) => void;\n  statuses: string[];\n  getStatusColor: (status: string) => string;\n};\nexport default InvoicesTable;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst InvoiceDetailTable_1 = _compiledBlock(_props => <table className=\"w-full border text-sm\">\n      <thead className=\"bg-gray-50\">\n        <tr>\n          <th className=\"border px-3 py-2 text-center w-12\">연번</th>\n          <th className=\"border px-3 py-2 text-center w-24\">일자</th>\n          <th className=\"border px-3 py-2 text-center w-[26rem]\">내용</th>\n          <th className=\"border px-3 py-2 text-center w-16\">수량</th>\n          <th className=\"border px-3 py-2 text-center w-16\">단위</th>\n          <th className=\"border px-3 py-2 text-right w-28\">단가</th>\n          <th className=\"border px-3 py-2 text-right w-32\">합계</th>\n          <th className=\"border px-3 py-2 text-left w-36\">비고</th>\n        </tr>\n      </thead>\n      <tbody>\n        {_props.v0}\n      </tbody>\n      <tfoot>\n        <tr className=\"bg-gray-50\">\n          <td className=\"border px-3 py-2 text-right font-semibold\" colSpan={6}>총 금액</td>\n          <td className=\"border px-3 py-2 text-right font-bold\">{_props.v1}원</td>\n          <td className=\"border px-3 py-2\"></td>\n        </tr>\n      </tfoot>\n    </table>, {\n  name: \"InvoiceDetailTable_1\",\n  portals: [\"v0\", \"v1\"]\n});\nconst InvoiceDetailTable = function InvoiceDetailTable({\n  items,\n  format,\n  totalAmount\n}: Props) {\n  const sum = items.reduce((s, it) => {\n    const qNum = Number(it.quantity);\n    const q = Number.isFinite(qNum) ? qNum : 0;\n    const uNum = Number(it.unitPrice);\n    const u = Number.isFinite(uNum) ? uNum : 0;\n    const tRaw = it.total != null ? Number(it.total) : q * u;\n    const t = Number.isFinite(tRaw) ? tRaw : 0;\n    return s + t;\n  }, 0);\n  return /*@million jsx-skip*/<InvoiceDetailTable_1 v0={items.map((it, i) => {\n    const category = it.category ?? '';\n    const desc = it.description ?? '';\n    const laborPersonsGeneral = typeof it.laborPersonsGeneral === 'number' ? it.laborPersonsGeneral : 0;\n    const laborUnitRateGeneral = typeof it.laborUnitRateGeneral === 'number' ? it.laborUnitRateGeneral : 0;\n    const laborPersons = typeof it.laborPersons === 'number' ? it.laborPersons : 0;\n    const laborUnitRate = typeof it.laborUnitRate === 'number' ? it.laborUnitRate : 0;\n    const gen = laborPersonsGeneral * laborUnitRateGeneral;\n    const sk = laborPersons * laborUnitRate;\n    const laborTotal = gen + sk;\n    const qN = Number(it.quantity);\n    const uN = Number(it.unitPrice);\n    const qF = Number.isFinite(qN) ? qN : 0;\n    const uF = Number.isFinite(uN) ? uN : 0;\n    const totalFallback = qF * uF;\n    const tN = Number(it.total ?? totalFallback);\n    const lineTotal = Number.isFinite(tN) ? tN : totalFallback;\n    return <tr key={i} className=\"align-top\">\n              <td className=\"border px-3 py-2 text-center\">{i + 1}</td>\n              <td className=\"border px-3 py-2 text-center\">{it.date ?? ''}</td>\n              <td className=\"border px-3 py-2\">\n                <div>\n                  <div className=\"font-medium text-gray-900 text-left\">{it.name}</div>\n                  {category !== '' && <div className=\"mt-1 text-right\">\n                      <span className=\"inline-block text-[11px] bg-gray-100 text-gray-600 px-2 py-0.5 rounded-full\">{category}</span>\n                    </div>}\n                </div>\n                {desc !== '' && <div className=\"text-xs text-gray-600 mt-1 whitespace-pre-line break-words leading-relaxed\">{desc}</div>}\n                {laborTotal > 0 && <div className=\"text-xs text-blue-600 mt-1\">\n                    <span className=\"font-medium\">인부임:</span>{' '}\n                    {[gen > 0 ? `${laborPersonsGeneral}명 × ${laborUnitRateGeneral.toLocaleString()}원` : null, sk > 0 ? `${laborPersons}명 × ${laborUnitRate.toLocaleString()}원` : null].filter(Boolean).join(', ')} = {laborTotal.toLocaleString()}원\n                  </div>}\n              </td>\n              <td className=\"border px-3 py-2 text-center\">{it.quantity}</td>\n              <td className=\"border px-3 py-2 text-center\">{it.unit ?? ''}</td>\n              <td className=\"border px-3 py-2 text-right\">{(() => {\n          const nRaw = Number(it.unitPrice);\n          const n = Number.isFinite(nRaw) ? nRaw : 0;\n          return `${format(n)}원`;\n        })()}</td>\n              <td className=\"border px-3 py-2 text-right\">{format(lineTotal)}원</td>\n              <td className=\"border px-2 py-2 w-36 text-xs\">{it.notes ?? ''}</td>\n            </tr>;\n  })} v1={format(Number(totalAmount ?? sum))} />;\n};\nimport { block as _block } from \"million/react\";\nimport type { InvoiceItem } from '../../types/domain';\ntype Props = {\n  items: InvoiceItem[];\n  format: (n: number) => string;\n  totalAmount?: number; // optional override for footer total\n};\nexport default InvoiceDetailTable;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst Invoices_1 = _compiledBlock(_props => <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2\">청구서 관리</h1>\n          <p className=\"text-gray-600 dark:text-gray-300\">청구서를 발송하고 결제 현황을 추적하세요</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {_props.v0}\n          <button onClick={_props.v1} className=\"flex items-center justify-center px-4 py-2.5 bg-indigo-600 dark:bg-indigo-500 text-white rounded-full shadow-lg hover:bg-indigo-700 dark:hover:bg-indigo-600 transition-colors duration-300 font-bold\">\n            <span className=\"text-yellow-300 mr-2\">✨</span>\n            <span className=\"text-xs font-bold\">새 청구서</span>\n          </button>\n        </div>\n      </div>\n\n      {_props.v2}\n\n      {_props.v3}\n\n      {_props.v4}\n\n      {_props.v5}\n\n      {_props.v6}\n\n      {_props.v7}\n\n      {_props.v8}\n    </div>, {\n  name: \"Invoices_1\",\n  portals: [\"v0\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\"]\n});\nconst Invoices = function Invoices() {\n  const {\n    invoices,\n    setInvoices,\n    clients,\n    companyInfo,\n    stampImage,\n    categories,\n    units,\n    setWorkItems\n  } = useApp();\n  const {\n    format\n  } = useNumberFormat();\n  const filters = useFilters();\n  const statuses = ['발송대기', '발송됨', '미결제', '결제완료'];\n  const getStatusColor = (status: string): string => {\n    switch (status) {\n      case '결제완료':\n        return 'bg-green-100 text-green-800';\n      case '발송됨':\n        return 'bg-blue-100 text-blue-800';\n      case '미결제':\n        return 'bg-orange-100 text-orange-800';\n      case '발송대기':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n  type FormItem = {\n    name: string;\n    quantity: number | '';\n    unit?: string;\n    unitPrice: number | '';\n    total: number;\n    notes?: string;\n    date?: string;\n    // 상세내역과 인부임 정보 추가\n    category?: string;\n    description?: string;\n    laborPersons?: string | number;\n    laborUnitRate?: string | number;\n    laborPersonsGeneral?: string | number;\n    laborUnitRateGeneral?: string | number;\n  };\n  type FormState = {\n    clientId: string | number | '';\n    client: string;\n    workplaceId: string | number | '';\n    workplaceAddress: string;\n    project: string;\n    date: string;\n    status: Invoice['status'];\n    items: FormItem[];\n  };\n  const [showForm, setShowForm] = useState<boolean>(false);\n  const [showCustomProject, setShowCustomProject] = useState<boolean>(false);\n  const [form, setForm] = useState<FormState>({\n    clientId: '',\n    client: '',\n    workplaceId: '',\n    workplaceAddress: '',\n    project: '',\n    date: new Date().toISOString().split('T')[0],\n    status: '발송대기',\n    items: [{\n      name: '',\n      quantity: 1,\n      unit: '',\n      unitPrice: 0,\n      total: 0,\n      category: '',\n      description: '',\n      laborPersons: '',\n      laborUnitRate: '',\n      laborPersonsGeneral: '',\n      laborUnitRateGeneral: ''\n    }]\n  });\n  const filteredInvoices = useMemo(() => {\n    const base = (() => {\n      if (filters.selectedClient === '') return invoices;\n      const cid = parseInt(filters.selectedClient);\n      const clientName = clients.find(c => c.id === cid)?.name;\n      return invoices.filter(inv => {\n        if (inv.clientId !== null && inv.clientId !== undefined && inv.clientId === cid) return true;\n        if (clientName !== null && clientName !== undefined && clientName !== '' && inv.client === clientName) return true;\n        return false;\n      });\n    })();\n    if (filters.selectedStatus === '') return base;\n    return base.filter(inv => inv.status === filters.selectedStatus);\n  }, [invoices, filters.selectedClient, filters.selectedStatus, clients]);\n  const allVisibleIds = useMemo(() => filteredInvoices.map(inv => inv.id), [filteredInvoices]);\n  const selection = useSelection(allVisibleIds);\n  const allSelected = selection.allSelected;\n  const handleToggleAll = (checked: boolean) => selection.toggleAll(checked);\n  const handleToggleOne = (id: string, checked: boolean) => selection.toggleOne(id, checked);\n  const handleChangeStatus = (id: string, next: string) => {\n    const n = next as InvoiceStatus;\n    setInvoices(prev => prev.map(inv => inv.id === id ? {\n      ...inv,\n      status: n\n    } : inv));\n  };\n  const [showConfirmBulkDelete, setShowConfirmBulkDelete] = useState<boolean>(false);\n  const [pendingDeleteId, setPendingDeleteId] = useState<string | null>(null);\n  const handleDelete = (id: string) => {\n    setPendingDeleteId(id);\n  };\n  const confirmDeleteSingle = async () => {\n    if (pendingDeleteId === null || pendingDeleteId === undefined) return;\n\n    // UI에서 즉시 제거\n    setInvoices(prev => prev.filter(inv => inv.id !== pendingDeleteId));\n    setPendingDeleteId(null);\n\n    // Supabase에서도 즉시 삭제 (invoice_items도 CASCADE로 자동 삭제됨)\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('invoices').delete().eq('invoice_number', pendingDeleteId);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const handleBulkDelete = () => {\n    if (selection.selected.length === 0) return;\n    setShowConfirmBulkDelete(true);\n  };\n  const confirmBulkDelete = async () => {\n    // UI에서 즉시 제거\n    setInvoices(prev => prev.filter(inv => !selection.selected.includes(inv.id)));\n    selection.clear();\n    setShowConfirmBulkDelete(false);\n\n    // Supabase에서도 즉시 삭제 (invoice_items도 CASCADE로 자동 삭제됨)\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('invoices').delete().in('invoice_number', selection.selected);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const [detail, setDetail] = useState<Invoice | null>(null);\n  const resolveBaseUrl = (): string => {\n    const pub = process.env.PUBLIC_URL;\n    if (typeof pub === 'string' && pub.trim() !== '') {\n      try {\n        const u = new URL(pub, window.location.origin);\n        let path = u.pathname;\n        if (path.length > 1 && path.endsWith('/')) path = path.slice(0, -1);\n        return `${window.location.origin}${path}`;\n      } catch {\n        let path = pub.trim();\n        if (!path.startsWith('/')) path = `/${path}`;\n        if (path.length > 1 && path.endsWith('/')) path = path.slice(0, -1);\n        return `${window.location.origin}${path}`;\n      }\n    }\n    return window.location.origin;\n  };\n  const handleOpenDetailPrint = () => {\n    if (detail === null || detail === undefined) return;\n    try {\n      const payload = {\n        invoice: detail,\n        companyInfo\n      };\n\n      // localStorage에 데이터 저장\n      try {\n        localStorage.setItem('invoiceDetailPrintData', JSON.stringify(payload));\n      } catch (e) {\n        // Ignore storage errors\n      }\n\n      // URL 구성\n      const printUrl = `${resolveBaseUrl()}/invoice-detail-output.html`;\n\n      // 새 창 열기\n      const printWindow = window.open(printUrl, '_blank', 'width=1200,height=800,scrollbars=yes,resizable=yes');\n      if (printWindow === null || printWindow === undefined) {\n        const go = window.confirm(`팝업이 차단되었습니다.\\n같은 탭에서 출력 화면으로 이동할까요?`);\n        if (go) {\n          window.location.assign(printUrl);\n        }\n        return;\n      }\n      setTimeout(() => {\n        try {\n          printWindow.focus();\n        } catch (e) {\n          // Ignore focus errors\n        }\n      }, TIMEOUT.AUTO_SAVE_DELAY);\n    } catch (error) {\n      alert('상세 출력 창을 여는 중 오류가 발생했습니다.');\n    }\n  };\n  const detailPrintRef = useRef<HTMLDivElement | null>(null);\n  const handleViewDetails = (invoice: Invoice) => setDetail(invoice);\n  const handleOpenPrint = (invoice: Invoice) => {\n    try {\n      // 템플릿에서 사용할 회사정보/도장/청구서 데이터를 함께 전달\n      const payload = {\n        invoice,\n        companyInfo,\n        stampImage\n      };\n\n      // localStorage에 데이터 저장\n      try {\n        localStorage.setItem('invoicePrintData', JSON.stringify(payload));\n      } catch (e) {\n        // Ignore storage errors\n      }\n\n      // URL 구성 - 간단하게 수정\n      const printUrl = `${resolveBaseUrl()}/invoice-output.html`;\n\n      // 새 창 열기\n      const printWindow = window.open(printUrl, '_blank', 'width=1200,height=800,scrollbars=yes,resizable=yes');\n      if (printWindow === null || printWindow === undefined) {\n        const go = window.confirm('팝업이 차단되었습니다.\\n같은 탭에서 출력 화면으로 이동할까요?');\n        if (go) {\n          window.location.assign(printUrl);\n        }\n        return;\n      }\n\n      // 창이 로드된 후 포커스\n      setTimeout(() => {\n        try {\n          printWindow.focus();\n        } catch (e) {\n          // Ignore focus errors\n        }\n      }, TIMEOUT.AUTO_SAVE_DELAY);\n    } catch (error) {\n      // 폴백: Excel 내보내기 제안\n      const fallbackConfirm = window.confirm('출력 창을 여는 중 오류가 발생했습니다.\\n대신 Excel 파일로 내보내시겠습니까?');\n      if (fallbackConfirm) {\n        exportToExcel.invoiceDetail(invoice);\n      }\n    }\n  };\n  const getClientWorkplaces = (clientId: string | number) => {\n    const cid = parseInt(String(clientId));\n    const c = clients.find(cl => Number(cl.id) === cid);\n    return c?.workplaces !== null && c?.workplaces !== undefined ? c.workplaces : [];\n  };\n  const getClientProjects = (clientId: string | number) => {\n    const cid = parseInt(String(clientId));\n    const client = clients.find(c => Number(c.id) === cid);\n    const clientProjects = client?.projects !== null && client?.projects !== undefined ? client.projects.filter((p): p is string => p !== '' && p !== null && p !== undefined) : [];\n    const workplaceProjects = client?.workplaces !== null && client?.workplaces !== undefined ? client.workplaces.map(wp => wp.description ?? '').filter((desc): desc is string => desc !== '') : [];\n    return Array.from(new Set([...clientProjects, ...workplaceProjects]));\n  };\n  const onFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => {\n      const next = {\n        ...prev,\n        [name]: value\n      } as FormState;\n      if (name === 'clientId') {\n        const cid = parseInt(String(value));\n        const c = clients.find(cl => Number(cl.id) === cid);\n        next.client = c?.name !== null && c?.name !== undefined && c?.name !== '' ? c.name : '';\n        next.workplaceId = '';\n        next.workplaceAddress = '';\n        next.project = '';\n        setShowCustomProject(false);\n      }\n      if (name === 'workplaceId') {\n        const wp = getClientWorkplaces(prev.clientId).find(w => Number(w.id) === parseInt(String(value)));\n        next.workplaceAddress = wp?.address !== null && wp?.address !== undefined && wp?.address !== '' ? wp.address : '';\n        if (next.project === '' && wp?.description !== null && wp?.description !== undefined && wp?.description !== '') next.project = wp.description;\n      }\n      if (name === 'project') {\n        if (value === 'custom') {\n          setShowCustomProject(true);\n          next.project = '';\n        } else {\n          setShowCustomProject(false);\n        }\n      }\n      return next;\n    });\n  };\n  const onFormItemChange = (index: number, field: keyof FormItem, value: string) => {\n    setForm(prev => {\n      const items = [...prev.items];\n      const MIN_VALUE = 0;\n      const BASE_TEN = 10;\n      if (field === 'quantity' || field === 'unitPrice' || field === 'laborPersons' || field === 'laborUnitRate' || field === 'laborPersonsGeneral' || field === 'laborUnitRateGeneral') {\n        const digits = String(value ?? '').replace(/[^\\d-]/g, '');\n        const numeric = digits === '' || digits === '-' ? '' : parseInt(digits, BASE_TEN);\n        if (field === 'quantity') items[index].quantity = numeric;\n        if (field === 'unitPrice') items[index].unitPrice = numeric;\n        if (field === 'laborPersons') items[index].laborPersons = numeric;\n        if (field === 'laborUnitRate') items[index].laborUnitRate = numeric;\n        if (field === 'laborPersonsGeneral') items[index].laborPersonsGeneral = numeric;\n        if (field === 'laborUnitRateGeneral') items[index].laborUnitRateGeneral = numeric;\n      } else if (field === 'name') {\n        items[index].name = value;\n      } else if (field === 'unit') {\n        items[index].unit = value;\n      } else if (field === 'notes') {\n        items[index].notes = value;\n      } else if (field === 'date') {\n        items[index].date = value;\n      } else if (field === 'category') {\n        items[index].category = value;\n      } else if (field === 'description') {\n        items[index].description = value;\n      }\n      const qNum = Number(items[index].quantity);\n      const pNum = Number(items[index].unitPrice);\n      const lpNum = Number(items[index].laborPersons);\n      const lrNum = Number(items[index].laborUnitRate);\n      const lpgNum = Number(items[index].laborPersonsGeneral);\n      const lrgNum = Number(items[index].laborUnitRateGeneral);\n      const q = qNum !== MIN_VALUE && !isNaN(qNum) ? qNum : MIN_VALUE;\n      const p = pNum !== MIN_VALUE && !isNaN(pNum) ? pNum : MIN_VALUE;\n      const lp = lpNum !== MIN_VALUE && !isNaN(lpNum) ? lpNum : MIN_VALUE;\n      const lr = lrNum !== MIN_VALUE && !isNaN(lrNum) ? lrNum : MIN_VALUE;\n      const lpg = lpgNum !== MIN_VALUE && !isNaN(lpgNum) ? lpgNum : MIN_VALUE;\n      const lrg = lrgNum !== MIN_VALUE && !isNaN(lrgNum) ? lrgNum : MIN_VALUE;\n      const laborCost = lp * lr + lpg * lrg;\n      items[index].total = q * p + laborCost;\n      return {\n        ...prev,\n        items\n      };\n    });\n  };\n  const addFormItem = () => setForm(prev => ({\n    ...prev,\n    items: [...prev.items, {\n      name: '',\n      quantity: 1,\n      unit: '',\n      unitPrice: 0,\n      total: 0,\n      category: '',\n      description: '',\n      laborPersons: '',\n      laborUnitRate: '',\n      laborPersonsGeneral: '',\n      laborUnitRateGeneral: ''\n    }]\n  }));\n  const removeFormItem = (idx: number) => setForm(prev => ({\n    ...prev,\n    items: prev.items.filter((_, i) => i !== idx)\n  }));\n  const getFormTotal = () => {\n    const MIN_VALUE = 0;\n    return form.items.reduce((s, it) => {\n      const total = Number(it.total);\n      return s + (total !== MIN_VALUE && !isNaN(total) ? total : MIN_VALUE);\n    }, MIN_VALUE);\n  };\n  const submitForm = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const MIN_ID_VALUE = 0;\n    const INVOICE_ID_PAD_LENGTH = 3;\n    const PAD_CHAR = '0';\n    if (typeof form.clientId === 'number' && (form.clientId === MIN_ID_VALUE || isNaN(form.clientId)) || typeof form.clientId === 'string' && form.clientId === '' || typeof form.workplaceId === 'number' && (form.workplaceId === MIN_ID_VALUE || isNaN(form.workplaceId)) || typeof form.workplaceId === 'string' && form.workplaceId === '' || form.project === '') {\n      alert('건축주/작업장/프로젝트를 입력하세요.');\n      return;\n    }\n    if (form.items.length === 0 || form.items[0].name === '') {\n      alert('작업 항목을 1개 이상 입력하세요.');\n      return;\n    }\n    const newId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(INVOICE_ID_PAD_LENGTH, PAD_CHAR)}`;\n    const MIN_VALUE = 0;\n    const workplaceIdNumber = Number(form.workplaceId);\n    const created: Invoice = {\n      id: newId,\n      clientId: Number(form.clientId),\n      client: form.client,\n      workplaceId: workplaceIdNumber,\n      project: form.project,\n      workplaceAddress: form.workplaceAddress,\n      amount: getFormTotal(),\n      status: form.status,\n      date: form.date,\n      workItems: form.items.map((it, index) => {\n        const qtyNum = Number(it.quantity);\n        const priceNum = Number(it.unitPrice);\n        const totalNum = Number(it.total);\n        return {\n          id: index + 1,\n          name: it.name,\n          quantity: qtyNum !== MIN_VALUE && !isNaN(qtyNum) ? qtyNum : MIN_VALUE,\n          unit: it.unit,\n          unitPrice: priceNum !== MIN_VALUE && !isNaN(priceNum) ? priceNum : MIN_VALUE,\n          total: totalNum !== MIN_VALUE && !isNaN(totalNum) ? totalNum : MIN_VALUE,\n          notes: it.notes !== null && it.notes !== undefined && it.notes !== '' ? it.notes : '',\n          date: it.date !== null && it.date !== undefined && it.date !== '' ? it.date : '',\n          // 상세내역과 인부임 정보 포함\n          category: it.category !== null && it.category !== undefined && it.category !== '' ? it.category : '',\n          description: it.description !== null && it.description !== undefined && it.description !== '' ? it.description : '',\n          laborPersons: typeof it.laborPersons === 'number' ? it.laborPersons : String(it.laborPersons).trim() === '' ? '' : Number(it.laborPersons) !== MIN_VALUE && !isNaN(Number(it.laborPersons)) ? Number(it.laborPersons) : '',\n          laborUnitRate: typeof it.laborUnitRate === 'number' ? it.laborUnitRate : String(it.laborUnitRate).trim() === '' ? '' : Number(it.laborUnitRate) !== MIN_VALUE && !isNaN(Number(it.laborUnitRate)) ? Number(it.laborUnitRate) : '',\n          laborPersonsGeneral: typeof it.laborPersonsGeneral === 'number' ? it.laborPersonsGeneral : String(it.laborPersonsGeneral).trim() === '' ? '' : Number(it.laborPersonsGeneral) !== MIN_VALUE && !isNaN(Number(it.laborPersonsGeneral)) ? Number(it.laborPersonsGeneral) : '',\n          laborUnitRateGeneral: typeof it.laborUnitRateGeneral === 'number' ? it.laborUnitRateGeneral : String(it.laborUnitRateGeneral).trim() === '' ? '' : Number(it.laborUnitRateGeneral) !== MIN_VALUE && !isNaN(Number(it.laborUnitRateGeneral)) ? Number(it.laborUnitRateGeneral) : ''\n        };\n      })\n    };\n\n    // 이전 상태 백업 (롤백용)\n    const previousInvoices = invoices;\n\n    // UI 즉시 업데이트 (낙관적 업데이트)\n    setInvoices(prev => [...prev, created]);\n    setShowForm(false);\n    setShowCustomProject(false);\n    setForm({\n      clientId: '',\n      client: '',\n      workplaceId: '',\n      workplaceAddress: '',\n      project: '',\n      date: new Date().toISOString().split('T')[0],\n      status: '발송대기',\n      items: [{\n        name: '',\n        quantity: 1,\n        unit: '',\n        unitPrice: 0,\n        total: 0,\n        category: '',\n        description: '',\n        laborPersons: '',\n        laborUnitRate: '',\n        laborPersonsGeneral: '',\n        laborUnitRateGeneral: ''\n      }]\n    });\n\n    // Supabase에도 즉시 생성 (invoices + invoice_items)\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) {\n        // Supabase 초기화 실패 시 롤백\n        setInvoices(previousInvoices);\n        alert('데이터베이스 연결에 실패했습니다.');\n        return;\n      }\n      const {\n        getCurrentUserId\n      } = await import('../services/supabase');\n      const userId = await getCurrentUserId();\n\n      // 1. invoices 테이블 삽입\n      // workplace_id: 0 또는 NaN은 null로 변환\n      const validWorkplaceId = typeof created.workplaceId === 'number' && created.workplaceId > 0 && !isNaN(created.workplaceId) ? created.workplaceId : null;\n      const invoiceInsertData = {\n        invoice_number: created.id,\n        user_id: userId,\n        client_id: created.clientId,\n        workplace_id: validWorkplaceId,\n        title: created.project ?? '',\n        date: created.date,\n        status: created.status,\n        amount: created.amount\n      };\n      const {\n        data: invoiceData,\n        error: invError\n      } = await supabase.from('invoices').insert(invoiceInsertData).select().single();\n      if (invError !== null && invError !== undefined) {\n        // 오류 발생 시 롤백\n        setInvoices(previousInvoices);\n        // eslint-disable-next-line no-console\n        console.error('청구서 저장 오류:', invError);\n        // eslint-disable-next-line no-console\n        console.error('청구서 데이터:', {\n          invoice_number: created.id,\n          user_id: userId,\n          client_id: created.clientId,\n          title: created.project ?? '',\n          date: created.date,\n          status: created.status,\n          amount: created.amount\n        });\n        alert(`청구서 생성 중 오류가 발생했습니다: ${invError.message}\\n코드: ${invError.code}\\n상세: ${invError.details}`);\n        return;\n      }\n      if (invoiceData === null || invoiceData === undefined) {\n        setInvoices(previousInvoices);\n        alert('청구서 생성에 실패했습니다.');\n        return;\n      }\n\n      // 2. invoice_items 삽입\n      const itemsToInsert = created.workItems.map((item, index) => ({\n        invoice_id: invoiceData.invoice_id,\n        item_id: index + 1,\n        category: item.category ?? '',\n        name: item.name,\n        description: item.description ?? '',\n        quantity: item.quantity ?? 0,\n        unit: item.unit ?? '',\n        unit_price: item.unitPrice ?? 0,\n        total: item.total ?? 0,\n        notes: item.notes ?? '',\n        date: item.date ?? '',\n        labor_persons: typeof item.laborPersons === 'number' ? item.laborPersons : 0,\n        labor_unit_rate: typeof item.laborUnitRate === 'number' ? item.laborUnitRate : 0,\n        labor_persons_general: typeof item.laborPersonsGeneral === 'number' ? item.laborPersonsGeneral : 0,\n        labor_unit_rate_general: typeof item.laborUnitRateGeneral === 'number' ? item.laborUnitRateGeneral : 0\n      }));\n      const {\n        error: itemsError\n      } = await supabase.from('invoice_items').insert(itemsToInsert);\n      if (itemsError !== null && itemsError !== undefined) {\n        // 오류 발생 시 롤백\n        setInvoices(previousInvoices);\n        // eslint-disable-next-line no-console\n        console.error('청구서 항목 저장 오류:', itemsError);\n        // eslint-disable-next-line no-console\n        console.error('항목 데이터:', itemsToInsert);\n        alert(`청구서 항목 생성 중 오류가 발생했습니다: ${itemsError.message}\\n코드: ${itemsError.code}\\n상세: ${itemsError.details}`);\n        return;\n      }\n\n      // 3. work_items 테이블에도 저장 (작업 항목 관리에서 보이도록)\n      // 작업장 이름 조회\n      const clientIdForWorkplace = created.clientId ?? 0;\n      const workplace = getClientWorkplaces(clientIdForWorkplace).find(w => Number(w.id) === Number(validWorkplaceId));\n      const workplaceName = workplace?.name ?? '';\n      const workItemsToInsert = created.workItems.map(item => ({\n        user_id: userId,\n        client_id: created.clientId,\n        client_name: created.client,\n        workplace_id: validWorkplaceId,\n        workplace_name: workplaceName,\n        project_name: created.project ?? '',\n        name: item.name,\n        description: item.description ?? '',\n        category: item.category ?? '',\n        quantity: item.quantity ?? 0,\n        unit: item.unit ?? '',\n        default_price: item.unitPrice ?? 0,\n        status: 'completed',\n        // 청구서 생성 시점이므로 완료 상태\n        start_date: item.date ?? created.date,\n        notes: item.notes ?? '',\n        labor_persons: typeof item.laborPersons === 'number' ? item.laborPersons : 0,\n        labor_unit_rate: typeof item.laborUnitRate === 'number' ? item.laborUnitRate : 0,\n        labor_persons_general: typeof item.laborPersonsGeneral === 'number' ? item.laborPersonsGeneral : 0,\n        labor_unit_rate_general: typeof item.laborUnitRateGeneral === 'number' ? item.laborUnitRateGeneral : 0\n      }));\n      const {\n        data: workItemsData,\n        error: workItemsError\n      } = await supabase.from('work_items').insert(workItemsToInsert).select();\n      if (workItemsError !== null && workItemsError !== undefined) {\n        // 오류 발생 - 청구서는 생성되었지만 작업 항목 저장 실패\n        // eslint-disable-next-line no-console\n        console.error('작업 항목 저장 오류:', workItemsError);\n        alert(`청구서는 생성되었으나 작업 항목 저장 중 오류가 발생했습니다: ${workItemsError.message}`);\n        return;\n      }\n\n      // 4. 작업 항목 관리 UI 업데이트\n      if (workItemsData !== null && workItemsData !== undefined) {\n        const fromDbStatus = (status: string): '예정' | '진행중' | '완료' | '보류' => {\n          const statusMap: Record<string, '예정' | '진행중' | '완료' | '보류'> = {\n            'planned': '예정',\n            'in_progress': '진행중',\n            'completed': '완료',\n            'on_hold': '보류'\n          };\n          return statusMap[status] ?? '예정';\n        };\n        const newWorkItems = workItemsData.map((w: Record<string, unknown>) => {\n          const rawWorkplaceId = w.workplace_id as number | null | undefined;\n          const workplaceIdValue: number | '' = rawWorkplaceId !== null && rawWorkplaceId !== undefined ? rawWorkplaceId : '';\n          return {\n            id: w.work_item_id as number,\n            clientId: w.client_id as number,\n            clientName: (w.client_name ?? created.client) as string,\n            workplaceId: workplaceIdValue,\n            workplaceName: (w.workplace_name ?? workplaceName) as string,\n            projectName: (w.project_name ?? '') as string,\n            name: w.name as string,\n            category: (w.category ?? '') as string,\n            defaultPrice: (w.default_price ?? 0) as number,\n            quantity: (w.quantity ?? 0) as number,\n            unit: (w.unit ?? '') as string,\n            description: (w.description ?? '') as string,\n            status: fromDbStatus(w.status as string),\n            date: (w.start_date ?? '') as string,\n            notes: (w.notes ?? '') as string,\n            laborPersons: (w.labor_persons ?? 0) as number,\n            laborUnitRate: (w.labor_unit_rate ?? 0) as number,\n            laborPersonsGeneral: (w.labor_persons_general ?? 0) as number,\n            laborUnitRateGeneral: (w.labor_unit_rate_general ?? 0) as number\n          };\n        });\n        setWorkItems(prev => [...prev, ...newWorkItems]);\n      }\n    } catch (err) {\n      // 예외 발생 시 롤백\n      setInvoices(previousInvoices);\n      alert('청구서 생성 중 예상치 못한 오류가 발생했습니다.');\n      return;\n    }\n  };\n  return /*@million jsx-skip*/<Invoices_1 v0={selection.selected.length > 0 && <button onClick={handleBulkDelete} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-red-200 dark:border-red-600 rounded-full shadow-sm hover:shadow-md hover:bg-red-50 dark:hover:bg-red-900/20 transition-all duration-300 text-red-600 dark:text-red-400 font-medium\">\n              <span className=\"text-red-500 dark:text-red-400 mr-2\">🗑️</span>\n              <span className=\"text-xs font-semibold\">선택 삭제({selection.selected.length})</span>\n            </button>} v1={() => setShowForm(true)} v2={<StatsCards invoices={invoices} />} v3={<FilterBar clients={clients} selectedClient={filters.selectedClient} selectedStatus={filters.selectedStatus} filteredCount={filteredInvoices.length} onChangeClient={val => filters.setSelectedClient(val)} onChangeStatus={val => filters.setSelectedStatus(val)} onReset={() => filters.reset()} />} v4={<InvoicesTable items={filteredInvoices} allSelected={allSelected} selectedIds={selection.selected} onToggleAll={handleToggleAll} onToggleOne={handleToggleOne} format={format} onChangeStatus={handleChangeStatus} onViewDetails={handleViewDetails} onOpenPrint={handleOpenPrint} onDelete={handleDelete} statuses={statuses} getStatusColor={getStatusColor} />} v5={detail !== null && detail !== undefined && <div className=\"fixed inset-0 bg-black/30 dark:bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-5xl p-6\">\n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">청구서 상세</h3>\n              <div className=\"flex items-center gap-2\">\n                <button onClick={handleOpenDetailPrint} className=\"px-3 py-1.5 bg-indigo-600 dark:bg-indigo-500 hover:bg-indigo-700 dark:hover:bg-indigo-600 text-white rounded text-sm\" title=\"상세 출력\">🖨️ 상세 출력</button>\n                <button onClick={() => setDetail(null)} className=\"text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-300\">✕</button>\n              </div>\n            </div>\n            {/* 인쇄 대상 시작 */}\n            <div ref={detailPrintRef}>\n              {/* 인쇄 헤더: 번호/성명(건축주)만 출력 */}\n              <div className=\"mb-3 text-sm text-gray-900 dark:text-gray-100\">\n                <p><strong>번호:</strong> {detail.id}</p>\n                <p><strong>성명:</strong> {detail.client}</p>\n              </div>\n              <div className=\"mt-4\">\n                <h4 className=\"font-medium mb-2 text-gray-900 dark:text-gray-100\">작업 내역</h4>\n                <InvoiceDetailTable items={detail.workItems !== null && detail.workItems !== undefined ? detail.workItems : []} format={format} totalAmount={(() => {\n            const MIN_VALUE = 0;\n            const amt = Number(detail.amount);\n            return amt !== MIN_VALUE && !isNaN(amt) ? amt : MIN_VALUE;\n          })()} />\n              {/* 합계 영역: 템플릿 스타일 참고(소계/부가세/총액) */}\n              <div className=\"mt-3 w-full flex justify-end\">\n                <div className=\"w-full max-w-sm space-y-1 bg-white dark:bg-gray-700 p-3 rounded border border-gray-200 dark:border-gray-600\">\n                  {(() => {\n                const MIN_VALUE = 0;\n                const VAT_DIVISOR = 1.1;\n                const amt = Number(detail.amount);\n                const total = amt !== MIN_VALUE && !isNaN(amt) ? amt : MIN_VALUE;\n                const subtotal = Math.round(total / VAT_DIVISOR);\n                const vat = total - subtotal;\n                return <>\n                        <div className=\"flex justify-between text-sm text-gray-900 dark:text-gray-100\"><span>소계</span><span>{format(subtotal)}원</span></div>\n                        <div className=\"flex justify-between text-sm text-gray-900 dark:text-gray-100\"><span>부가세(10%)</span><span>{format(vat)}원</span></div>\n                        <div className=\"flex justify-between font-bold text-base text-gray-900 dark:text-gray-100\"><span>총액</span><span>{format(total)}원</span></div>\n                      </>;\n              })()}\n                </div>\n              </div>\n              </div>\n            </div>\n            {/* 인쇄 대상 끝 */}\n            <div className=\"mt-4 text-right\">\n              <button onClick={() => setDetail(null)} className=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\">닫기</button>\n            </div>\n          </div>\n        </div>} v6={<ConfirmDialog open={showConfirmBulkDelete} title=\"선택 삭제\" message={`선택된 ${selection.selected.length}개의 청구서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmBulkDelete} onCancel={() => setShowConfirmBulkDelete(false)} />} v7={<ConfirmDialog open={pendingDeleteId != null} title=\"청구서 삭제\" message={`이 청구서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmDeleteSingle} onCancel={() => setPendingDeleteId(null)} />} v8={showForm && <div className=\"fixed inset-0 bg-gray-800/50 dark:bg-black/60 backdrop-blur-sm overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-8 mx-auto w-[980px] max-w-[95vw] shadow-2xl rounded-2xl bg-white/80 dark:bg-gray-800/90 ring-1 ring-black/5 dark:ring-white/10 mb-8\">\n            <div className=\"rounded-t-2xl bg-gradient-to-br from-indigo-50 via-purple-50 to-white dark:from-gray-700 dark:via-gray-800 dark:to-gray-900 px-8 pt-8 pb-6 text-center\">\n              <h3 className=\"text-2xl font-extrabold tracking-tight text-indigo-600 dark:text-indigo-400\">새 청구서 생성</h3>\n              <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">청구 정보를 입력하고 항목을 추가하세요</p>\n            </div>\n            <div className=\"px-6 pb-6\">\n              <form id=\"invoice-form\" onSubmit={submitForm} className=\"space-y-4\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">건축주 *</label>\n                      <select name=\"clientId\" value={String(form.clientId)} onChange={onFormChange} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required>\n                        <option value=\"\">건축주 선택</option>\n                        {clients.map(c => <option key={c.id} value={String(c.id)}>{c.name}</option>)}\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">프로젝트 *</label>\n                      {!showCustomProject ? <select name=\"project\" value={form.project} onChange={onFormChange} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required disabled={typeof form.clientId === 'string' && form.clientId === '' || typeof form.clientId === 'number' && (form.clientId === 0 || isNaN(form.clientId))}>\n                          <option value=\"\">{(typeof form.clientId === 'string' ? form.clientId !== '' : form.clientId !== 0 && !isNaN(form.clientId)) ? '프로젝트 선택' : '먼저 건축주를 선택하세요'}</option>\n                          {(typeof form.clientId === 'string' ? form.clientId !== '' : form.clientId !== 0 && !isNaN(form.clientId)) && getClientProjects(form.clientId).map((proj, idx) => <option key={idx} value={proj}>{proj}</option>)}\n                          {(typeof form.clientId === 'string' ? form.clientId !== '' : form.clientId !== 0 && !isNaN(form.clientId)) && <option value=\"custom\">직접 입력</option>}\n                        </select> : <input type=\"text\" name=\"project\" value={form.project} onChange={onFormChange} placeholder=\"프로젝트명을 입력하세요\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />}\n                      {showCustomProject && <button type=\"button\" onClick={() => {\n                  setShowCustomProject(false);\n                  setForm(prev => ({\n                    ...prev,\n                    project: ''\n                  }));\n                }} className=\"mt-1 text-xs text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300\">← 목록에서 선택</button>}\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">작업장 *</label>\n                      <select name=\"workplaceId\" value={String(form.workplaceId)} onChange={onFormChange} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required disabled={typeof form.clientId === 'string' && form.clientId === '' || typeof form.clientId === 'number' && (form.clientId === 0 || isNaN(form.clientId))}>\n                        <option value=\"\">{(typeof form.clientId === 'string' ? form.clientId !== '' : form.clientId !== 0 && !isNaN(form.clientId)) ? '작업장 선택' : '먼저 건축주를 선택하세요'}</option>\n                        {(typeof form.clientId === 'string' ? form.clientId !== '' : form.clientId !== 0 && !isNaN(form.clientId)) && getClientWorkplaces(form.clientId).map(wp => <option key={wp.id} value={String(wp.id)}>{wp.name} - {wp.address}</option>)}\n                      </select>\n                      {form.workplaceAddress !== '' && <div className=\"mt-2 p-2 bg-gray-50 dark:bg-gray-700 rounded text-sm text-gray-600 dark:text-gray-300\">작업장 주소: {form.workplaceAddress}</div>}\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">발행일</label>\n                      <input type=\"date\" name=\"date\" value={form.date} onChange={onFormChange} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">작업 항목</h4>\n                    <button type=\"button\" onClick={addFormItem} className=\"text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 text-sm\">+ 항목 추가</button>\n                  </div>\n                  <div className=\"space-y-3 max-h-96 overflow-y-auto pr-1\">\n                    {form.items.map((it, idx) => <div key={idx} className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-3 bg-gray-50 dark:bg-gray-700\">\n                        <div className=\"grid grid-cols-4 gap-2 mb-2\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">내용</label>\n                            <input type=\"text\" value={it.name} onChange={e => onFormItemChange(idx, 'name', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" required />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">카테고리</label>\n                            <select value={it.category !== null && it.category !== undefined && it.category !== '' ? it.category : ''} onChange={e => onFormItemChange(idx, 'category', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n                              <option value=\"\">선택</option>\n                              {categories.map(cat => <option key={cat} value={cat}>{cat}</option>)}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">수량</label>\n                            <input type=\"text\" value={it.quantity === '' ? '' : String(it.quantity)} onChange={e => onFormItemChange(idx, 'quantity', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">단위</label>\n                            <select value={it.unit !== null && it.unit !== undefined && it.unit !== '' ? it.unit : ''} onChange={e => onFormItemChange(idx, 'unit', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\">\n                              <option value=\"\">선택</option>\n                              {units.map(unit => <option key={unit} value={unit}>{unit}</option>)}\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-2 gap-2 mb-2\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">단가</label>\n                            <input type=\"text\" value={it.unitPrice === '' ? '' : String(it.unitPrice)} onChange={e => onFormItemChange(idx, 'unitPrice', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">상세 설명</label>\n                            <textarea value={it.description !== null && it.description !== undefined && it.description !== '' ? it.description : ''} onChange={e => onFormItemChange(idx, 'description', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm h-8 resize-none bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" placeholder=\"작업 상세 내용\"></textarea>\n                          </div>\n                        </div>\n                        {/* 인부임 섹션 */}\n                        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded p-2 mb-2\">\n                          <div className=\"text-xs font-medium text-blue-700 dark:text-blue-400 mb-1\">인부임 정보</div>\n                          <div className=\"grid grid-cols-4 gap-2\">\n                            <div>\n                              <label className=\"block text-xs text-blue-600 dark:text-blue-400 mb-1\">인부수</label>\n                              <input type=\"text\" value={it.laborPersons === '' ? '' : String(it.laborPersons)} onChange={e => onFormItemChange(idx, 'laborPersons', e.target.value)} className=\"w-full border border-blue-200 dark:border-blue-700 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" placeholder=\"명\" />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-blue-600 dark:text-blue-400 mb-1\">단가</label>\n                              <input type=\"text\" value={it.laborUnitRate === '' ? '' : String(it.laborUnitRate)} onChange={e => onFormItemChange(idx, 'laborUnitRate', e.target.value)} className=\"w-full border border-blue-200 dark:border-blue-700 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" placeholder=\"원\" />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-blue-600 dark:text-blue-400 mb-1\">인부수</label>\n                              <input type=\"text\" value={it.laborPersonsGeneral === '' ? '' : String(it.laborPersonsGeneral)} onChange={e => onFormItemChange(idx, 'laborPersonsGeneral', e.target.value)} className=\"w-full border border-blue-200 dark:border-blue-700 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" placeholder=\"명\" />\n                            </div>\n                            <div>\n                              <label className=\"block text-xs text-blue-600 dark:text-blue-400 mb-1\">단가</label>\n                              <input type=\"text\" value={it.laborUnitRateGeneral === '' ? '' : String(it.laborUnitRateGeneral)} onChange={e => onFormItemChange(idx, 'laborUnitRateGeneral', e.target.value)} className=\"w-full border border-blue-200 dark:border-blue-700 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" placeholder=\"원\" />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-3 gap-2\">\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">비고</label>\n                            <input type=\"text\" value={it.notes !== null && it.notes !== undefined && it.notes !== '' ? it.notes : ''} onChange={e => onFormItemChange(idx, 'notes', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">날짜</label>\n                            <input type=\"date\" value={it.date !== null && it.date !== undefined && it.date !== '' ? it.date : ''} onChange={e => onFormItemChange(idx, 'date', e.target.value)} className=\"w-full border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\" />\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">합계</label>\n                            <div className=\"w-full bg-gray-100 dark:bg-gray-900 border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm text-gray-900 dark:text-gray-100\">{(() => {\n                        const MIN_VALUE = 0;\n                        const total = Number(it.total);\n                        return format(total !== MIN_VALUE && !isNaN(total) ? total : MIN_VALUE);\n                      })()}원</div>\n                          </div>\n                        </div>\n                        {form.items.length > 1 && <div className=\"mt-2 text-right\">\n                            <button type=\"button\" onClick={() => removeFormItem(idx)} className=\"text-xs text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300\">항목 삭제</button>\n                          </div>}\n                      </div>)}\n                  </div>\n                </div>\n\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n                  <div className=\"grid grid-cols-3 gap-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">상태</label>\n                      <select name=\"status\" value={form.status} onChange={onFormChange} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\">\n                        <option value=\"발송대기\">발송대기</option>\n                        <option value=\"발송됨\">발송됨</option>\n                        <option value=\"미결제\">미결제</option>\n                        <option value=\"결제완료\">결제완료</option>\n                      </select>\n                    </div>\n                    <div className=\"col-span-2 text-right\">\n                      <div className=\"text-sm text-gray-600 dark:text-gray-300\">총 금액</div>\n                      <div className=\"text-lg font-bold text-gray-900 dark:text-gray-100\">{format(getFormTotal())}원</div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n            </div>\n\n            {/* Sticky 버튼 영역 */}\n            <div className=\"sticky bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700 px-6 py-4 rounded-b-2xl shadow-lg\">\n              <div className=\"flex justify-end space-x-3\">\n                <button type=\"button\" onClick={() => {\n            setShowForm(false);\n            setShowCustomProject(false);\n          }} className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition font-medium\">\n                  취소\n                </button>\n                <button type=\"submit\" form=\"invoice-form\" className=\"px-6 py-2.5 bg-indigo-600 dark:bg-indigo-500 hover:bg-indigo-700 dark:hover:bg-indigo-600 text-white rounded-lg transition font-bold\">\n                  저장\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>} />;\n};\nimport { block as _block } from \"million/react\";\nimport { useMemo, useRef, useState } from 'react';\nimport StatsCards from './invoices/StatsCards';\nimport FilterBar from './invoices/FilterBar';\nimport InvoicesTable from './invoices/InvoicesTable';\nimport InvoiceDetailTable from './invoices/InvoiceDetailTable';\nimport ConfirmDialog from './ConfirmDialog';\nimport { useApp } from '../contexts/AppContext';\nimport { useNumberFormat } from '../hooks/useNumberFormat';\nimport { useFilters } from '../hooks/useFilters';\nimport { useSelection } from '../hooks/useSelection';\nimport type { Invoice, InvoiceStatus } from '../types/domain';\nimport { exportToExcel } from '../utils/excelUtils';\nimport { TIMEOUT } from '../constants/formatting';\nexport default Invoices;","import Invoices from '../components/Invoices';\nexport default function InvoicesPage() {\n  return <Invoices />;\n}","/**\n * Formatting constants for phone numbers and business registration\n */\nimport { MS_IN_SECOND, SECONDS_IN_MINUTE } from './units';\n\n// Phone number formatting constants\nexport const PHONE_FORMAT = {\n  SEOUL_AREA_CODE_LENGTH: 2,\n  STANDARD_AREA_CODE_LENGTH: 3,\n  MIN_DIGITS_FOR_AREA_CODE: 3,\n  MIN_DIGITS_FOR_FIRST_HYPHEN: 7,\n  MAX_PHONE_DIGITS: 11,\n  SEOUL_DIGITS_THRESHOLD: 9,\n  LAST_FOUR_DIGITS: 4,\n  SEOUL_MIDDLE_START: 2,\n  SEOUL_MIDDLE_END: 6,\n  SEOUL_TOTAL_MAX: 10,\n  STANDARD_MIDDLE_START: 3,\n  STANDARD_MIDDLE_END: 7,\n} as const;\n\n// Business registration number formatting constants\nexport const BUSINESS_NUMBER_FORMAT = {\n  MAX_DIGITS: 10,\n  FIRST_PART_LENGTH: 3,\n  SECOND_PART_LENGTH: 5,\n} as const;\n\n// File size constants\nexport const FILE_SIZE = {\n  MAX_SIZE_MB: 2,\n  BYTES_PER_MB: 1024,\n  BYTES_PER_KB: 1024,\n} as const;\n\n// Pagination constants\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 20,\n  DEFAULT_PAGE: 0,\n  ITEMS_PER_PAGE: 5,\n  RECENT_ITEMS_LIMIT: 6,\n} as const;\n\n// Timeout constants (in milliseconds)\nexport const TIMEOUT = {\n  // eslint-disable-next-line no-magic-numbers\n  AUTO_SAVE_DELAY: 3 * MS_IN_SECOND,\n  // eslint-disable-next-line no-magic-numbers\n  SESSION_TIMEOUT: 60 * SECONDS_IN_MINUTE * MS_IN_SECOND, // 1 hour\n} as const;\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React from 'react';\ntype Props = {\n  open: boolean;\n  title: string;\n  message: string | React.ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\nconst ConfirmDialog_1 = _compiledBlock(_props => <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-lg w-full max-w-md p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{_props.v0}</h3>\n        <div className=\"text-sm text-gray-600 mb-4\">{_props.v1}</div>\n        <div className=\"flex justify-end space-x-2\">\n          <button onClick={_props.v2} className=\"px-4 py-2 text-gray-600 hover:text-gray-800\">{_props.v3}</button>\n          <button onClick={_props.v4} className=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded\">{_props.v5}</button>\n        </div>\n      </div>\n    </div>, {\n  name: \"ConfirmDialog_1\",\n  portals: [\"v0\", \"v1\", \"v3\", \"v5\"]\n});\nconst ConfirmDialog: React.FC<Props> = ({\n  open,\n  title,\n  message,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel\n}) => {\n  if (!open) return null;\n  return /*@million jsx-skip*/<ConfirmDialog_1 v0={title} v1={message} v2={onCancel} v3={cancelText} v4={onConfirm} v5={confirmText} />;\n};\nexport default ConfirmDialog;","import { useEffect, useMemo, useState } from 'react';\n\nexport type Id = string | number;\n\nexport function useSelection(allIds: Id[]) {\n  const [selected, setSelected] = useState<Id[]>([]);\n\n  // 교차 보정: 전체 목록이 바뀌면 선택 목록도 교집합으로 정리\n  useEffect(() => {\n    setSelected((prev) => {\n      const next = prev.filter((id) => allIds.includes(id));\n      // 동일한 내용이면 상태 갱신 생략하여 불필요한 리렌더/루프 방지\n      if (next.length === prev.length && next.every((v, i) => v === prev[i])) {\n        return prev;\n      }\n      return next;\n    });\n  }, [allIds]);\n\n  const allSelected = useMemo(\n    () => allIds.length > 0 && selected.length === allIds.length,\n    [allIds.length, selected.length]\n  );\n\n  const toggleOne = (id: Id, checked: boolean) => {\n    setSelected((prev) =>\n      checked ? Array.from(new Set([...prev, id])) : prev.filter((x) => x !== id)\n    );\n  };\n\n  const toggleAll = (checked: boolean) => {\n    setSelected(checked ? [...allIds] : []);\n  };\n\n  const clear = () => setSelected([]);\n\n  return { selected, setSelected, allSelected, toggleOne, toggleAll, clear };\n}\n","// Simple number format/parse utilities as a React hook\n// Provides comma formatting and safe integer parsing used across forms.\n\nexport function useNumberFormat() {\n  /** Format a number-like value with thousands separators. */\n  const format = (value: number | string | null | undefined): string => {\n    if (value === null || value === undefined || value === '') return '';\n    const onlyDigits = String(value).replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return '';\n    const num = Number(onlyDigits);\n    if (Number.isNaN(num)) return '';\n    return num.toLocaleString();\n  };\n\n  /** Parse a user input string into an integer (commas and non-digits ignored). */\n  const parse = (input: string): number => {\n    const onlyDigits = String(input ?? '').replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return 0;\n    const n = parseInt(onlyDigits, 10);\n    return Number.isNaN(n) ? 0 : n;\n  };\n\n  return { format, parse };\n}\n","import { useState, useMemo } from 'react';\n\nexport function useFilters(initial?: { selectedClient?: string; selectedStatus?: string }) {\n  const [selectedClient, setSelectedClient] = useState<string>(initial?.selectedClient ?? '');\n  const [selectedStatus, setSelectedStatus] = useState<string>(initial?.selectedStatus ?? '');\n\n  const isActive = useMemo(() => (selectedClient.trim() !== '' || selectedStatus.trim() !== ''), [selectedClient, selectedStatus]);\n  const reset = () => {\n    setSelectedClient('');\n    setSelectedStatus('');\n  };\n\n  const countLabel = (total: number, filtered: number) => (isActive ? `${filtered}개` : `총 ${total}개`);\n\n  return {\n    selectedClient,\n    selectedStatus,\n    setSelectedClient,\n    setSelectedStatus,\n    reset,\n    isActive,\n    countLabel,\n  };\n}\n"],"names":["StatsCards_1","_compiledBlock","_props","_jsxs","className","children","v0","v1","v2","v3","name","portals","_ref","invoices","totalCount","length","totalAmount","reduce","s","i","n","Number","amount","isFinite","paidCount","filter","status","unpaidCount","Card","_ref2","title","value","icon","Icon","bg","iconBg","_jsx","concat","DocumentTextIcon","CheckCircleIcon","ClockIcon","toLocaleString","CurrencyDollarIcon","FilterBar_1","onChange","v4","disabled","v5","v6","v7","v8","v9","clients","selectedClient","selectedStatus","filteredCount","onChangeClient","onChangeStatus","onReset","hasClient","String","hasStatus","trim","hasFilter","e","target","map","c","id","onClick","InvoicesTable_1","type","checked","items","allSelected","selectedIds","onToggleAll","onToggleOne","format","onViewDetails","onOpenPrint","onDelete","statuses","getStatusColor","invoice","includes","dueDate","client","project","workplaceAddress","date","Tooltip","label","InvoiceDetailTable_1","colSpan","sum","it","qNum","quantity","q","uNum","unitPrice","u","tRaw","total","_it$category","_it$description","_it$total","_it$date","_it$unit","_it$notes","category","desc","description","laborPersonsGeneral","laborUnitRateGeneral","laborPersons","laborUnitRate","gen","sk","laborTotal","qN","uN","totalFallback","tN","lineTotal","Boolean","join","unit","nRaw","notes","Invoices_1","setInvoices","companyInfo","stampImage","categories","units","setWorkItems","useApp","useNumberFormat","filters","useFilters","showForm","setShowForm","useState","showCustomProject","setShowCustomProject","form","setForm","clientId","workplaceId","Date","toISOString","split","filteredInvoices","useMemo","base","_clients$find","cid","parseInt","clientName","find","inv","undefined","allVisibleIds","selection","useSelection","showConfirmBulkDelete","setShowConfirmBulkDelete","pendingDeleteId","setPendingDeleteId","detail","setDetail","resolveBaseUrl","pub","process","path","URL","window","location","origin","pathname","endsWith","slice","_unused","startsWith","detailPrintRef","useRef","getClientWorkplaces","cl","workplaces","onFormChange","prev","next","_objectSpread","wp","w","address","onFormItemChange","index","field","digits","replace","numeric","pNum","lpNum","lrNum","lpgNum","lrgNum","isNaN","p","laborCost","getFormTotal","selected","handleBulkDelete","StatsCards","FilterBar","val","setSelectedClient","setSelectedStatus","reset","InvoicesTable","toggleAll","handleToggleOne","toggleOne","handleChangeStatus","payload","localStorage","setItem","JSON","stringify","printUrl","printWindow","open","confirm","assign","setTimeout","focus","TIMEOUT","AUTO_SAVE_DELAY","error","exportToExcel","invoiceDetail","handleOpenDetailPrint","alert","ref","InvoiceDetailTable","workItems","amt","subtotal","Math","round","vat","_Fragment","ConfirmDialog","message","confirmText","cancelText","onConfirm","async","clear","supabase","from","delete","in","err","onCancel","eq","onSubmit","preventDefault","newId","getFullYear","padStart","workplaceIdNumber","created","qtyNum","priceNum","totalNum","previousInvoices","_created$project","_created$clientId","_workplace$name","getCurrentUserId","userId","validWorkplaceId","invoiceInsertData","invoice_number","user_id","client_id","workplace_id","data","invoiceData","invError","insert","select","single","_created$project2","console","code","details","itemsToInsert","item","_item$category","_item$description","_item$quantity","_item$unit","_item$unitPrice","_item$total","_item$notes","_item$date","invoice_id","item_id","unit_price","labor_persons","labor_unit_rate","labor_persons_general","labor_unit_rate_general","itemsError","clientIdForWorkplace","workplace","workplaceName","workItemsToInsert","_created$project3","_item$description2","_item$category2","_item$quantity2","_item$unit2","_item$unitPrice2","_item$date2","_item$notes2","client_name","workplace_name","project_name","default_price","start_date","workItemsData","workItemsError","fromDbStatus","_statusMap$status","newWorkItems","_w$client_name","_w$workplace_name","_w$project_name","_w$category","_w$default_price","_w$quantity","_w$unit","_w$description","_w$start_date","_w$notes","_w$labor_persons","_w$labor_unit_rate","_w$labor_persons_gene","_w$labor_unit_rate_ge","rawWorkplaceId","workplaceIdValue","work_item_id","projectName","defaultPrice","required","placeholder","clientProjects","projects","workplaceProjects","_wp$description","Array","Set","getClientProjects","proj","idx","addFormItem","cat","_","removeFormItem","InvoicesPage","Invoices","PHONE_FORMAT","SEOUL_AREA_CODE_LENGTH","STANDARD_AREA_CODE_LENGTH","MIN_DIGITS_FOR_AREA_CODE","MIN_DIGITS_FOR_FIRST_HYPHEN","MAX_PHONE_DIGITS","SEOUL_DIGITS_THRESHOLD","LAST_FOUR_DIGITS","SEOUL_MIDDLE_START","SEOUL_MIDDLE_END","SEOUL_TOTAL_MAX","STANDARD_MIDDLE_START","STANDARD_MIDDLE_END","BUSINESS_NUMBER_FORMAT","MAX_DIGITS","FIRST_PART_LENGTH","SECOND_PART_LENGTH","MS_IN_SECOND","SESSION_TIMEOUT","SECONDS_IN_MINUTE","ConfirmDialog_1","allIds","setSelected","useEffect","every","v","x","onlyDigits","num","parse","input","initial","_initial$selectedClie","_initial$selectedStat","isActive","countLabel","filtered"],"sourceRoot":""}