{"version":3,"file":"static/js/main.35d35594.js","mappings":"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","sources":["contexts/ThemeContext.tsx","components/Layout.tsx","components/Login.tsx","components/ForgotPassword.tsx","components/PendingApproval.tsx","index.tsx","services/supabase.ts","utils/logger.ts","constants/units.ts","utils/secureStorageAdapter.ts","contexts/UserContext.tsx","utils/modernSecureStorage.ts","services/notificationService.ts","contexts/AppContext.impl.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\ntype Theme = 'light' | 'dark';\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({\n  children\n}) => {\n  const [theme, setTheme] = useState<Theme>(() => {\n    // localStorage에서 저장된 테마 불러오기\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme !== null && savedTheme !== '' ? savedTheme as Theme : 'light';\n  });\n  useEffect(() => {\n    // HTML 루트 요소에 테마 클래스 적용\n    const root = window.document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n\n    // localStorage에 테마 저장\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return <ThemeContext.Provider value={{\n    theme,\n    toggleTheme\n  }}>\n      {children}\n    </ThemeContext.Provider>;\n};\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst Layout_1 = _compiledBlock(_props => <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors\">\n      {/* Sidebar */}\n      <div className=\"fixed inset-y-0 left-0 z-50 w-72 bg-white dark:bg-gray-800 shadow-lg border-r border-gray-200 dark:border-gray-700\">\n        {/* Header */}\n        <div className=\"flex h-20 items-center justify-between px-6 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center\">\n              {_props.v0}\n            </div>\n            <div>\n              <h1 className=\"text-lg font-bold text-gray-900 dark:text-white\">건축 관리 시스템</h1>\n              <p className=\"text-gray-500 dark:text-gray-400 text-xs\">Architecture Management</p>\n            </div>\n          </div>\n          {/* Theme Toggle Button */}\n          <button onClick={_props.v1} className=\"p-2 rounded-lg bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\" aria-label={_props.v2} title={_props.v3}>\n            {_props.v4}\n          </button>\n        </div>\n        \n        <nav className=\"mt-10 px-4\">\n          <ul className=\"space-y-2\">\n            {_props.v5}\n          </ul>\n        </nav>\n        \n        {/* User menu */}\n        {_props.v6}\n      </div>\n\n      {/* Main content */}\n      <div className=\"pl-72\">\n        <main className=\"py-10 px-8 lg:px-12\">\n          <div className=\"mx-auto max-w-7xl\">\n            {_props.v7}\n          </div>\n        </main>\n      </div>\n    </div>, {\n  name: \"Layout_1\",\n  portals: [\"v0\", \"v4\", \"v5\", \"v6\", \"v7\"]\n});\nconst Layout = function Layout() {\n  const location = useLocation();\n  const {\n    logout,\n    currentUser,\n    isAdmin\n  } = useUser();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (menuRef.current !== null && !menuRef.current.contains(e.target as Node)) {\n        setShowUserMenu(false);\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') setShowUserMenu(false);\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  return /*@million jsx-skip*/<Layout_1 v0={<HomeIcon className=\"h-5 w-5 text-white\" />} v1={toggleTheme} v2={theme === 'light' ? '다크 모드로 전환' : '라이트 모드로 전환'} v3={theme === 'light' ? '다크 모드로 전환' : '라이트 모드로 전환'} v4={theme === 'light' ? <MoonIcon className=\"h-5 w-5 text-gray-700\" /> : <SunIcon className=\"h-5 w-5 text-yellow-400\" />} v5={navigation.filter(item => !item.adminOnly || isAdmin).map(item => {\n    const isActive = location.pathname === item.href;\n    return <li key={item.name}>\n                    <Link to={item.href} onClick={() => {\n        /* eslint-disable no-console */\n        console.log('🔵 [Layout] Navigation clicked:', item.name, '→', item.href);\n        console.log('🔵 [Layout] Current location:', location.pathname);\n        /* eslint-enable no-console */\n      }} className={`\n                        flex items-center px-4 py-3 text-base font-medium rounded-xl transition-all duration-200\n                        ${isActive ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white' : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'}\n                      `}>\n                      <item.icon className={`mr-3 h-5 w-5 ${isActive ? 'text-white' : 'text-gray-500 dark:text-gray-400'}`} />\n                      <span>{item.name}</span>\n                    </Link>\n                  </li>;\n  })} v6={<div className=\"absolute bottom-6 left-4 right-4\" ref={menuRef}>\n          <div className=\"relative\">\n            <button onClick={() => setShowUserMenu(!showUserMenu)} className=\"flex w-full items-center px-4 py-3 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-xl transition-colors duration-200\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mr-3\">\n                <UserIcon className=\"h-4 w-4 text-white\" />\n              </div>\n              <div className=\"text-left flex-1\">\n                <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {currentUser?.name !== null && currentUser?.name !== undefined ? currentUser.name : '사용자'}\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">v2.0 Enhanced Edition</div>\n              </div>\n            </button>\n\n            {showUserMenu && <div className=\"absolute bottom-full mb-2 w-full rounded-xl border border-gray-200 dark:border-gray-600 bg-white dark:bg-gray-700 shadow-lg overflow-hidden\">\n                <button onClick={logout} className=\"flex w-full items-center px-4 py-3 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\">\n                  <UserIcon className=\"mr-3 h-4 w-4 text-gray-500 dark:text-gray-400\" />\n                  로그아웃\n                </button>\n              </div>}\n          </div>\n        </div>} v7={<Outlet />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport { useUser } from '../contexts/UserContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { SunIcon, MoonIcon } from '@heroicons/react/24/outline';\nimport { HomeIcon, DocumentTextIcon, UsersIcon, WrenchScrewdriverIcon, CogIcon, CalculatorIcon, UserIcon, UserCircleIcon, ShieldCheckIcon, CalendarIcon } from '@heroicons/react/24/outline';\nconst navigation = [{\n  name: '대시보드',\n  href: '/',\n  icon: HomeIcon,\n  adminOnly: false\n}, {\n  name: '견적서 관리',\n  href: '/estimates',\n  icon: CalculatorIcon,\n  adminOnly: false\n}, {\n  name: '청구서 관리',\n  href: '/invoices',\n  icon: DocumentTextIcon,\n  adminOnly: false\n}, {\n  name: '건축주 관리',\n  href: '/clients',\n  icon: UsersIcon,\n  adminOnly: false\n}, {\n  name: '작업 항목 관리',\n  href: '/work-items',\n  icon: WrenchScrewdriverIcon,\n  adminOnly: false\n}, {\n  name: '일정 관리',\n  href: '/schedules',\n  icon: CalendarIcon,\n  adminOnly: false\n}, {\n  name: '환경설정',\n  href: '/company-info',\n  icon: CogIcon,\n  adminOnly: false\n}, {\n  name: '계정 설정',\n  href: '/settings',\n  icon: UserCircleIcon,\n  adminOnly: false\n}, {\n  name: '사용자 승인',\n  href: '/admin/approvals',\n  icon: ShieldCheckIcon,\n  adminOnly: true\n}];\nexport default Layout;","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LockClosedIcon, UserIcon, EnvelopeIcon } from '@heroicons/react/24/solid';\nimport { supabase } from '../services/supabase';\nimport { useUser } from '../contexts/UserContext';\ntype AuthMode = 'login' | 'signup';\ninterface SocialProvider {\n  name: string;\n  action: () => Promise<void>;\n  bgColor: string;\n  hoverColor: string;\n  textColor: string;\n  borderColor: string;\n  icon: React.ReactNode;\n}\nconst JSX_socialProviders_1 = _compiledBlock(() => <svg className=\"w-[18px] h-[18px] mr-2\" viewBox=\"0 0 24 24\">\n          <path fill=\"currentColor\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" />\n          <path fill=\"currentColor\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" />\n          <path fill=\"currentColor\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" />\n          <path fill=\"currentColor\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" />\n        </svg>, {\n  name: \"JSX_socialProviders_1\",\n  svg: true\n});\nconst JSX_socialProviders_2 = _compiledBlock(() => <svg className=\"w-[18px] h-[18px] mr-2\" viewBox=\"0 0 24 24\">\n          <path fill=\"currentColor\" d=\"M12 3C6.48 3 2 6.48 2 11c0 2.76 1.66 5.23 4.24 6.63l-.91 3.35c-.08.3.26.54.52.37l4.07-2.68c.69.09 1.4.14 2.08.14 5.52 0 10-3.48 10-8S17.52 3 12 3z\" />\n        </svg>, {\n  name: \"JSX_socialProviders_2\",\n  svg: true\n});\nconst Login_1 = _compiledBlock(_props3 => <div className=\"min-h-screen relative flex items-center justify-center px-4 py-8 overflow-hidden\">\n      {/* Background image from provided blueprint */}\n      {_props3.v0}\n\n      {/* Color overlay and vignette inspired by the HTML template */}\n      <div aria-hidden className=\"absolute inset-0 bg-[#0b2a53]/70 dark:bg-[#0b2a53]/70 mix-blend-multiply\" />\n      <div aria-hidden className=\"pointer-events-none absolute inset-0 bg-gradient-to-br from-indigo-900/40 via-transparent to-blue-900/40 dark:from-indigo-900/40 dark:via-transparent dark:to-blue-900/40\" />\n      <div aria-hidden className=\"pointer-events-none absolute -top-24 -left-24 w-96 h-96 rounded-full bg-indigo-300/30 dark:bg-indigo-300/30 blur-3xl\" />\n      <div aria-hidden className=\"pointer-events-none absolute -bottom-24 -right-24 w-96 h-96 rounded-full bg-blue-300/30 dark:bg-blue-300/30 blur-3xl\" />\n\n      <div className=\"w-full max-w-md\">\n        <div className=\"bg-white/85 dark:bg-white/85 backdrop-blur-md rounded-2xl shadow-xl border border-gray-200 dark:border-gray-200 p-7\">\n          <div className=\"text-center mb-6\">\n            <div className=\"inline-flex items-center justify-center w-12 h-12 rounded-2xl bg-blue-600 dark:bg-blue-600 text-white dark:text-white shadow-lg mb-2\">\n              {_props3.v1}\n            </div>\n            <h1 className=\"font-sans font-bold text-2xl text-gray-900 dark:text-gray-900 mb-1 tracking-wide\">건축 관리 시스템</h1>\n            <p className=\"text-gray-600 dark:text-gray-600 text-sm\">{_props3.v2}</p>\n          </div>\n\n          {/* 소셜 로그인 (로그인 모드일 때만 표시) */}\n          {_props3.v3}\n\n          <form onSubmit={_props3.v4} className=\"space-y-4\">\n            {_props3.v5}\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-700 mb-1.5\">\n                이메일\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400 dark:text-gray-400\">\n                  {_props3.v6}\n                </span>\n                <input id=\"email\" type=\"email\" autoComplete=\"email\" value={_props3.v7} onChange={_props3.v8} className=\"\n                    w-full pl-10 pr-3 py-2 border-2 border-gray-200 dark:border-gray-200 rounded-lg text-sm\n                    bg-gray-50 dark:bg-gray-50 transition-all duration-300 ease-in-out\n                    focus:outline-none focus:border-blue-500 focus:bg-white dark:focus:bg-white\n                    focus:shadow-[0_0_0_3px_rgba(59,130,246,0.1)] focus:-translate-y-0.5\n                    placeholder-gray-400 dark:placeholder-gray-400 text-gray-900 dark:text-gray-900\n                  \" placeholder=\"이메일을 입력하세요\" />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-700 mb-1.5\">\n                비밀번호\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400 dark:text-gray-400\">\n                  {_props3.v9}\n                </span>\n                <input id=\"password\" type=\"password\" autoComplete={_props3.v10} value={_props3.v11} onChange={_props3.v12} className=\"\n                    w-full pl-10 pr-3 py-2 border-2 border-gray-200 dark:border-gray-200 rounded-lg text-sm\n                    bg-gray-50 dark:bg-gray-50 transition-all duration-300 ease-in-out\n                    focus:outline-none focus:border-blue-500 focus:bg-white dark:focus:bg-white\n                    focus:shadow-[0_0_0_3px_rgba(59,130,246,0.1)] focus:-translate-y-0.5\n                    placeholder-gray-400 dark:placeholder-gray-400 text-gray-900 dark:text-gray-900\n                  \" placeholder={_props3.v13} />\n              </div>\n            </div>\n\n            {/* Remember Me와 비밀번호 찾기 (로그인 모드일 때만 표시) */}\n            {_props3.v14}\n\n            {_props3.v15}\n\n            {_props3.v16}\n\n            <button type=\"submit\" disabled={_props3.v17} className=\"\n                w-full bg-blue-600 dark:bg-blue-600 text-white dark:text-white py-3 rounded-lg text-sm font-semibold\n                transition-all duration-300 ease-in-out relative overflow-hidden\n                hover:bg-blue-700 dark:hover:bg-blue-700 hover:-translate-y-0.5 hover:shadow-[0_12px_24px_rgba(59,130,246,0.3)]\n                focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-500 focus:ring-offset-2\n                disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\n                group\n              \">\n              <div className=\"absolute inset-0 -translate-x-full group-hover:translate-x-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transition-transform duration-600\" />\n              {_props3.v18}\n            </button>\n          </form>\n\n          {/* 회원가입/로그인 전환 링크 */}\n          <div className=\"text-center text-sm text-gray-600 dark:text-gray-600 mt-5\">\n            {_props3.v19}\n          </div>\n\n          <div className=\"mt-4 text-xs text-gray-500 dark:text-gray-500 text-center\">\n            <p>건축 관리 시스템 v2.0</p>\n            <p>© 2025 Architecture Management System</p>\n          </div>\n        </div>\n      </div>\n    </div>, {\n  name: \"Login_1\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\", \"v5\", \"v6\", \"v9\", \"v14\", \"v15\", \"v16\", \"v18\", \"v19\"]\n});\nconst Login: React.FC = () => {\n  const [mode, setMode] = useState<AuthMode>('login');\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [name, setName] = useState<string>('');\n  const [rememberMe, setRememberMe] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const {\n    isLoggedIn\n  } = useUser();\n\n  // 로그인 상태가 되면 자동으로 대시보드로 이동\n  /* eslint-disable no-console */\n  useEffect(() => {\n    console.log('🟢 [Login] isLoggedIn changed:', isLoggedIn);\n    if (isLoggedIn) {\n      console.log('🟢 [Login] Redirecting to dashboard');\n      navigate('/');\n    }\n  }, [isLoggedIn, navigate]);\n  /* eslint-enable no-console */\n\n  const handleEmailSignIn = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    if (email.trim() === '' || password.trim() === '') {\n      setError('이메일과 비밀번호를 입력해주세요.');\n      setLoading(false);\n      return;\n    }\n    if (supabase === null) {\n      setError('Supabase가 초기화되지 않았습니다.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data,\n        error: signInError\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (signInError !== null) {\n        setError(signInError.message === 'Invalid login credentials' ? '이메일 또는 비밀번호가 올바르지 않습니다.' : signInError.message);\n      } else if (data.user !== null) {\n        setSuccess('로그인 성공!');\n        // eslint-disable-next-line no-magic-numbers\n        setTimeout(() => navigate('/'), 500);\n      }\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : '로그인 중 오류가 발생했습니다.';\n      setError(errorMessage);\n    }\n    setLoading(false);\n  };\n  const handleEmailSignUp = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    if (email.trim() === '' || password.trim() === '' || name.trim() === '') {\n      setError('모든 필드를 입력해주세요.');\n      setLoading(false);\n      return;\n    }\n\n    // eslint-disable-next-line no-magic-numbers\n    if (password.length < 6) {\n      setError('비밀번호는 최소 6자 이상이어야 합니다.');\n      setLoading(false);\n      return;\n    }\n    if (supabase === null) {\n      setError('Supabase가 초기화되지 않았습니다.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        data,\n        error: signUpError\n      } = await supabase.auth.signUp({\n        email,\n        password,\n        options: {\n          data: {\n            name: name\n          }\n        }\n      });\n      if (signUpError !== null) {\n        setError(signUpError.message);\n      } else if (data.user !== null) {\n        setSuccess('회원가입이 완료되었습니다! 이메일을 확인해주세요.');\n        // eslint-disable-next-line no-magic-numbers\n        setTimeout(() => setMode('login'), 2000);\n      }\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : '회원가입 중 오류가 발생했습니다.';\n      setError(errorMessage);\n    }\n    setLoading(false);\n  };\n  const loginWithGoogle = async (): Promise<void> => {\n    if (supabase === null) {\n      setError('Supabase가 초기화되지 않았습니다.');\n      return;\n    }\n    try {\n      const {\n        error: signInError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: window.location.origin\n        }\n      });\n      if (signInError !== null) {\n        setError('Google 로그인 중 오류가 발생했습니다.');\n      }\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : 'Google 로그인 중 오류가 발생했습니다.';\n      setError(errorMessage);\n    }\n  };\n  const loginWithKakao = async (): Promise<void> => {\n    /* eslint-disable no-console */\n    console.log('🟡 [Kakao] Login button clicked');\n    /* eslint-enable no-console */\n\n    if (supabase === null) {\n      setError('Supabase가 초기화되지 않았습니다.');\n      return;\n    }\n    try {\n      /* eslint-disable no-console */\n      console.log('🟡 [Kakao] Calling signInWithOAuth...');\n      const {\n        data,\n        error: signInError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'kakao',\n        options: {\n          redirectTo: window.location.origin\n        }\n      });\n      console.log('🟡 [Kakao] signInWithOAuth response:', {\n        data,\n        error: signInError\n      });\n      /* eslint-enable no-console */\n\n      if (signInError !== null) {\n        /* eslint-disable no-console */\n        console.error('❌ [Kakao] signInError:', signInError);\n        /* eslint-enable no-console */\n        setError(`Kakao 로그인 중 오류가 발생했습니다: ${signInError.message}`);\n      }\n    } catch (err: unknown) {\n      /* eslint-disable no-console */\n      console.error('❌ [Kakao] Exception:', err);\n      /* eslint-enable no-console */\n      const errorMessage = err instanceof Error ? err.message : 'Kakao 로그인 중 오류가 발생했습니다.';\n      setError(errorMessage);\n    }\n  };\n\n  // Naver 로그인 - Supabase 미지원으로 주석 처리 (추후 구현 시 활성화)\n  // const loginWithNaver = async (): Promise<void> => {\n  //   const naverClientId = process.env.REACT_APP_NAVER_CLIENT_ID;\n  //\n  //   if (typeof naverClientId !== 'string' || naverClientId.trim() === '') {\n  //     setError('Naver 로그인 설정이 필요합니다. 환경 변수 REACT_APP_NAVER_CLIENT_ID를 설정해주세요.');\n  //     return;\n  //   }\n  //\n  //   // Naver OAuth 2.0 플로우\n  //   const callbackUrl = `${window.location.origin}/auth/naver/callback`;\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const RANDOM_BASE = 36;\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const RANDOM_START = 2;\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const RANDOM_END = 15;\n  //   const state = Math.random().toString(RANDOM_BASE).substring(RANDOM_START, RANDOM_END);\n  //\n  //   // state를 localStorage에 저장하여 콜백에서 검증\n  //   localStorage.setItem('naver_oauth_state', state);\n  //\n  //   const naverAuthUrl = `https://nid.naver.com/oauth2.0/authorize?response_type=code&client_id=${naverClientId}&redirect_uri=${encodeURIComponent(callbackUrl)}&state=${state}`;\n  //\n  //   // 팝업 또는 리다이렉트로 Naver 로그인\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const POPUP_WIDTH = 500;\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const POPUP_HEIGHT = 600;\n  //   // eslint-disable-next-line no-magic-numbers\n  //   const HALF_DIVISOR = 2;\n  //   const left = window.screen.width / HALF_DIVISOR - POPUP_WIDTH / HALF_DIVISOR;\n  //   const top = window.screen.height / HALF_DIVISOR - POPUP_HEIGHT / HALF_DIVISOR;\n  //\n  //   window.open(\n  //     naverAuthUrl,\n  //     'naverLogin',\n  //     `width=${POPUP_WIDTH},height=${POPUP_HEIGHT},left=${left},top=${top}`\n  //   );\n  //\n  //   setError('Naver 로그인 팝업을 확인해주세요. 콜백 처리를 위한 백엔드 설정이 필요합니다.');\n  // };\n\n  const socialProviders: SocialProvider[] = [{\n    name: 'Google',\n    action: loginWithGoogle,\n    bgColor: 'bg-white dark:bg-white',\n    hoverColor: 'hover:bg-red-500 dark:hover:bg-red-500',\n    textColor: 'text-red-500 hover:text-white dark:text-red-500 dark:hover:text-white',\n    borderColor: 'border-red-500 dark:border-red-500',\n    icon: /*@million jsx-skip*/<JSX_socialProviders_1 />\n  }, {\n    name: 'Kakao',\n    action: loginWithKakao,\n    bgColor: 'bg-yellow-400 dark:bg-yellow-400',\n    hoverColor: 'hover:bg-yellow-500 dark:hover:bg-yellow-500',\n    textColor: 'text-gray-800 dark:text-gray-800',\n    borderColor: 'border-yellow-400 dark:border-yellow-400',\n    icon: /*@million jsx-skip*/<JSX_socialProviders_2 />\n  }\n  // Naver 로그인 - Supabase 미지원으로 주석 처리 (추후 구현 시 활성화)\n  // {\n  //   name: 'Naver',\n  //   action: loginWithNaver,\n  //   bgColor: 'bg-green-500',\n  //   hoverColor: 'hover:bg-green-600',\n  //   textColor: 'text-white',\n  //   borderColor: 'border-green-500',\n  //   icon: (\n  //     <svg className=\"w-[18px] h-[18px] mr-2\" viewBox=\"0 0 24 24\">\n  //       <path fill=\"currentColor\" d=\"M16.273 12.845L7.376 0H0v24h7.726V11.156L16.624 24H24V0h-7.727v12.845z\"/>\n  //     </svg>\n  //   ),\n  // },\n  ];\n  const handleSubmit = mode === 'login' ? handleEmailSignIn : handleEmailSignUp;\n  return /*@million jsx-skip*/<Login_1 v0={(() => {\n    const envVer = process.env.REACT_APP_ASSET_VER;\n    const version = typeof envVer === 'string' && envVer.trim() !== '' ? envVer.trim() : 'v2';\n    const envBg = process.env.REACT_APP_LOGIN_BG;\n    const raw = typeof envBg === 'string' && envBg.trim() !== '' ? envBg.trim() : `${process.env.PUBLIC_URL}/images/login-blueprint.png`;\n    const sep = raw.includes('?') ? '&' : '?';\n    const bgUrl = `${raw}${sep}${version}`;\n    return <div aria-hidden className=\"absolute inset-0 bg-center bg-cover bg-no-repeat bg-fixed blur-[2px]\" style={{\n      backgroundImage: `url(${bgUrl})`\n    }} />;\n  })()} v1={<LockClosedIcon className=\"w-6 h-6\" />} v2={mode === 'login' ? '로그인하여 시작하세요' : '새 계정을 만드세요'} v3={mode === 'login' && <div className=\"mb-5\">\n              <p className=\"text-center text-gray-600 dark:text-gray-600 text-sm font-medium mb-3\">\n                간편 로그인\n              </p>\n              <div className=\"flex flex-col gap-2.5 mb-4\">\n                {socialProviders.map(provider => <button key={provider.name} type=\"button\" onClick={provider.action} className={`\n                      flex items-center justify-center px-4 py-2.5 border-2\n                      ${provider.bgColor} ${provider.borderColor} ${provider.textColor}\n                      ${provider.hoverColor} rounded-lg font-medium text-sm\n                      transition-all duration-300 ease-in-out\n                      hover:-translate-y-0.5 hover:shadow-lg\n                      relative overflow-hidden group\n                    `}>\n                    <div className=\"absolute inset-0 -translate-x-full group-hover:translate-x-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transition-transform duration-500\" />\n                    {provider.icon}\n                    {provider.name}\n                  </button>)}\n              </div>\n\n              {/* 구분선 */}\n              <div className=\"relative flex items-center my-4\">\n                <div className=\"flex-1 border-t border-gray-300 dark:border-gray-300\"></div>\n                <span className=\"px-3 text-xs text-gray-500 dark:text-gray-500 font-medium\">또는</span>\n                <div className=\"flex-1 border-t border-gray-300 dark:border-gray-300\"></div>\n              </div>\n            </div>} v4={handleSubmit} v5={mode === 'signup' && <div>\n                <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-700 mb-1.5\">\n                  이름\n                </label>\n                <div className=\"relative\">\n                  <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400 dark:text-gray-400\">\n                    <UserIcon className=\"w-5 h-5\" />\n                  </span>\n                  <input id=\"name\" type=\"text\" autoComplete=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"\n                      w-full pl-10 pr-3 py-2 border-2 border-gray-200 dark:border-gray-200 rounded-lg text-sm\n                      bg-gray-50 dark:bg-gray-50 transition-all duration-300 ease-in-out\n                      focus:outline-none focus:border-blue-500 focus:bg-white dark:focus:bg-white\n                      focus:shadow-[0_0_0_3px_rgba(59,130,246,0.1)] focus:-translate-y-0.5\n                      placeholder-gray-400 dark:placeholder-gray-400 text-gray-900 dark:text-gray-900\n                    \" placeholder=\"이름을 입력하세요\" />\n                </div>\n              </div>} v6={<EnvelopeIcon className=\"w-5 h-5\" />} v7={email} v8={e => setEmail(e.target.value)} v9={<LockClosedIcon className=\"w-5 h-5\" />} v10={mode === 'login' ? 'current-password' : 'new-password'} v11={password} v12={e => setPassword(e.target.value)} v13={mode === 'signup' ? '비밀번호 (최소 6자)' : '비밀번호를 입력하세요'} v14={mode === 'login' && <div className=\"flex items-center justify-between\">\n                <label className=\"flex items-center cursor-pointer\">\n                  <input type=\"checkbox\" checked={rememberMe} onChange={e => setRememberMe(e.target.checked)} className=\"w-4 h-4 text-blue-600 border-gray-300 dark:border-gray-300 rounded focus:ring-blue-500 focus:ring-2\" />\n                  <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-600\">로그인 상태 유지</span>\n                </label>\n                <button type=\"button\" onClick={() => navigate('/forgot-password')} className=\"text-sm text-blue-600 dark:text-blue-600 hover:text-blue-800 dark:hover:text-blue-800 font-medium transition-colors\">\n                  비밀번호 찾기\n                </button>\n              </div>} v15={error !== '' && <div className=\"p-3 bg-red-50 dark:bg-red-50 border border-red-200 dark:border-red-200 rounded-md\">\n                <p className=\"text-red-700 dark:text-red-700 text-sm\">{error}</p>\n              </div>} v16={success !== '' && <div className=\"p-3 bg-green-50 dark:bg-green-50 border border-green-200 dark:border-green-200 rounded-md\">\n                <p className=\"text-green-700 dark:text-green-700 text-sm\">{success}</p>\n              </div>} v17={loading} v18={loading ? mode === 'login' ? '로그인 중...' : '가입 중...' : mode === 'login' ? '로그인' : '회원가입'} v19={mode === 'login' ? <>\n                아직 계정이 없으신가요?{' '}\n                <button type=\"button\" onClick={() => {\n      setMode('signup');\n      setError('');\n      setSuccess('');\n    }} className=\"text-blue-600 dark:text-blue-600 hover:text-blue-800 dark:hover:text-blue-800 font-semibold transition-colors underline\">\n                  회원가입\n                </button>\n              </> : <>\n                이미 계정이 있으신가요?{' '}\n                <button type=\"button\" onClick={() => {\n      setMode('login');\n      setError('');\n      setSuccess('');\n    }} className=\"text-blue-600 dark:text-blue-600 hover:text-blue-800 dark:hover:text-blue-800 font-semibold transition-colors underline\">\n                  로그인\n                </button>\n              </>} />;\n};\nexport default Login;","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LockClosedIcon, EnvelopeIcon, ArrowLeftIcon } from '@heroicons/react/24/solid';\nimport { supabase } from '../services/supabase';\nconst ForgotPassword_1 = _compiledBlock(_props => <div className=\"min-h-screen relative flex items-center justify-center px-4 py-8 overflow-hidden\">\n      {/* Background image */}\n      {_props.v0}\n\n      {/* Color overlay and vignette */}\n      <div aria-hidden className=\"absolute inset-0 bg-[#0b2a53]/70 mix-blend-multiply\" />\n      <div aria-hidden className=\"pointer-events-none absolute inset-0 bg-gradient-to-br from-indigo-900/40 via-transparent to-blue-900/40\" />\n      <div aria-hidden className=\"pointer-events-none absolute -top-24 -left-24 w-96 h-96 rounded-full bg-indigo-300/30 blur-3xl\" />\n      <div aria-hidden className=\"pointer-events-none absolute -bottom-24 -right-24 w-96 h-96 rounded-full bg-blue-300/30 blur-3xl\" />\n\n      <div className=\"w-full max-w-md\">\n        <div className=\"bg-white/85 backdrop-blur-md rounded-2xl shadow-xl border border-gray-200 p-7\">\n          <div className=\"text-center mb-6\">\n            <div className=\"inline-flex items-center justify-center w-12 h-12 rounded-2xl bg-blue-600 text-white shadow-lg mb-2\">\n              {_props.v1}\n            </div>\n            <h1 className=\"font-sans font-bold text-2xl text-gray-900 mb-1 tracking-wide\">비밀번호 찾기</h1>\n            <p className=\"text-gray-600 text-sm\">가입한 이메일 주소를 입력하세요</p>\n          </div>\n\n          <form onSubmit={_props.v2} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1.5\">\n                이메일\n              </label>\n              <div className=\"relative\">\n                <span className=\"absolute inset-y-0 left-0 pl-3 flex items-center text-gray-400\">\n                  {_props.v3}\n                </span>\n                <input id=\"email\" type=\"email\" autoComplete=\"email\" value={_props.v4} onChange={_props.v5} className=\"\n                    w-full pl-10 pr-3 py-2 border-2 border-gray-200 rounded-lg text-sm\n                    bg-gray-50 transition-all duration-300 ease-in-out\n                    focus:outline-none focus:border-blue-500 focus:bg-white\n                    focus:shadow-[0_0_0_3px_rgba(59,130,246,0.1)] focus:-translate-y-0.5\n                    placeholder-gray-400\n                  \" placeholder=\"이메일을 입력하세요\" />\n              </div>\n            </div>\n\n            {_props.v6}\n\n            {_props.v7}\n\n            <button type=\"submit\" disabled={_props.v8} className=\"\n                w-full bg-blue-600 text-white py-3 rounded-lg text-sm font-semibold\n                transition-all duration-300 ease-in-out relative overflow-hidden\n                hover:bg-blue-700 hover:-translate-y-0.5 hover:shadow-[0_12px_24px_rgba(59,130,246,0.3)]\n                focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\n                disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\n                group\n              \">\n              <div className=\"absolute inset-0 -translate-x-full group-hover:translate-x-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transition-transform duration-600\" />\n              {_props.v9}\n            </button>\n          </form>\n\n          {/* 로그인으로 돌아가기 */}\n          <div className=\"text-center text-sm text-gray-600 mt-5\">\n            <button type=\"button\" onClick={_props.v10} className=\"inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold transition-colors\">\n              {_props.v11}\n              로그인으로 돌아가기\n            </button>\n          </div>\n\n          <div className=\"mt-4 text-xs text-gray-500 text-center\">\n            <p>건축 관리 시스템 v2.0</p>\n            <p>© 2025 Architecture Management System</p>\n          </div>\n        </div>\n      </div>\n    </div>, {\n  name: \"ForgotPassword_1\",\n  portals: [\"v0\", \"v1\", \"v3\", \"v6\", \"v7\", \"v9\", \"v11\"]\n});\nconst ForgotPassword: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const navigate = useNavigate();\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    if (email.trim() === '') {\n      setError('이메일을 입력해주세요.');\n      setLoading(false);\n      return;\n    }\n    if (supabase === null) {\n      setError('Supabase가 초기화되지 않았습니다.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const {\n        error: resetError\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`\n      });\n      if (resetError !== null) {\n        setError('비밀번호 재설정 이메일 발송에 실패했습니다.');\n      } else {\n        setSuccess('비밀번호 재설정 링크를 이메일로 보냈습니다. 이메일을 확인해주세요.');\n        setEmail('');\n      }\n    } catch (err: unknown) {\n      const errorMessage = err instanceof Error ? err.message : '오류가 발생했습니다.';\n      setError(errorMessage);\n    }\n    setLoading(false);\n  };\n  return /*@million jsx-skip*/<ForgotPassword_1 v0={(() => {\n    const envVer = process.env.REACT_APP_ASSET_VER;\n    const version = typeof envVer === 'string' && envVer.trim() !== '' ? envVer.trim() : 'v2';\n    const envBg = process.env.REACT_APP_LOGIN_BG;\n    const raw = typeof envBg === 'string' && envBg.trim() !== '' ? envBg.trim() : `${process.env.PUBLIC_URL}/images/login-blueprint.png`;\n    const sep = raw.includes('?') ? '&' : '?';\n    const bgUrl = `${raw}${sep}${version}`;\n    return <div aria-hidden className=\"absolute inset-0 bg-center bg-cover bg-no-repeat bg-fixed blur-[2px]\" style={{\n      backgroundImage: `url(${bgUrl})`\n    }} />;\n  })()} v1={<LockClosedIcon className=\"w-6 h-6\" />} v2={handleSubmit} v3={<EnvelopeIcon className=\"w-5 h-5\" />} v4={email} v5={e => setEmail(e.target.value)} v6={error !== '' && <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                <p className=\"text-red-700 text-sm\">{error}</p>\n              </div>} v7={success !== '' && <div className=\"p-3 bg-green-50 border border-green-200 rounded-md\">\n                <p className=\"text-green-700 text-sm\">{success}</p>\n              </div>} v8={loading} v9={loading ? '발송 중...' : '재설정 링크 발송'} v10={() => navigate('/login')} v11={<ArrowLeftIcon className=\"w-4 h-4 mr-1\" />} />;\n};\nexport default ForgotPassword;","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ClockIcon, ExclamationCircleIcon } from '@heroicons/react/24/outline';\nimport { supabase } from '../services/supabase';\nimport { useUser } from '../contexts/UserContext';\ninterface ApprovalStatus {\n  status: 'pending' | 'approved' | 'rejected';\n  email: string;\n  provider: string;\n  created_at: string;\n}\nconst PendingApproval_1 = _compiledBlock(_props => <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 relative overflow-hidden\">\n        {_props.v0}\n        <div className=\"text-center relative z-10\">\n          <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-white dark:border-gray-300\"></div>\n          <p className=\"mt-4 text-white dark:text-gray-200\">로딩 중...</p>\n        </div>\n      </div>, {\n  name: \"PendingApproval_1\",\n  portals: [\"v0\"]\n});\nconst PendingApproval_2 = _compiledBlock(_props2 => <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 relative overflow-hidden\">\n      {/* Background with blueprint pattern */}\n      {_props2.v0}\n\n      {/* Content */}\n      <div className=\"relative z-10 w-full max-w-md mx-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-2xl overflow-hidden\">\n          {/* Header */}\n          <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-700 dark:to-purple-700 px-8 py-6\">\n            <h1 className=\"text-3xl font-bold text-white dark:text-gray-100 text-center font-['Pacifico']\">\n              건축 관리 시스템\n            </h1>\n          </div>\n\n          {/* Status Content */}\n          <div className=\"px-8 py-10\">\n            {_props2.v1}\n\n            {_props2.v2}\n\n            {_props2.v3}\n\n            {_props2.v4}\n\n            {/* Logout Button - only for pending/rejected/null status */}\n            {_props2.v5}\n          </div>\n        </div>\n\n        {/* Footer */}\n        <p className=\"text-center text-white dark:text-gray-200 text-sm mt-6 drop-shadow-lg\">\n          © 2024 건축 관리 시스템. All rights reserved.\n        </p>\n      </div>\n    </div>, {\n  name: \"PendingApproval_2\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\", \"v4\", \"v5\"]\n});\nconst PendingApproval: React.FC = () => {\n  const navigate = useNavigate();\n  const {\n    isLoggedIn\n  } = useUser();\n  const [approvalStatus, setApprovalStatus] = useState<ApprovalStatus | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // 로그인되지 않은 상태면 즉시 로그인 페이지로 리다이렉트\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login', {\n        replace: true\n      });\n    }\n  }, [isLoggedIn, navigate]);\n  useEffect(() => {\n    // 로그인되지 않았으면 approval 체크 안 함\n    if (!isLoggedIn) {\n      return;\n    }\n    const checkApprovalStatus = async (): Promise<void> => {\n      if (supabase === null) {\n        return;\n      }\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        if (user === null) {\n          navigate('/login', {\n            replace: true\n          });\n          return;\n        }\n        const {\n          data: approval,\n          error: approvalError\n        } = await supabase.from('user_approvals').select('status, email, provider, created_at').eq('user_id', user.id).single();\n        if (approvalError !== null) {\n          setLoading(false);\n          return;\n        }\n        if (approval !== null) {\n          setApprovalStatus(approval);\n        }\n      } catch (err: unknown) {\n        // Silent error handling\n      } finally {\n        setLoading(false);\n      }\n    };\n    void checkApprovalStatus();\n  }, [isLoggedIn, navigate]);\n  const handleLogout = async (): Promise<void> => {\n    if (supabase === null) {\n      return;\n    }\n    await supabase.auth.signOut();\n    navigate('/login');\n  };\n\n  // 로그인되지 않았으면 리다이렉트 중이므로 아무것도 렌더링하지 않음\n  if (!isLoggedIn) {\n    return null;\n  }\n  if (loading) {\n    return /*@million jsx-skip*/<PendingApproval_1 v0={(() => {\n      const envVer = process.env.REACT_APP_ASSET_VER;\n      const version = typeof envVer === 'string' && envVer.trim() !== '' ? envVer.trim() : 'v2';\n      const envBg = process.env.REACT_APP_LOGIN_BG;\n      const raw = typeof envBg === 'string' && envBg.trim() !== '' ? envBg.trim() : `${process.env.PUBLIC_URL}/images/login-blueprint.png`;\n      const sep = raw.includes('?') ? '&' : '?';\n      const bgUrl = `${raw}${sep}${version}`;\n      return <div className=\"absolute inset-0 bg-center bg-cover bg-no-repeat blur-[2px] opacity-10\" style={{\n        backgroundImage: `url(${bgUrl})`\n      }} />;\n    })()} />;\n  }\n  return /*@million jsx-skip*/<PendingApproval_2 v0={(() => {\n    const envVer = process.env.REACT_APP_ASSET_VER;\n    const version = typeof envVer === 'string' && envVer.trim() !== '' ? envVer.trim() : 'v2';\n    const envBg = process.env.REACT_APP_LOGIN_BG;\n    const raw = typeof envBg === 'string' && envBg.trim() !== '' ? envBg.trim() : `${process.env.PUBLIC_URL}/images/login-blueprint.png`;\n    const sep = raw.includes('?') ? '&' : '?';\n    const bgUrl = `${raw}${sep}${version}`;\n    return <div className=\"absolute inset-0 bg-center bg-cover bg-no-repeat blur-[2px] opacity-10\" style={{\n      backgroundImage: `url(${bgUrl})`\n    }} />;\n  })()} v1={approvalStatus?.status === 'approved' && <>\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"bg-green-100 dark:bg-green-900/30 rounded-full p-4\">\n                    <svg className=\"h-16 w-16 text-green-600 dark:text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                  </div>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100 text-center mb-4\">\n                  승인 완료\n                </h2>\n                <div className=\"bg-green-50 dark:bg-green-900/20 border-l-4 border-green-400 dark:border-green-500 p-4 mb-6\">\n                  <p className=\"text-sm text-gray-700 dark:text-gray-200\">\n                    <strong>{approvalStatus.email}</strong> 계정이 승인되었습니다.\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n                    이제 로그인하여 시스템을 사용하실 수 있습니다.\n                  </p>\n                </div>\n                <button onClick={() => {\n      void handleLogout();\n    }} className=\"w-full bg-gradient-to-r from-green-500 to-green-600 text-white py-3 rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-200 font-medium shadow-md mb-3\">\n                  로그인하기\n                </button>\n              </>} v2={approvalStatus?.status === 'pending' && <>\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"bg-yellow-100 dark:bg-yellow-900/30 rounded-full p-4\">\n                    <ClockIcon className=\"h-16 w-16 text-yellow-600 dark:text-yellow-400\" />\n                  </div>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100 text-center mb-4\">\n                  승인 대기 중\n                </h2>\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border-l-4 border-yellow-400 dark:border-yellow-500 p-4 mb-6\">\n                  <p className=\"text-sm text-gray-700 dark:text-gray-200\">\n                    <strong>{approvalStatus.email}</strong> 계정이 등록되었습니다.\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n                    관리자의 승인을 기다리고 있습니다.\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-3\">\n                    로그인 방식: {approvalStatus.provider === 'google' ? 'Google' : approvalStatus.provider === 'kakao' ? 'Kakao' : approvalStatus.provider}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    등록일: {new Date(approvalStatus.created_at).toLocaleString('ko-KR')}\n                  </p>\n                </div>\n              </>} v3={approvalStatus?.status === 'rejected' && <>\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"bg-red-100 dark:bg-red-900/30 rounded-full p-4\">\n                    <ExclamationCircleIcon className=\"h-16 w-16 text-red-600 dark:text-red-400\" />\n                  </div>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100 text-center mb-4\">\n                  접근 거부됨\n                </h2>\n                <div className=\"bg-red-50 dark:bg-red-900/20 border-l-4 border-red-400 dark:border-red-500 p-4 mb-6\">\n                  <p className=\"text-sm text-gray-700 dark:text-gray-200\">\n                    <strong>{approvalStatus.email}</strong> 계정의 접근 요청이 거부되었습니다.\n                  </p>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">\n                    자세한 내용은 시스템 관리자에게 문의하세요.\n                  </p>\n                </div>\n              </>} v4={approvalStatus === null && <>\n                <div className=\"flex justify-center mb-6\">\n                  <div className=\"bg-gray-100 dark:bg-gray-700 rounded-full p-4\">\n                    <ExclamationCircleIcon className=\"h-16 w-16 text-gray-600 dark:text-gray-400\" />\n                  </div>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-800 dark:text-gray-100 text-center mb-4\">\n                  승인 정보 없음\n                </h2>\n                <div className=\"bg-gray-50 dark:bg-gray-700/50 border-l-4 border-gray-400 dark:border-gray-500 p-4 mb-6\">\n                  <p className=\"text-sm text-gray-700 dark:text-gray-200\">\n                    승인 정보를 찾을 수 없습니다. 다시 로그인해주세요.\n                  </p>\n                </div>\n              </>} v5={approvalStatus?.status !== 'approved' && <button onClick={() => {\n    void handleLogout();\n  }} className=\"w-full bg-gradient-to-r from-gray-500 to-gray-600 text-white py-3 rounded-lg hover:from-gray-600 hover:to-gray-700 transition-all duration-200 font-medium shadow-md\">\n                로그아웃\n              </button>} />;\n};\nexport default PendingApproval;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst AppGate_1 = _compiledBlock(() => <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n          <p className=\"mt-4 text-gray-600\">확인 중...</p>\n        </div>\n      </div>, {\n  name: \"AppGate_1\"\n});\nconst AppGate_2 = _compiledBlock(_props2 => _props2.v0, {\n  name: \"AppGate_2\",\n  portals: [\"v0\"]\n});\nconst AppGate_3 = _compiledBlock(_props3 => _props3.v0, {\n  name: \"AppGate_3\",\n  portals: [\"v0\"]\n});\nconst AppGate_4 = _compiledBlock(_props4 => _props4.v0, {\n  name: \"AppGate_4\",\n  portals: [\"v0\"]\n});\nconst AppGate = function AppGate() {\n  const {\n    isLoggedIn\n  } = useUser();\n  const [approvalStatus, setApprovalStatus] = useState<'loading' | 'approved' | 'pending' | 'rejected'>('loading');\n  const LOGIN_DISABLED = process.env.REACT_APP_DISABLE_LOGIN === '1' || typeof window !== 'undefined' && window.localStorage != null && window.localStorage.getItem('CMS_DISABLE_LOGIN') === '1';\n  useEffect(() => {\n    const checkApprovalStatus = async (): Promise<void> => {\n      /* eslint-disable no-console */\n      console.log('🔵 [AppGate] checkApprovalStatus called, isLoggedIn:', isLoggedIn);\n      /* eslint-enable no-console */\n\n      if (supabase === null || !isLoggedIn) {\n        /* eslint-disable no-console */\n        console.log('⚪ [AppGate] Skipping approval check (supabase null or not logged in)');\n        /* eslint-enable no-console */\n        setApprovalStatus('approved');\n        return;\n      }\n      try {\n        const {\n          data: {\n            user\n          }\n        } = await supabase.auth.getUser();\n        /* eslint-disable no-console */\n        console.log('🔵 [AppGate] user:', user !== null ? `id=${user.id}, provider=${user.app_metadata.provider}` : 'null');\n        /* eslint-enable no-console */\n\n        if (user === null) {\n          setApprovalStatus('approved');\n          return;\n        }\n\n        // Check if user has approval record\n        const {\n          data: approval,\n          error: approvalError\n        } = await supabase.from('user_approvals').select('status').eq('user_id', user.id).maybeSingle();\n\n        /* eslint-disable no-console */\n        console.log('🔵 [AppGate] approval query result:', {\n          approval,\n          approvalError\n        });\n        /* eslint-enable no-console */\n\n        if (approvalError !== null) {\n          /* eslint-disable no-console */\n          console.error('❌ [AppGate] approvalError:', approvalError);\n          /* eslint-enable no-console */\n          setApprovalStatus('approved'); // Default to approved on error to avoid blocking\n          return;\n        }\n        if (approval === null) {\n          // No approval record - create one for all new users (email, google, kakao)\n          const provider = user.app_metadata.provider ?? 'email';\n          const userEmail = user.email ?? `${user.id}@user`;\n\n          /* eslint-disable no-console */\n          console.log('🔵 [AppGate] No approval record. provider:', provider, 'email:', userEmail);\n          /* eslint-enable no-console */\n\n          // Create approval record with pending status for all new users\n          const {\n            error: insertError\n          } = await supabase.from('user_approvals').insert({\n            user_id: user.id,\n            email: userEmail,\n            provider: provider,\n            status: 'pending'\n          });\n\n          /* eslint-disable no-console */\n          console.log('🔵 [AppGate] Insert approval record result:', insertError !== null ? `ERROR: ${insertError.message}` : 'SUCCESS');\n          /* eslint-enable no-console */\n\n          if (insertError !== null) {\n            /* eslint-disable no-console */\n            console.error('❌ [AppGate] insertError:', insertError);\n            /* eslint-enable no-console */\n          }\n\n          /* eslint-disable no-console */\n          console.log('🟡 [AppGate] All new users require approval - Setting status to PENDING');\n          /* eslint-enable no-console */\n          setApprovalStatus('pending');\n        } else {\n          /* eslint-disable no-console */\n          console.log('🔵 [AppGate] Found approval record with status:', approval.status);\n          /* eslint-enable no-console */\n          setApprovalStatus(approval.status as 'approved' | 'pending' | 'rejected');\n        }\n      } catch (err: unknown) {\n        /* eslint-disable no-console */\n        console.error('❌ [AppGate] Exception:', err);\n        /* eslint-enable no-console */\n        setApprovalStatus('approved'); // Default to approved on error\n      }\n    };\n    if (isLoggedIn) {\n      void checkApprovalStatus();\n    } else {\n      setApprovalStatus('approved');\n    }\n  }, [isLoggedIn]);\n\n  // Show loading state while checking approval\n  if (approvalStatus === 'loading') {\n    return /*@million jsx-skip*/<AppGate_1 />;\n  }\n\n  // Redirect to pending approval page if not approved\n  if (approvalStatus === 'pending' || approvalStatus === 'rejected') {\n    return /*@million jsx-skip*/<AppGate_2 v0={<Navigate to=\"/pending-approval\" replace />} />;\n  }\n\n  // Check login status\n  if (LOGIN_DISABLED === false && isLoggedIn === false) {\n    return /*@million jsx-skip*/<AppGate_3 v0={<Navigate to=\"/login\" replace />} />;\n  }\n  return /*@million jsx-skip*/<AppGate_4 v0={<Layout />} />;\n};\nconst LoadingFallback_1 = _compiledBlock(() => <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"text-center\">\n        <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\n        <p className=\"mt-4 text-gray-600\">Loading...</p>\n      </div>\n    </div>, {\n  name: \"LoadingFallback_1\"\n});\nconst LoadingFallback = function LoadingFallback() {\n  return /*@million jsx-skip*/<LoadingFallback_1 />;\n};\nimport { block as _block } from \"million/react\";\n// React import not required for new JSX transform\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createBrowserRouter, createHashRouter, RouterProvider, Route, createRoutesFromElements, Navigate } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport './index.css';\nimport { MS_IN_SECOND, SECONDS_IN_MINUTE } from './constants/units';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport { UserProvider } from './contexts/UserContext';\nimport { AppProvider } from './contexts/AppContext.impl';\nimport Layout from './components/Layout';\nimport Login from './components/Login';\nimport ForgotPassword from './components/ForgotPassword';\nimport PendingApproval from './components/PendingApproval';\nimport { useUser } from './contexts/UserContext';\nimport { supabase } from './services/supabase';\n\n// Lazy load components for code splitting\nconst Dashboard = lazy(() => import('./pages/Dashboard'));\nconst EstimatesPage = lazy(() => import('./pages/EstimatesPage'));\nconst InvoicesPage = lazy(() => import('./pages/InvoicesPage'));\nconst Clients = lazy(() => import('./components/Clients'));\nconst WorkItemsPage = lazy(() => import('./pages/WorkItemsPage'));\nconst Schedules = lazy(() => import('./components/schedules/Schedules'));\nconst CompanyInfo = lazy(() => import('./components/CompanyInfo'));\nconst Settings = lazy(() => import('./pages/Settings'));\nconst AdminApproval = lazy(() => import('./pages/AdminApproval'));\n\n// Loading fallback component\n\n// eslint-disable-next-line no-magic-numbers\nconst STALE_MINUTES = 5;\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      // eslint-disable-next-line no-magic-numbers\n      retry: 1,\n      staleTime: STALE_MINUTES * SECONDS_IN_MINUTE * MS_IN_SECOND // 5 minutes\n    }\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\n\n// Hosting-aware basename resolution\nconst resolveBasename = (): string => {\n  // For Vercel and other standard hosting, always use root\n  return '/';\n};\nconst routes = createRoutesFromElements(<>\n    {/* Public routes (no authentication required) */}\n    <Route path=\"login\" element={<Login />} />\n    <Route path=\"forgot-password\" element={<ForgotPassword />} />\n    <Route path=\"pending-approval\" element={<PendingApproval />} />\n\n    {/* Protected routes (authentication required) */}\n    <Route element={<AppGate />}>\n      <Route index element={<Suspense fallback={<LoadingFallback />}><Dashboard /></Suspense>} />\n      <Route path=\"estimates\" element={<Suspense fallback={<LoadingFallback />}><EstimatesPage /></Suspense>} />\n      <Route path=\"invoices\" element={<Suspense fallback={<LoadingFallback />}><InvoicesPage /></Suspense>} />\n      <Route path=\"clients\" element={<Suspense fallback={<LoadingFallback />}><Clients /></Suspense>} />\n      <Route path=\"work-items\" element={<Suspense fallback={<LoadingFallback />}><WorkItemsPage /></Suspense>} />\n      <Route path=\"schedules\" element={<Suspense fallback={<LoadingFallback />}><Schedules /></Suspense>} />\n      <Route path=\"company-info\" element={<Suspense fallback={<LoadingFallback />}><CompanyInfo /></Suspense>} />\n      <Route path=\"settings\" element={<Suspense fallback={<LoadingFallback />}><Settings /></Suspense>} />\n      <Route path=\"admin/approvals\" element={<Suspense fallback={<LoadingFallback />}><AdminApproval /></Suspense>} />\n      <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n    </Route>\n  </>);\n\n// Always use BrowserRouter for better GitHub Pages compatibility\n// HashRouter was causing routing issues on GitHub Pages\nconst useHash = false;\nconst basePath = resolveBasename();\n// React Router v7 future flags for forward compatibility\nconst futureFlags: {\n  v7_startTransition: boolean;\n  v7_relativeSplatPath: boolean;\n} = {\n  v7_startTransition: true,\n  v7_relativeSplatPath: true\n};\nconst router = useHash ? createHashRouter(routes, {\n  basename: basePath,\n  future: futureFlags\n}) : createBrowserRouter(routes, {\n  basename: basePath,\n  future: futureFlags\n});\nroot.render(<ThemeProvider>\n    <QueryClientProvider client={queryClient}>\n      <UserProvider>\n        <AppProvider>\n          <RouterProvider router={router} future={{\n          v7_startTransition: true\n        }} />\n        </AppProvider>\n      </UserProvider>\n    </QueryClientProvider>\n  </ThemeProvider>);","/**\n * Supabase 연결 서비스\n *\n * Supabase PostgreSQL 데이터베이스에 연결하기 위한 서비스\n * @supabase/supabase-js SDK 사용\n */\n\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\n\nexport interface SupabaseConfig {\n  url: string;\n  anonKey: string;\n  serviceRoleKey?: string;\n}\n\nclass SupabaseService {\n  private client: SupabaseClient | null = null;\n  private config: SupabaseConfig | null = null;\n\n  /**\n   * Supabase 클라이언트 초기화\n   * @param config Supabase 설정\n   */\n  initialize(config: SupabaseConfig): void {\n    try {\n      // eslint-disable-next-line no-console\n      console.log('🔌 Initializing Supabase connection...');\n      // eslint-disable-next-line no-console\n      console.log('📍 URL:', config.url);\n\n      this.config = config;\n\n      // Supabase 클라이언트 생성\n      this.client = createClient(config.url, config.anonKey, {\n        auth: {\n          persistSession: true,\n          autoRefreshToken: true,\n        },\n        db: {\n          schema: 'public',\n        },\n        global: {\n          headers: {\n            'x-application-name': 'construction-management',\n          },\n        },\n      });\n\n      // eslint-disable-next-line no-console\n      console.log('✅ Supabase initialized successfully');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('❌ Supabase initialization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 클라이언트 가져오기\n   */\n  getClient(): SupabaseClient {\n    if (this.client === null) {\n      throw new Error('Supabase not initialized. Call initialize() first.');\n    }\n    return this.client;\n  }\n\n  /**\n   * 현재 설정 가져오기\n   */\n  getConfig(): SupabaseConfig | null {\n    return this.config;\n  }\n\n  /**\n   * 헬스 체크\n   */\n  async healthCheck(): Promise<boolean> {\n    try {\n      const client = this.getClient();\n\n      // 간단한 쿼리로 연결 테스트\n      const { error } = await client\n        .from('clients')\n        .select('count', { count: 'exact', head: true });\n\n      if (error !== null && error.code !== 'PGRST116') {\n        // PGRST116은 테이블이 없을 때 나오는 에러 (정상)\n        // eslint-disable-next-line no-console\n        console.error('Health check failed:', error);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('Health check failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 연결 통계\n   */\n  getStats() {\n    if (this.client === null) {\n      return null;\n    }\n\n    return {\n      connected: this.client !== null,\n      config: this.config !== null ? {\n        url: this.config.url,\n        hasAnonKey: this.config.anonKey !== '' && this.config.anonKey !== undefined,\n        hasServiceRoleKey: this.config.serviceRoleKey !== '' && this.config.serviceRoleKey !== undefined,\n      } : null,\n    };\n  }\n\n  /**\n   * SQL 쿼리 실행 (RPC 사용)\n   */\n  async query<T = unknown>(functionName: string, params?: unknown): Promise<T> {\n    const client = this.getClient();\n    const { data, error } = await client.rpc(functionName, params);\n\n    if (error !== null) {\n      throw new Error(`Query failed: ${error.message}`);\n    }\n\n    return data as T;\n  }\n\n  /**\n   * 트랜잭션 (Supabase는 자동으로 트랜잭션 처리)\n   * PostgreSQL 함수로 구현 권장\n   */\n  async transaction<T>(callback: (client: SupabaseClient) => Promise<T>): Promise<T> {\n    const client = this.getClient();\n    return await callback(client);\n  }\n}\n\n// 싱글톤 인스턴스\nexport const supabaseService = new SupabaseService();\n\n// 환경 변수에서 설정 자동 로드\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL ?? '';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY ?? '';\n\nif (supabaseUrl !== '' && supabaseAnonKey !== '') {\n  supabaseService.initialize({\n    url: supabaseUrl,\n    anonKey: supabaseAnonKey,\n  });\n}\n\n// 직접 supabase 클라이언트 export\nexport const supabase = (supabaseUrl !== '' && supabaseAnonKey !== '')\n  ? supabaseService.getClient()\n  : null;\n\n/**\n * 현재 로그인한 사용자 ID 가져오기\n * Supabase Auth 사용자 ID 반환 (없으면 기본 UUID)\n */\nexport async function getCurrentUserId(): Promise<string> {\n  // 개발/테스트용 기본 UUID (nil UUID)\n  const DEFAULT_USER_UUID = '00000000-0000-0000-0000-000000000000';\n\n  if (supabase === null) {\n    return DEFAULT_USER_UUID;\n  }\n\n  try {\n    const { data: { session } } = await supabase.auth.getSession();\n    if (session?.user?.id !== undefined && session?.user?.id !== null) {\n      return session.user.id;\n    }\n  } catch (error) {\n    // 세션 가져오기 실패 시 기본값 반환\n  }\n\n  return DEFAULT_USER_UUID;\n}\n\nexport default supabaseService;\n","/**\n * Development-only logger utility\n * Logs only appear in development mode\n */\n\n/* eslint-disable no-console */\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\nexport const logger = {\n  log: (...args: unknown[]): void => {\n    if (isDevelopment) {\n      console.log(...args);\n    }\n  },\n\n  info: (...args: unknown[]): void => {\n    if (isDevelopment) {\n      console.info(...args);\n    }\n  },\n\n  warn: (...args: unknown[]): void => {\n    if (isDevelopment) {\n      console.warn(...args);\n    }\n  },\n\n  error: (...args: unknown[]): void => {\n    // Always log errors, even in production\n    console.error(...args);\n  },\n\n  debug: (...args: unknown[]): void => {\n    if (isDevelopment) {\n      console.debug(...args);\n    }\n  },\n};\n","export const MS_IN_SECOND = 1000;\nexport const SECONDS_IN_MINUTE = 60;\nexport const KIB = 1024;\nexport const HALF = 2;\n\n","/**\n * Secure Storage Adapter\n * modernSecureStorage (비동기)와 기존 동기 API 간의 어댑터\n *\n * 주의: 이 어댑터는 동기 API를 제공하기 위해 localStorage 직접 접근을 사용합니다.\n * 실제 암호화/복호화는 백그라운드에서 처리됩니다.\n */\n\nimport { secureStorage } from './modernSecureStorage';\nimport { logger } from './logger';\n\n// 시스템 마스터 비밀번호 (환경 변수 또는 설정에서 로드 권장)\nconst SYSTEM_PASSWORD = 'CMS_SYSTEM_2024';\n\n// 초기화 상태\nlet isInitialized = false;\nlet initPromise: Promise<void> | null = null;\n\n/**\n * 보안 저장소 초기화\n * 앱 시작 시 한 번만 호출되어야 합니다.\n */\nexport async function initializeSecureStorage(): Promise<void> {\n  if (isInitialized) return;\n\n  if (initPromise != null) {\n    return initPromise;\n  }\n\n  initPromise = (async () => {\n    try {\n      await secureStorage.initializeSystemKey(SYSTEM_PASSWORD);\n      isInitialized = true;\n      logger.log('✅ Secure Storage initialized');\n    } catch (error) {\n      logger.error('❌ Secure Storage initialization failed:', error);\n      throw error;\n    }\n  })();\n\n  return initPromise;\n}\n\n/**\n * 동기식 setItem (내부적으로 비동기 처리)\n * @param key - 저장소 키\n * @param value - 저장할 값\n */\nexport function setSecureItem(key: string, value: string): void {\n  if (!isInitialized) {\n    // 초기화 전에는 일시적으로 평문 저장 (경고)\n    logger.warn(`⚠️ Storage not initialized, storing ${key} temporarily`);\n    if (typeof window !== 'undefined' && window.localStorage != null) {\n      window.localStorage.setItem(key, value);\n    }\n\n    // 백그라운드에서 초기화 후 재암호화\n    initializeSecureStorage().then(() => {\n      secureStorage.setSecureItem(key, value).catch(logger.error);\n    });\n    return;\n  }\n\n  // 비동기 저장 (즉시 반환)\n  secureStorage.setSecureItem(key, value).catch((error) => {\n    logger.error(`Failed to set secure item: ${key}`, error);\n  });\n}\n\n/**\n * 동기식 getItem\n * @param key - 가져올 키\n * @returns 복호화된 값 또는 null\n */\nexport function getSecureItem(key: string): string | null {\n  if (typeof window === 'undefined' || window.localStorage == null) {\n    return null;\n  }\n\n  try {\n    const rawData = window.localStorage.getItem(key);\n    if (rawData === null) return null;\n\n    // 민감 데이터가 아니면 그대로 반환\n    if (isSensitiveData(key) === false) {\n      return rawData;\n    }\n\n    // 신버전 암호화 형식인지 확인\n    if (isModernEncryption(rawData)) {\n      // 비동기 복호화는 지원하지 않으므로 경고\n      logger.warn(`⚠️ ${key} is encrypted, use async getSecureItemAsync() for decryption`);\n      return null;\n    }\n\n    // 구버전이거나 평문 데이터 (호환성)\n    return rawData;\n  } catch (error) {\n    logger.error(`Failed to get secure item: ${key}`, error);\n    return null;\n  }\n}\n\n/**\n * 비동기식 getItem (권장)\n * @param key - 가져올 키\n * @returns 복호화된 값 또는 null\n */\nexport async function getSecureItemAsync(key: string): Promise<string | null> {\n  if (!isInitialized) {\n    await initializeSecureStorage();\n  }\n\n  return secureStorage.getSecureItem(key);\n}\n\n/**\n * 동기식 removeItem\n * @param key - 삭제할 키\n */\nexport function removeSecureItem(key: string): void {\n  try {\n    if (typeof window !== 'undefined' && window.localStorage != null) {\n      window.localStorage.removeItem(key);\n    }\n  } catch (error) {\n    logger.error(`Failed to remove secure item: ${key}`, error);\n  }\n}\n\n/**\n * 민감한 데이터인지 확인\n */\nfunction isSensitiveData(key: string): boolean {\n  const sensitiveKeys = [\n    'CMS_USERS',\n    'CURRENT_USER',\n    'CMS_DISABLE_LOGIN',\n    'CMS_LOGOUT',\n    'constructionApp_stampImage'\n  ];\n  return sensitiveKeys.some(sensitiveKey => key.includes(sensitiveKey));\n}\n\n/**\n * 신버전 암호화 형식인지 확인\n */\nfunction isModernEncryption(rawData: string): boolean {\n  try {\n    const parsed = JSON.parse(rawData);\n    return parsed.encrypted != null && parsed.iv != null && parsed.algorithm != null;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * 기존 데이터 마이그레이션 (v1 XOR → v2 AES-256-GCM)\n * 앱 초기화 시 자동 실행\n */\nexport async function migrateSensitiveData(): Promise<void> {\n  try {\n    if (!isInitialized) {\n      await initializeSecureStorage();\n    }\n\n    const { autoMigrate } = await import('./securityMigration');\n    await autoMigrate(SYSTEM_PASSWORD);\n  } catch (error) {\n    logger.error('Migration failed:', error);\n  }\n}\n\n// 앱 시작 시 자동 초기화\nif (typeof window !== 'undefined') {\n  initializeSecureStorage().catch(logger.error);\n}\n","import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { MS_IN_SECOND, SECONDS_IN_MINUTE } from '../constants/units';\nimport { setSecureItem, removeSecureItem, migrateSensitiveData } from '../utils/secureStorageAdapter';\nimport { supabase } from '../services/supabase';\n\n// 관리자 이메일 리스트 (환경 변수 또는 직접 지정)\nconst ADMIN_EMAILS = (process.env.REACT_APP_ADMIN_EMAILS ?? 'bluesky78060@gmail.com').split(',').map(email => email.trim().toLowerCase());\ninterface User {\n  id: number;\n  username: string;\n  password?: string;\n  name: string;\n  role: 'admin' | 'manager' | 'user';\n}\ninterface UserContextType {\n  currentUser: User | null;\n  isLoggedIn: boolean;\n  isAdmin: boolean;\n  logout: () => void;\n  getUserStorageKey: (username: string, key: string) => string;\n}\ninterface UserProviderProps {\n  children: ReactNode;\n}\nconst isLoginDisabledEnv = (): boolean => process.env.REACT_APP_DISABLE_LOGIN === '1';\nconst isLoginDisabledRuntime = (): boolean => {\n  try {\n    if (typeof window === 'undefined') return false;\n    const s = window.sessionStorage.getItem('CMS_DISABLE_LOGIN_PLAIN');\n    if (s === '1') return true;\n    const raw = window.localStorage.getItem('CMS_DISABLE_LOGIN');\n    return raw === '1'; // 암호화된 경우에는 런타임 판별은 세션 플래그에 의해 처리\n  } catch (_) {\n    return false;\n  }\n};\nconst getLoginDisabled = (): boolean => isLoginDisabledEnv() || isLoginDisabledRuntime();\nconst UserContext = createContext<UserContextType | undefined>(undefined);\nexport const useUser = (): UserContextType => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\nexport const UserProvider = ({\n  children\n}: UserProviderProps) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(getLoginDisabled() ? true : false);\n  useEffect(() => {\n    // 마이그레이션: 기존 민감한 데이터를 암호화된 형태로 변환\n    (async () => {\n      await migrateSensitiveData();\n\n      // Support URL toggle: ?bypassLogin=1 sets runtime flag\n      try {\n        const params = new URLSearchParams(window.location.search);\n        const bypassLogin = params.get('bypassLogin');\n        if (bypassLogin === '1') {\n          setSecureItem('CMS_DISABLE_LOGIN', '1');\n          try {\n            window.sessionStorage.setItem('CMS_DISABLE_LOGIN_PLAIN', '1');\n          } catch (_) {}\n        } else if (bypassLogin === '0') {\n          removeSecureItem('CMS_DISABLE_LOGIN');\n          try {\n            window.sessionStorage.removeItem('CMS_DISABLE_LOGIN_PLAIN');\n          } catch (_) {}\n        }\n        if (params.get('resetAuth') === '1') {\n          try {\n            window.sessionStorage.removeItem('CURRENT_USER');\n          } catch (_) {}\n          try {\n            removeSecureItem('CURRENT_USER');\n          } catch (_) {}\n          try {\n            removeSecureItem('CMS_DISABLE_LOGIN');\n          } catch (_) {}\n          try {\n            window.sessionStorage.removeItem('CMS_DISABLE_LOGIN_PLAIN');\n          } catch (_) {}\n        }\n      } catch (_) {}\n      if (getLoginDisabled()) {\n        const devUser: User = {\n          id: 1,\n          username: 'dev',\n          name: '개발자',\n          role: 'admin'\n        };\n        setCurrentUser(devUser);\n        setIsLoggedIn(true);\n        try {\n          sessionStorage.setItem('CURRENT_USER', JSON.stringify(devUser));\n        } catch (e) {}\n      } else {\n        // Supabase 세션 확인\n        if (supabase !== null) {\n          supabase.auth.getSession().then(({\n            data: {\n              session\n            }\n          }) => {\n            if (session?.user !== undefined && session?.user !== null) {\n              const supabaseUser: User = {\n                id: 1,\n                username: session.user.email ?? 'user',\n                name: session.user.user_metadata?.name ?? session.user.email ?? 'User',\n                role: 'admin'\n              };\n              setCurrentUser(supabaseUser);\n              setIsLoggedIn(true);\n              try {\n                sessionStorage.setItem('CURRENT_USER', JSON.stringify(supabaseUser));\n              } catch (e) {}\n              return;\n            }\n          }).catch(() => {\n            // Supabase 세션 확인 실패 시 로컬 세션 확인\n          });\n        }\n\n        // 로컬 세션 확인\n        const savedUser = sessionStorage.getItem('CURRENT_USER');\n        if (savedUser !== null && savedUser !== '') {\n          setCurrentUser(JSON.parse(savedUser) as User);\n          setIsLoggedIn(true);\n        } else {\n          // 과거 잔존 세션 제거\n          removeSecureItem('CURRENT_USER');\n        }\n      }\n    })();\n\n    // Supabase auth state 변경 감지\n    if (supabase === null) {\n      return;\n    }\n\n    /* eslint-disable no-console */\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      console.log('🔵 [UserContext] onAuthStateChange triggered:', event);\n      console.log('🔵 [UserContext] session:', session?.user !== undefined && session?.user !== null ? 'has user' : 'no user');\n      if (session?.user !== undefined && session?.user !== null) {\n        const supabaseUser: User = {\n          id: 1,\n          username: session.user.email ?? 'user',\n          name: session.user.user_metadata?.name ?? session.user.email ?? 'User',\n          role: 'admin'\n        };\n        console.log('✅ [UserContext] Setting logged in:', supabaseUser.username);\n        setCurrentUser(supabaseUser);\n        setIsLoggedIn(true);\n        try {\n          sessionStorage.setItem('CURRENT_USER', JSON.stringify(supabaseUser));\n        } catch (e) {}\n      } else if (!getLoginDisabled()) {\n        console.log('⚠️ [UserContext] No session, logging out');\n        setCurrentUser(null);\n        setIsLoggedIn(false);\n        try {\n          sessionStorage.removeItem('CURRENT_USER');\n        } catch (e) {}\n      }\n    });\n    /* eslint-enable no-console */\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  const logout = (): void => {\n    if (getLoginDisabled()) {\n      // 로그인 비활성화 모드에서는 로그아웃을 무시하거나 상태만 유지합니다.\n      return;\n    }\n\n    // Supabase 로그아웃\n    if (supabase !== null) {\n      supabase.auth.signOut().catch(() => {\n        // 로그아웃 실패해도 로컬 세션은 정리\n      });\n    }\n    setCurrentUser(null);\n    setIsLoggedIn(false);\n    try {\n      sessionStorage.removeItem('CURRENT_USER');\n    } catch (e) {}\n    try {\n      removeSecureItem('CURRENT_USER');\n    } catch (e) {}\n    // 다른 탭에도 로그아웃 브로드캐스트\n    try {\n      setSecureItem('CMS_LOGOUT', String(Date.now()));\n      removeSecureItem('CMS_LOGOUT');\n    } catch (e) {}\n  };\n  const getUserStorageKey = (username: string, key: string): string => {\n    return `USER_${username}_${key}`;\n  };\n\n  // 관리자 여부 확인\n  const isAdmin = currentUser !== null && ADMIN_EMAILS.includes(currentUser.username.toLowerCase());\n  const value: UserContextType = {\n    currentUser,\n    isLoggedIn,\n    isAdmin,\n    logout,\n    getUserStorageKey\n  };\n\n  // 1시간 무활동 자동 로그아웃\n  useEffect(() => {\n    if (!isLoggedIn || getLoginDisabled()) return;\n    let timerId: NodeJS.Timeout;\n    // eslint-disable-next-line no-magic-numbers\n    const TIMEOUT_MS = 60 * SECONDS_IN_MINUTE * MS_IN_SECOND; // 1 hour in milliseconds\n\n    const reset = (): void => {\n      clearTimeout(timerId);\n      timerId = setTimeout(() => {\n        logout();\n      }, TIMEOUT_MS);\n    };\n    const events = ['mousemove', 'mousedown', 'keydown', 'scroll', 'touchstart'];\n    events.forEach(ev => window.addEventListener(ev, reset, {\n      passive: true\n    }));\n    reset();\n    return () => {\n      clearTimeout(timerId);\n      events.forEach(ev => window.removeEventListener(ev, reset));\n    };\n  }, [isLoggedIn]);\n\n  // 다른 탭에서의 로그아웃 신호를 수신하여 즉시 로그아웃\n  useEffect(() => {\n    const onStorage = (e: StorageEvent): void => {\n      if (e.key === 'CMS_LOGOUT') {\n        setCurrentUser(null);\n        setIsLoggedIn(false);\n        try {\n          sessionStorage.removeItem('CURRENT_USER');\n        } catch (err) {}\n        try {\n          removeSecureItem('CURRENT_USER');\n        } catch (err) {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n  return <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>;\n};\nexport default UserProvider;","/**\n * 현대적 보안 저장소 시스템\n * AES-256-GCM 암호화 + PBKDF2 키 파생\n * Web Crypto API 사용\n */\n\nimport { logger } from './logger';\n\n/**\n * 암호화된 데이터 구조\n */\nexport interface EncryptedData {\n  encrypted: ArrayBuffer;\n  iv: Uint8Array;\n  salt: Uint8Array;\n  algorithm: string;\n  version: string;\n}\n\n/**\n * 키 파생 설정\n */\ninterface KeyDerivationConfig {\n  iterations: number;\n  keyLength: number;\n  algorithm: string;\n}\n\n/**\n * 기본 키 파생 설정\n */\nconst DEFAULT_PBKDF2_ITERATIONS = 100_000; // OWASP 권장 최소값\nconst KEY_LENGTH_BITS = 256;\nconst IV_LENGTH_BYTES = 12;\nconst SALT_LENGTH_BYTES = 16;\n\nconst DEFAULT_KEY_CONFIG: KeyDerivationConfig = {\n  iterations: DEFAULT_PBKDF2_ITERATIONS,\n  keyLength: KEY_LENGTH_BITS,\n  algorithm: 'PBKDF2'\n};\n\n/**\n * 현대적 보안 저장소 클래스\n */\nexport class ModernSecureStorage {\n  private static instance: ModernSecureStorage;\n  private cryptoKey: CryptoKey | null = null;\n  private keyVersion: string = '1.0';\n\n  private constructor() {}\n\n  /**\n   * 싱글톤 인스턴스 가져오기\n   */\n  static getInstance(): ModernSecureStorage {\n    if (ModernSecureStorage.instance === undefined) {\n      ModernSecureStorage.instance = new ModernSecureStorage();\n    }\n    return ModernSecureStorage.instance;\n  }\n\n  /**\n   * 사용자 비밀번호로부터 암호화 키 파생\n   * @param password - 사용자 비밀번호\n   * @param salt - 솔트 (옵션, 없으면 생성)\n   * @returns 파생된 암호화 키와 사용된 솔트\n   */\n  async deriveKey(\n    password: string,\n    salt?: Uint8Array\n  ): Promise<{ key: CryptoKey; salt: Uint8Array }> {\n    // 솔트 생성 또는 사용\n    const actualSalt = salt ?? crypto.getRandomValues(new Uint8Array(SALT_LENGTH_BYTES));\n\n    // 비밀번호를 키 재료로 변환\n    const keyMaterial = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(password),\n      'PBKDF2',\n      false,\n      ['deriveKey']\n    );\n\n    // PBKDF2로 키 파생\n    const key = await crypto.subtle.deriveKey(\n      {\n        name: 'PBKDF2',\n        salt: actualSalt,\n        iterations: DEFAULT_KEY_CONFIG.iterations,\n        hash: 'SHA-256'\n      },\n      keyMaterial,\n      {\n        name: 'AES-GCM',\n        length: DEFAULT_KEY_CONFIG.keyLength\n      },\n      false,\n      ['encrypt', 'decrypt']\n    );\n\n    return { key, salt: actualSalt };\n  }\n\n  /**\n   * 시스템 기본 키 초기화\n   * @param password - 시스템 마스터 비밀번호\n   */\n  async initializeSystemKey(password: string): Promise<void> {\n    // 저장된 솔트 확인\n    const storedSalt = this.getStoredSalt();\n    const { key, salt } = await this.deriveKey(password, storedSalt ?? undefined);\n\n    this.cryptoKey = key;\n\n    // 첫 초기화면 솔트 저장\n    if (storedSalt == null) {\n      this.storeSalt(salt);\n    }\n  }\n\n  /**\n   * 데이터 암호화\n   * @param data - 암호화할 문자열 데이터\n   * @param customKey - 커스텀 키 (옵션)\n   * @returns 암호화된 데이터 객체\n   */\n  async encrypt(\n    data: string,\n    customKey?: CryptoKey\n  ): Promise<EncryptedData> {\n    const key = customKey ?? this.cryptoKey;\n\n    if (key == null) {\n      throw new Error('암호화 키가 초기화되지 않았습니다. initializeSystemKey()를 먼저 호출하세요.');\n    }\n\n    // IV (Initialization Vector) 생성\n    const iv = crypto.getRandomValues(new Uint8Array(IV_LENGTH_BYTES));\n\n    // 데이터 암호화\n    const encodedData = new TextEncoder().encode(data);\n    const encrypted = await crypto.subtle.encrypt(\n      {\n        name: 'AES-GCM',\n        iv: iv\n      },\n      key,\n      encodedData\n    );\n\n    // 솔트 가져오기\n    const salt = this.getStoredSalt() ?? new Uint8Array(SALT_LENGTH_BYTES);\n\n    return {\n      encrypted,\n      iv,\n      salt,\n      algorithm: 'AES-GCM-256',\n      version: this.keyVersion\n    };\n  }\n\n  /**\n   * 데이터 복호화\n   * @param encryptedData - 암호화된 데이터 객체\n   * @param customKey - 커스텀 키 (옵션)\n   * @returns 복호화된 문자열\n   */\n  async decrypt(\n    encryptedData: EncryptedData,\n    customKey?: CryptoKey\n  ): Promise<string> {\n    const key = customKey ?? this.cryptoKey;\n\n    if (key == null) {\n      throw new Error('암호화 키가 초기화되지 않았습니다.');\n    }\n\n    // 데이터 복호화\n    const decrypted = await crypto.subtle.decrypt(\n      {\n        name: 'AES-GCM',\n        iv: encryptedData.iv\n      },\n      key,\n      encryptedData.encrypted\n    );\n\n    // 문자열로 변환\n    return new TextDecoder().decode(decrypted);\n  }\n\n  /**\n   * localStorage에 암호화하여 저장\n   * @param key - 저장소 키\n   * @param value - 저장할 값\n   */\n  async setSecureItem(key: string, value: string): Promise<void> {\n    try {\n      if (typeof window === 'undefined' || window.localStorage == null) {\n        throw new Error('localStorage를 사용할 수 없습니다.');\n      }\n\n      // 민감 데이터인지 확인\n      if (this.isSensitiveData(key) === false) {\n        // 일반 데이터는 그냥 저장\n        window.localStorage.setItem(key, value);\n        return;\n      }\n\n      // 암호화\n      const encrypted = await this.encrypt(value);\n\n      // 저장 가능한 형태로 직렬화\n      const serialized = this.serializeEncryptedData(encrypted);\n      window.localStorage.setItem(key, serialized);\n    } catch (error) {\n      logger.error('보안 저장 실패:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * localStorage에서 복호화하여 가져오기\n   * @param key - 저장소 키\n   * @returns 복호화된 값 또는 null\n   */\n  async getSecureItem(key: string): Promise<string | null> {\n    try {\n      if (typeof window === 'undefined' || window.localStorage == null) {\n        return null;\n      }\n\n      const rawData = window.localStorage.getItem(key);\n      if (rawData === null) return null;\n\n      // 민감 데이터가 아니면 그대로 반환\n      if (this.isSensitiveData(key) === false) {\n        return rawData;\n      }\n\n      // 역직렬화\n      const encrypted = this.deserializeEncryptedData(rawData);\n      if (encrypted == null) {\n        // 구버전 데이터일 수 있음 - 그대로 반환\n        return rawData;\n      }\n\n      // 복호화\n      return await this.decrypt(encrypted);\n    } catch (error) {\n      logger.error('보안 읽기 실패:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 민감한 데이터인지 확인\n   */\n  private isSensitiveData(key: string): boolean {\n    const sensitiveKeys = [\n      'CMS_USERS',\n      'CURRENT_USER',\n      'CMS_DISABLE_LOGIN',\n      'CMS_LOGOUT',\n      'constructionApp_stampImage'\n    ];\n    return sensitiveKeys.some(sensitiveKey => key.includes(sensitiveKey));\n  }\n\n  /**\n   * 암호화 데이터 직렬화 (localStorage 저장용)\n   */\n  private serializeEncryptedData(data: EncryptedData): string {\n    return JSON.stringify({\n      encrypted: this.arrayBufferToBase64(data.encrypted),\n      iv: this.uint8ArrayToBase64(data.iv),\n      salt: this.uint8ArrayToBase64(data.salt),\n      algorithm: data.algorithm,\n      version: data.version\n    });\n  }\n\n  /**\n   * 암호화 데이터 역직렬화\n   */\n  private deserializeEncryptedData(serialized: string): EncryptedData | null {\n    try {\n      const parsed = JSON.parse(serialized);\n\n      // 새로운 형식인지 확인\n      if (parsed.encrypted == null || parsed.iv == null || parsed.algorithm == null) {\n        return null;\n      }\n\n      return {\n        encrypted: this.base64ToArrayBuffer(parsed.encrypted),\n        iv: this.base64ToUint8Array(parsed.iv),\n        salt: this.base64ToUint8Array(parsed.salt),\n        algorithm: parsed.algorithm,\n        version: parsed.version\n      };\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * ArrayBuffer를 Base64로 변환\n   */\n  private arrayBufferToBase64(buffer: ArrayBuffer): string {\n    const bytes = new Uint8Array(buffer);\n    let binary = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n  }\n\n  /**\n   * Base64를 ArrayBuffer로 변환\n   */\n  private base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binary = atob(base64);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes.buffer;\n  }\n\n  /**\n   * Uint8Array를 Base64로 변환\n   */\n  private uint8ArrayToBase64(array: Uint8Array): string {\n    let binary = '';\n    for (let i = 0; i < array.byteLength; i++) {\n      binary += String.fromCharCode(array[i]);\n    }\n    return btoa(binary);\n  }\n\n  /**\n   * Base64를 Uint8Array로 변환\n   */\n  private base64ToUint8Array(base64: string): Uint8Array {\n    const binary = atob(base64);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n      bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n  }\n\n  /**\n   * 솔트 저장\n   */\n  private storeSalt(salt: Uint8Array): void {\n    if (typeof window !== 'undefined' && window.localStorage != null) {\n      const base64Salt = this.uint8ArrayToBase64(salt);\n      window.localStorage.setItem('CMS_SECURITY_SALT', base64Salt);\n    }\n  }\n\n  /**\n   * 저장된 솔트 가져오기\n   */\n  private getStoredSalt(): Uint8Array | null {\n    if (typeof window === 'undefined' || window.localStorage == null) {\n      return null;\n    }\n\n    const stored = window.localStorage.getItem('CMS_SECURITY_SALT');\n    if (stored === null) return null;\n\n    try {\n      return this.base64ToUint8Array(stored);\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * 보안 키 재설정\n   */\n  async resetSecurityKey(oldPassword: string, newPassword: string): Promise<void> {\n    // 기존 키로 복호화 가능한지 검증\n    await this.initializeSystemKey(oldPassword);\n\n    // 새 솔트 생성\n    const newSalt = crypto.getRandomValues(new Uint8Array(SALT_LENGTH_BYTES));\n    const { key: newKey } = await this.deriveKey(newPassword, newSalt);\n\n    // 모든 민감 데이터 재암호화\n    await this.reencryptAllSensitiveData(newKey);\n\n    // 새 키와 솔트 저장\n    this.cryptoKey = newKey;\n    this.storeSalt(newSalt);\n  }\n\n  /**\n   * 모든 민감 데이터 재암호화\n   */\n  private async reencryptAllSensitiveData(newKey: CryptoKey): Promise<void> {\n    if (typeof window === 'undefined' || window.localStorage == null) {\n      return;\n    }\n\n    const sensitiveKeys = [\n      'CMS_USERS',\n      'CURRENT_USER',\n      'CMS_DISABLE_LOGIN',\n      'constructionApp_stampImage'\n    ];\n\n    for (const key of sensitiveKeys) {\n      const decrypted = await this.getSecureItem(key);\n      if (decrypted !== null && decrypted !== '') {\n        const encrypted = await this.encrypt(decrypted, newKey);\n        const serialized = this.serializeEncryptedData(encrypted);\n        window.localStorage.setItem(key, serialized);\n      }\n    }\n  }\n}\n\n/**\n * 전역 인스턴스 내보내기\n */\nexport const secureStorage = ModernSecureStorage.getInstance();\n","/* eslint-disable */\nimport type { Schedule } from '../types/domain';\n\n// 브라우저 알림 권한 요청\nexport const requestNotificationPermission = async (): Promise<boolean> => {\n  if (!('Notification' in window)) {\n    console.warn('This browser does not support notifications');\n    return false;\n  }\n\n  if (Notification.permission === 'granted') {\n    return true;\n  }\n\n  if (Notification.permission !== 'denied') {\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  }\n\n  return false;\n};\n\n// 알림 권한 상태 확인\nexport const checkNotificationPermission = (): 'granted' | 'denied' | 'default' => {\n  if (!('Notification' in window)) {\n    return 'denied';\n  }\n  return Notification.permission;\n};\n\n// 일정 알림 표시\nexport const showScheduleNotification = (schedule: Schedule, minutesUntil: number) => {\n  if (Notification.permission !== 'granted') {\n    return;\n  }\n\n  const timeText = minutesUntil === 0\n    ? '지금'\n    : `${minutesUntil}분 후`;\n\n  const notification = new Notification(`일정 알림: ${schedule.title}`, {\n    body: `${timeText}에 일정이 있습니다.\\n${schedule.description || ''}${schedule.location ? `\\n📍 ${schedule.location}` : ''}`,\n    icon: '/logo192.png',\n    tag: `schedule-${schedule.id}`,\n    requireInteraction: false,\n    silent: false,\n  });\n\n  // 알림 클릭 시 일정 페이지로 이동\n  notification.onclick = () => {\n    window.focus();\n    window.location.href = '/schedules';\n    notification.close();\n  };\n\n  // 5초 후 자동으로 닫기\n  setTimeout(() => {\n    notification.close();\n  }, 5000);\n};\n\n// 일정 알림 스케줄링 (메모리 기반)\ninterface ScheduledNotification {\n  scheduleId: number;\n  timeoutId: NodeJS.Timeout;\n}\n\nconst scheduledNotifications: ScheduledNotification[] = [];\n\n// 모든 예약된 알림 취소\nexport const cancelAllNotifications = () => {\n  scheduledNotifications.forEach(({ timeoutId }) => {\n    clearTimeout(timeoutId);\n  });\n  scheduledNotifications.length = 0;\n};\n\n// 특정 일정의 알림 취소\nexport const cancelScheduleNotification = (scheduleId: number) => {\n  const index = scheduledNotifications.findIndex(n => n.scheduleId === scheduleId);\n  if (index !== -1) {\n    clearTimeout(scheduledNotifications[index].timeoutId);\n    scheduledNotifications.splice(index, 1);\n  }\n};\n\n// 일정 알림 스케줄링\nexport const scheduleNotification = (schedule: Schedule) => {\n  if (!schedule.reminderEnabled || !schedule.reminderMinutesBefore) {\n    return;\n  }\n\n  // 기존 알림 취소\n  cancelScheduleNotification(schedule.id);\n\n  // 알림 시간 계산\n  const scheduleDateTime = new Date(`${schedule.startDate}T${schedule.startTime || '00:00'}:00`);\n  const reminderTime = new Date(scheduleDateTime.getTime() - schedule.reminderMinutesBefore * 60 * 1000);\n  const now = new Date();\n\n  const timeUntilReminder = reminderTime.getTime() - now.getTime();\n\n  // 이미 지난 시간이면 즉시 알림 표시\n  if (timeUntilReminder <= 0) {\n    if (scheduleDateTime.getTime() > now.getTime()) {\n      // 일정은 아직 시작 안 했지만 알림 시간은 지남\n      const minutesUntil = Math.round((scheduleDateTime.getTime() - now.getTime()) / 60000);\n      showScheduleNotification(schedule, minutesUntil);\n    }\n    return;\n  }\n\n  // 알림 예약 (최대 24시간 이내만 예약)\n  if (timeUntilReminder <= 24 * 60 * 60 * 1000) {\n    const timeoutId = setTimeout(() => {\n      showScheduleNotification(schedule, schedule.reminderMinutesBefore || 0);\n      cancelScheduleNotification(schedule.id);\n    }, timeUntilReminder);\n\n    scheduledNotifications.push({\n      scheduleId: schedule.id,\n      timeoutId,\n    });\n  }\n};\n\n// 여러 일정의 알림 스케줄링\nexport const scheduleMultipleNotifications = (schedules: Schedule[]) => {\n  schedules.forEach(schedule => {\n    if (schedule.reminderEnabled && schedule.reminderMinutesBefore) {\n      scheduleNotification(schedule);\n    }\n  });\n};\n\n// 24시간 내 예정된 알림 개수 확인\nexport const getPendingNotificationCount = (): number => {\n  return scheduledNotifications.length;\n};\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\n/* eslint-disable @typescript-eslint/strict-boolean-expressions, @typescript-eslint/no-explicit-any, no-console */\nimport { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { supabase } from '../services/supabase';\nimport type { CompanyInfo, Client, WorkItem, Invoice, Estimate, Schedule, UnitName, CategoryName } from '../types/domain';\nimport { requestNotificationPermission, scheduleMultipleNotifications, scheduleNotification, cancelScheduleNotification } from '../services/notificationService';\n\n// Timing constants for data synchronization\nconst INITIAL_LOAD_GRACE_PERIOD_MS = 100;\nconst DEBOUNCE_DELAY_MS = 1000;\n\n// 한국어 status를 데이터베이스 영어 값으로 변환\nconst toDbEstimateStatus = (koreanStatus: string): string => {\n  const statusMap: Record<string, string> = {\n    '검토중': 'draft',\n    '승인됨': 'approved',\n    '거부됨': 'rejected',\n    '수정 요청': 'sent',\n    '작업 전환됨': 'approved'\n  };\n  return statusMap[koreanStatus] ?? 'draft';\n};\nexport interface AppContextValue {\n  companyInfo: CompanyInfo;\n  setCompanyInfo: React.Dispatch<React.SetStateAction<CompanyInfo>>;\n  clients: Client[];\n  setClients: React.Dispatch<React.SetStateAction<Client[]>>;\n  workItems: WorkItem[];\n  setWorkItems: React.Dispatch<React.SetStateAction<WorkItem[]>>;\n  invoices: Invoice[];\n  setInvoices: React.Dispatch<React.SetStateAction<Invoice[]>>;\n  estimates: Estimate[];\n  setEstimates: React.Dispatch<React.SetStateAction<Estimate[]>>;\n  schedules: Schedule[];\n  setSchedules: React.Dispatch<React.SetStateAction<Schedule[]>>;\n  units: UnitName[];\n  setUnits: React.Dispatch<React.SetStateAction<UnitName[]>>;\n  categories: CategoryName[];\n  setCategories: React.Dispatch<React.SetStateAction<CategoryName[]>>;\n  stampImage: string | null;\n  setStampImage: React.Dispatch<React.SetStateAction<string | null>>;\n  getCompletedWorkItems: () => WorkItem[];\n  getCompletedWorkItemsByClient: (clientId: number) => WorkItem[];\n  addWorkItemToInvoice: (workItem: WorkItem, quantity?: number | null, unitPrice?: number | null) => any;\n  convertEstimateToWorkItems: (estimateId: string) => WorkItem[];\n  saveSchedule: (schedule: Schedule) => Promise<void>;\n  deleteSchedule: (id: number) => Promise<void>;\n  loading: boolean;\n  error: string | null;\n}\nconst AppContext = createContext<AppContextValue | undefined>(undefined);\nexport const useApp = (): AppContextValue => {\n  const ctx = useContext(AppContext);\n  if (!ctx) throw new Error('useApp must be used within an AppProvider');\n  return ctx;\n};\nconst defaultCompanyInfo: CompanyInfo = {\n  name: '한국건설',\n  businessNumber: '123-45-67890',\n  address: '서울시 강남구 테헤란로 123',\n  phone: '02-1234-5678',\n  email: 'info@hangeonconstruction.com',\n  representative: '홍길동',\n  bankAccount: '신한은행 110-123-456789',\n  accountHolder: '한국건설(주)'\n};\nconst AppProvider_1 = _compiledBlock(() => <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">데이터 로딩 중...</p>\n        </div>\n      </div>, {\n  name: \"AppProvider_1\"\n});\nconst AppProvider_2 = _compiledBlock(_props2 => <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center max-w-md\">\n          <div className=\"text-red-600 text-5xl mb-4\">⚠️</div>\n          <h2 className=\"text-xl font-bold text-gray-900 mb-2\">오류 발생</h2>\n          <p className=\"text-gray-600 mb-4\">{_props2.v0}</p>\n          <button onClick={_props2.v1} className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\n            다시 시도\n          </button>\n        </div>\n      </div>, {\n  name: \"AppProvider_2\",\n  portals: [\"v0\"]\n});\nconst AppProvider_3 = _compiledBlock(_props3 => _props3.v0, {\n  name: \"AppProvider_3\",\n  portals: [\"v0\"]\n});\nexport const AppProvider: React.FC<{\n  children: ReactNode;\n}> = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const [companyInfo, setCompanyInfo] = useState<CompanyInfo>(defaultCompanyInfo);\n  const [clients, setClients] = useState<Client[]>([]);\n  const [workItems, setWorkItems] = useState<WorkItem[]>([]);\n  const [invoices, setInvoices] = useState<Invoice[]>([]);\n  const [estimates, setEstimates] = useState<Estimate[]>([]);\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n  const [units, setUnits] = useState<UnitName[]>(['식', '㎡', '개', '톤', 'm', 'kg', '회', '일']);\n  const [categories, setCategories] = useState<CategoryName[]>(['토목공사', '구조공사', '철거공사', '마감공사', '설비공사', '내부공사', '기타']);\n  const [stampImage, setStampImage] = useState<string | null>(null);\n\n  // 사용자 인증 확인\n  useEffect(() => {\n    const LOGIN_DISABLED = process.env.REACT_APP_DISABLE_LOGIN === '1' || typeof window !== 'undefined' && window.localStorage !== null && window.localStorage.getItem('CMS_DISABLE_LOGIN') === '1';\n    const checkAuth = async () => {\n      if (!supabase) {\n        setError('Supabase가 초기화되지 않았습니다');\n        setLoading(false);\n        return;\n      }\n\n      // 로그인 비활성화 모드면 인증 체크 건너뛰기\n      if (LOGIN_DISABLED) {\n        // 개발 모드: 로그인 없이 사용 (user_id는 null)\n        setUserId(null);\n        setLoading(false);\n        return;\n      }\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user) {\n        setUserId(user.id);\n      } else {\n        // 인증 없이도 기본 사용자로 작동 (개발/테스트 모드)\n        // user_id는 null로 설정 (Supabase RLS 정책에서 허용)\n        setUserId(null);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // 자동 로그아웃 - 1시간 동안 활동 없으면 로그아웃\n  useEffect(() => {\n    const MINUTES_PER_HOUR = 60;\n    const SECONDS_PER_MINUTE = 60;\n    const MILLISECONDS_PER_SECOND = 1000;\n    const INACTIVITY_TIMEOUT_MS = MINUTES_PER_HOUR * SECONDS_PER_MINUTE * MILLISECONDS_PER_SECOND; // 1시간 (밀리초)\n    let timeoutId: NodeJS.Timeout;\n    const handleLogout = async () => {\n      if (!supabase) return;\n      const LOGIN_DISABLED = process.env.REACT_APP_DISABLE_LOGIN === '1' || typeof window !== 'undefined' && window.localStorage !== null && window.localStorage.getItem('CMS_DISABLE_LOGIN') === '1';\n      if (LOGIN_DISABLED) return; // 로그인 비활성화 모드면 자동 로그아웃 안 함\n\n      try {\n        await supabase.auth.signOut();\n        setUserId(null);\n        setError('비활성 상태로 인해 자동 로그아웃되었습니다. 다시 로그인해주세요.');\n\n        // 페이지 새로고침하여 로그인 화면으로 이동\n        window.location.reload();\n      } catch (err) {\n        console.error('Auto logout failed:', err);\n      }\n    };\n    const resetTimer = () => {\n      // 기존 타이머 제거\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      // 새로운 타이머 설정\n      timeoutId = setTimeout(handleLogout, INACTIVITY_TIMEOUT_MS);\n    };\n\n    // 사용자 활동 감지 이벤트들\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n\n    // 이벤트 리스너 등록\n    events.forEach(event => {\n      document.addEventListener(event, resetTimer, true);\n    });\n\n    // 초기 타이머 설정\n    resetTimer();\n\n    // 클린업: 이벤트 리스너 제거 및 타이머 클리어\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n      events.forEach(event => {\n        document.removeEventListener(event, resetTimer, true);\n      });\n    };\n  }, [userId]);\n\n  // 초기 데이터 로딩\n  useEffect(() => {\n    if (!userId || !supabase) return;\n    const loadData = async () => {\n      try {\n        setLoading(true);\n\n        // Clients 로딩 (현재 사용자 것만)\n        const {\n          data: clientsData,\n          error: clientsError\n        } = await supabase!.from('clients').select('*').eq('user_id', userId).order('created_at', {\n          ascending: false\n        });\n        if (clientsError) {\n          console.error('❌ Clients 로딩 실패:', clientsError);\n          throw clientsError;\n        }\n        const mappedClients: Client[] = (clientsData || []).map((c: any) => ({\n          id: c.client_id,\n          name: c.company_name || '',\n          phone: c.phone || '',\n          mobile: c.mobile || '',\n          email: c.email || '',\n          address: c.address || '',\n          type: c.type || 'BUSINESS',\n          business: c.type === 'BUSINESS' ? {\n            businessName: c.company_name || '',\n            representative: c.representative || '',\n            businessNumber: c.business_number || '',\n            businessType: c.business_type || '',\n            businessItem: c.business_item || '',\n            businessAddress: c.business_address || '',\n            taxEmail: c.tax_email || ''\n          } : undefined,\n          workplaces: c.workplaces || [],\n          projects: c.projects || [],\n          totalBilled: c.total_billed || 0,\n          outstanding: c.outstanding || 0,\n          notes: c.notes || ''\n        }));\n        setClients(mappedClients);\n\n        // Work Items 로딩 - clients 테이블과 JOIN하여 client_name 가져오기 (현재 사용자 것만)\n        const {\n          data: workItemsData,\n          error: workItemsError\n        } = await supabase!.from('work_items').select(`\n            *,\n            clients!client_id (\n              company_name,\n              workplaces\n            )\n          `).eq('user_id', userId).order('created_at', {\n          ascending: false\n        });\n        if (workItemsError) throw workItemsError;\n\n        // Status 영어 -> 한글 변환 함수\n        const fromDbStatus = (status: string): '예정' | '진행중' | '완료' | '보류' => {\n          const statusMap: Record<string, '예정' | '진행중' | '완료' | '보류'> = {\n            'planned': '예정',\n            'in_progress': '진행중',\n            'completed': '완료',\n            'on_hold': '보류',\n            'cancelled': '보류' // cancelled는 보류로 매핑\n          };\n          return statusMap[status] ?? '예정';\n        };\n        const mappedWorkItems: WorkItem[] = (workItemsData || []).map((w: any) => {\n          // client 정보에서 회사명 가져오기\n          const clientName = w.clients?.company_name || '';\n\n          // workplace 정보 찾기\n          const workplaces = w.clients?.workplaces || [];\n          const workplace = workplaces.find((wp: any) => Number(wp.id) === Number(w.workplace_id));\n          const workplaceName = workplace?.name || '';\n          return {\n            id: w.work_item_id,\n            clientId: w.client_id,\n            clientName,\n            workplaceId: w.workplace_id,\n            workplaceName,\n            projectName: w.project_name || '',\n            name: w.name,\n            category: w.category || '',\n            defaultPrice: w.default_price || 0,\n            quantity: w.quantity || 0,\n            unit: w.unit || '',\n            description: w.description || '',\n            status: fromDbStatus(w.status),\n            date: w.start_date || '',\n            notes: w.notes || '',\n            laborPersons: w.labor_persons || 0,\n            laborUnitRate: w.labor_unit_rate || 0,\n            laborPersonsGeneral: w.labor_persons_general || 0,\n            laborUnitRateGeneral: w.labor_unit_rate_general || 0\n          };\n        });\n        setWorkItems(mappedWorkItems);\n\n        // Estimates 로딩 (현재 사용자 것만)\n        const {\n          data: estimatesData,\n          error: estimatesError\n        } = await supabase!.from('estimates').select(`\n            *,\n            clients!client_id (\n              client_id,\n              company_name\n            ),\n            estimate_items (*)\n          `).eq('user_id', userId).order('created_at', {\n          ascending: false\n        });\n        if (estimatesError) throw estimatesError;\n        const mappedEstimates: Estimate[] = (estimatesData || []).map((e: any) => ({\n          id: e.estimate_number || `EST-${e.estimate_id}`,\n          clientId: e.client_id,\n          clientName: e.clients?.company_name || '',\n          workplaceId: e.workplace_id,\n          workplaceName: e.workplace_name || '',\n          projectName: e.project_name || '',\n          title: e.project_name || '',\n          status: e.status || '작성중',\n          validUntil: e.valid_until || '',\n          totalAmount: e.total_amount || 0,\n          items: (e.estimate_items || []).map((item: any) => ({\n            name: item.name,\n            category: item.category || '',\n            quantity: item.quantity || 0,\n            unit: item.unit || '',\n            unitPrice: item.unit_price || 0,\n            total: item.total || 0,\n            description: item.description || '',\n            notes: item.notes || ''\n          }))\n        }));\n        setEstimates(mappedEstimates);\n\n        // Invoices 로딩 (현재 사용자 것만)\n        const {\n          data: invoicesData,\n          error: invoicesError\n        } = await supabase!.from('invoices').select(`\n            *,\n            clients!client_id (\n              client_id,\n              company_name,\n              workplaces\n            ),\n            invoice_items (*)\n          `).eq('user_id', userId).order('created_at', {\n          ascending: false\n        });\n        if (invoicesError) throw invoicesError;\n        const mappedInvoices: Invoice[] = (invoicesData || []).map((inv: any) => {\n          // workplace 정보 찾기\n          const workplaces = inv.clients?.workplaces || [];\n          const workplace = workplaces.find((wp: any) => Number(wp.id) === Number(inv.workplace_id));\n          const workplaceAddress = workplace?.address || '';\n          return {\n            id: inv.invoice_number || `INV-${inv.invoice_id}`,\n            clientId: inv.client_id,\n            client: inv.clients?.company_name || '',\n            workplaceId: inv.workplace_id,\n            project: inv.title || '',\n            workplaceAddress,\n            amount: inv.amount || 0,\n            status: inv.status || '발송대기',\n            date: inv.date || '',\n            workItems: (inv.invoice_items || []).map((item: any) => ({\n              name: item.name,\n              quantity: item.quantity || 0,\n              unit: item.unit || '',\n              unitPrice: item.unit_price || 0,\n              total: item.total || 0,\n              notes: item.notes || '',\n              date: item.date || '',\n              category: item.category || '',\n              description: item.description || '',\n              laborPersons: item.labor_persons || 0,\n              laborUnitRate: item.labor_unit_rate || 0,\n              laborPersonsGeneral: item.labor_persons_general || 0,\n              laborUnitRateGeneral: item.labor_unit_rate_general || 0\n            }))\n          };\n        });\n        setInvoices(mappedInvoices);\n\n        // Company Info 로딩 (현재 사용자 것만)\n        const {\n          data: companyData,\n          error: companyError\n        } = await supabase!.from('company_info').select('*').eq('user_id', userId).maybeSingle();\n        if (!companyError && companyData) {\n          const stampImageData = companyData.stamp_image || '';\n          setCompanyInfo({\n            name: companyData.company_name,\n            businessNumber: companyData.business_number || '',\n            address: companyData.address || '',\n            phone: companyData.phone || '',\n            email: companyData.email || '',\n            representative: companyData.representative || '',\n            stampImage: stampImageData,\n            bankAccount: companyData.bank_account || '',\n            accountHolder: companyData.account_holder || ''\n          });\n          // 도장 이미지를 컨텍스트 상태에도 설정\n          setStampImage(stampImageData || null);\n\n          // 단위와 카테고리 로드\n          if (companyData.units && Array.isArray(companyData.units)) {\n            setUnits(companyData.units);\n          }\n          if (companyData.categories && Array.isArray(companyData.categories)) {\n            setCategories(companyData.categories);\n          }\n        } else {\n          // 데이터가 없으면 로컬 IndexedDB에서 로드 시도 (마이그레이션용)\n          const {\n            loadStampImage\n          } = await import('../utils/imageStorage');\n          const loadedImage = await loadStampImage();\n          if (loadedImage) {\n            setStampImage(loadedImage);\n            // IndexedDB에서 로드한 이미지를 companyInfo에도 설정\n            setCompanyInfo(prev => ({\n              ...prev,\n              stampImage: loadedImage\n            }));\n          }\n        }\n\n        // Schedules 로딩 (현재 사용자 것만)\n        const {\n          data: schedulesData,\n          error: schedulesError\n        } = await supabase!.from('schedules').select('*').eq('user_id', userId).order('start_date', {\n          ascending: true\n        });\n        if (!schedulesError && schedulesData) {\n          const mappedSchedules: Schedule[] = schedulesData.map((s: any) => ({\n            id: s.schedule_id,\n            userId: s.user_id,\n            title: s.title,\n            description: s.description || undefined,\n            scheduleType: s.schedule_type,\n            startDate: s.start_date,\n            startTime: s.start_time || undefined,\n            endDate: s.end_date || undefined,\n            endTime: s.end_time || undefined,\n            allDay: s.all_day || false,\n            clientId: s.client_id || undefined,\n            clientName: s.client_name || undefined,\n            workplaceId: s.workplace_id || undefined,\n            workplaceName: s.workplace_name || undefined,\n            projectName: s.project_name || undefined,\n            status: s.status || 'scheduled',\n            priority: s.priority || 'normal',\n            reminderEnabled: s.reminder_enabled || false,\n            reminderMinutesBefore: s.reminder_minutes_before || undefined,\n            isRecurring: s.is_recurring || false,\n            recurrenceRule: s.recurrence_rule || undefined,\n            location: s.location || undefined,\n            attendees: s.attendees || undefined,\n            notes: s.notes || undefined,\n            attachments: s.attachments || undefined,\n            createdAt: s.created_at,\n            updatedAt: s.updated_at\n          }));\n          setSchedules(mappedSchedules);\n\n          // 알림 권한 요청 및 스케줄링\n          const hasPermission = await requestNotificationPermission();\n          if (hasPermission) {\n            scheduleMultipleNotifications(mappedSchedules);\n          }\n        }\n        setError(null);\n      } catch (err) {\n        console.error('데이터 로딩 실패:', err);\n        setError(err instanceof Error ? err.message : '데이터 로딩 중 오류가 발생했습니다');\n      } finally {\n        setLoading(false);\n        // 초기 로딩 완료 표시\n        setTimeout(() => setIsInitialLoad(false), INITIAL_LOAD_GRACE_PERIOD_MS);\n      }\n    };\n    loadData();\n  }, [userId]);\n  const getCompletedWorkItems = (): WorkItem[] => workItems.filter(i => i.status === '완료');\n  const getCompletedWorkItemsByClient = (clientId: number): WorkItem[] => workItems.filter(i => i.clientId === clientId && i.status === '완료');\n  const addWorkItemToInvoice = (workItem: WorkItem, quantity: number | null = null, unitPrice: number | null = null) => {\n    const finalQuantity = quantity !== null ? quantity : workItem.quantity ?? 1;\n    const finalUnitPrice = unitPrice ?? workItem.defaultPrice ?? 0;\n    const lp = parseInt(String(workItem.laborPersons ?? 0), 10) || 0;\n    const lr = parseInt(String(workItem.laborUnitRate ?? 0), 10) || 0;\n    const lpg = parseInt(String(workItem.laborPersonsGeneral ?? 0), 10) || 0;\n    const lrg = parseInt(String(workItem.laborUnitRateGeneral ?? 0), 10) || 0;\n    const laborCost = lp * lr + lpg * lrg;\n    return {\n      name: workItem.name,\n      quantity: finalQuantity,\n      unit: workItem.unit ?? '',\n      unitPrice: finalUnitPrice,\n      total: finalQuantity * finalUnitPrice + laborCost,\n      laborPersons: lp,\n      laborUnitRate: lr,\n      laborPersonsGeneral: lpg,\n      laborUnitRateGeneral: lrg,\n      description: workItem.description ?? '',\n      category: workItem.category ?? '',\n      date: workItem.date ?? '',\n      notes: workItem.notes ?? ''\n    };\n  };\n  const convertEstimateToWorkItems = (estimateId: string): WorkItem[] => {\n    const estimate = estimates.find(est => est.id === estimateId);\n    if (!estimate) return [];\n    const baseMax = Math.max(0, ...workItems.map(i => {\n      const n = Number(i.id);\n      return Number.isFinite(n) ? n : 0;\n    }));\n    const newItems: WorkItem[] = estimate.items.map((item, index) => ({\n      id: baseMax + index + 1,\n      clientId: estimate.clientId,\n      clientName: estimate.clientName,\n      workplaceId: estimate.workplaceId,\n      workplaceName: estimate.workplaceName,\n      projectName: estimate.projectName,\n      name: item.name,\n      category: item.category,\n      defaultPrice: typeof item.unitPrice === 'number' ? item.unitPrice : 0,\n      quantity: typeof item.quantity === 'number' ? item.quantity : 0,\n      unit: item.unit,\n      description: item.description,\n      status: '예정',\n      date: new Date().toISOString().split('T')[0],\n      notes: item.notes ?? ''\n    }));\n\n    // UI 상태 업데이트\n    setWorkItems(prev => [...prev, ...newItems]);\n    setEstimates(prev => prev.map(est => est.id === estimateId ? {\n      ...est,\n      status: '작업 전환됨' as any\n    } : est));\n\n    // Supabase에 즉시 저장\n    (async () => {\n      if (!userId || !supabase) return;\n      try {\n        // 한글 status를 영어로 변환\n        const toDbWorkItemStatus = (koreanStatus: string): string => {\n          const statusMap: Record<string, string> = {\n            '예정': 'planned',\n            '진행중': 'in_progress',\n            '완료': 'completed',\n            '보류': 'on_hold'\n          };\n          return statusMap[koreanStatus] ?? 'planned';\n        };\n\n        // Work Items 저장\n        for (const item of newItems) {\n          const validWorkplaceId = typeof item.workplaceId === 'number' && item.workplaceId > 0 && !isNaN(item.workplaceId) ? item.workplaceId : null;\n          await supabase!.from('work_items').insert({\n            user_id: userId,\n            client_id: item.clientId,\n            client_name: item.clientName,\n            workplace_id: validWorkplaceId,\n            workplace_name: item.workplaceName,\n            project_name: item.projectName,\n            name: item.name,\n            category: item.category ?? '',\n            default_price: item.defaultPrice ?? 0,\n            quantity: item.quantity ?? 0,\n            unit: item.unit ?? '',\n            description: item.description ?? '',\n            status: toDbWorkItemStatus(item.status ?? '예정'),\n            start_date: item.date,\n            notes: item.notes ?? '',\n            labor_persons: 0,\n            labor_unit_rate: 0,\n            labor_persons_general: 0,\n            labor_unit_rate_general: 0\n          });\n        }\n\n        // Estimate status 업데이트\n        await supabase!.from('estimates').update({\n          status: toDbEstimateStatus('작업 전환됨')\n        }).eq('estimate_number', estimateId).eq('user_id', userId);\n      } catch (err) {\n        console.error('견적서 → 작업 항목 변환 중 Supabase 저장 실패:', err);\n      }\n    })();\n    return newItems;\n  };\n\n  // Schedules CRUD 함수\n  const saveSchedule = async (schedule: Schedule) => {\n    if (!supabase) return;\n    try {\n      const payload = {\n        user_id: userId || null,\n        title: schedule.title,\n        description: schedule.description || null,\n        schedule_type: schedule.scheduleType,\n        start_date: schedule.startDate,\n        start_time: schedule.startTime || null,\n        end_date: schedule.endDate || null,\n        end_time: schedule.endTime || null,\n        all_day: schedule.allDay,\n        client_id: schedule.clientId || null,\n        client_name: schedule.clientName || null,\n        workplace_id: schedule.workplaceId || null,\n        workplace_name: schedule.workplaceName || null,\n        project_name: schedule.projectName || null,\n        status: schedule.status,\n        priority: schedule.priority,\n        reminder_enabled: schedule.reminderEnabled,\n        reminder_minutes_before: schedule.reminderMinutesBefore || null,\n        is_recurring: schedule.isRecurring || false,\n        recurrence_rule: schedule.recurrenceRule || null,\n        location: schedule.location || null,\n        attendees: schedule.attendees || null,\n        notes: schedule.notes || null,\n        attachments: schedule.attachments || null,\n        updated_at: new Date().toISOString()\n      };\n      if (schedule.id) {\n        // Update existing schedule\n        const updateQuery = supabase!.from('schedules').update(payload).eq('schedule_id', schedule.id);\n\n        // Only filter by user_id if user is logged in\n        if (userId) {\n          updateQuery.eq('user_id', userId);\n        }\n        const {\n          error\n        } = await updateQuery;\n        if (error) throw error;\n\n        // Update local state\n        setSchedules(prev => prev.map(s => s.id === schedule.id ? {\n          ...schedule,\n          updatedAt: payload.updated_at\n        } : s));\n\n        // 알림 재스케줄링\n        scheduleNotification({\n          ...schedule,\n          updatedAt: payload.updated_at\n        });\n      } else {\n        // Insert new schedule\n        const {\n          data,\n          error\n        } = await supabase!.from('schedules').insert({\n          ...payload,\n          created_at: new Date().toISOString()\n        }).select().single();\n        if (error) throw error;\n\n        // Add to local state\n        const newSchedule: Schedule = {\n          id: data.schedule_id,\n          userId: data.user_id,\n          title: data.title,\n          description: data.description || undefined,\n          scheduleType: data.schedule_type,\n          startDate: data.start_date,\n          startTime: data.start_time || undefined,\n          endDate: data.end_date || undefined,\n          endTime: data.end_time || undefined,\n          allDay: data.all_day,\n          clientId: data.client_id || undefined,\n          clientName: data.client_name || undefined,\n          workplaceId: data.workplace_id || undefined,\n          workplaceName: data.workplace_name || undefined,\n          projectName: data.project_name || undefined,\n          status: data.status,\n          priority: data.priority,\n          reminderEnabled: data.reminder_enabled,\n          reminderMinutesBefore: data.reminder_minutes_before || undefined,\n          isRecurring: data.is_recurring || false,\n          recurrenceRule: data.recurrence_rule || undefined,\n          location: data.location || undefined,\n          attendees: data.attendees || undefined,\n          notes: data.notes || undefined,\n          attachments: data.attachments || undefined,\n          createdAt: data.created_at,\n          updatedAt: data.updated_at\n        };\n        setSchedules(prev => [...prev, newSchedule].sort((a, b) => a.startDate.localeCompare(b.startDate)));\n\n        // 새 일정 알림 스케줄링\n        scheduleNotification(newSchedule);\n      }\n    } catch (err) {\n      console.error('일정 저장 실패:', err);\n      throw err;\n    }\n  };\n  const deleteSchedule = async (id: number) => {\n    if (!supabase) return;\n    try {\n      const deleteQuery = supabase!.from('schedules').delete().eq('schedule_id', id);\n\n      // Only filter by user_id if user is logged in\n      if (userId) {\n        deleteQuery.eq('user_id', userId);\n      }\n      const {\n        error\n      } = await deleteQuery;\n      if (error) throw error;\n\n      // Update local state\n      setSchedules(prev => prev.filter(s => s.id !== id));\n\n      // 알림 취소\n      cancelScheduleNotification(id);\n    } catch (err) {\n      console.error('일정 삭제 실패:', err);\n      throw err;\n    }\n  };\n\n  // Clients 저장 - Clients.tsx에서 즉시 저장하므로 디바운스 저장 비활성화\n  // Clients.tsx에서 즉시 INSERT/UPDATE/DELETE 처리\n  // 디바운스 저장은 중복 INSERT 409 Conflict를 발생시키므로 제거\n  // useEffect(() => {\n  //   ... (disabled)\n  // }, [clients, userId, loading, isInitialLoad]);\n\n  // Company Info 저장 (디바운싱 적용)\n  useEffect(() => {\n    if (!userId || !supabase || loading || isInitialLoad) return;\n    const timer = setTimeout(async () => {\n      try {\n        const updatePayload = {\n          company_name: companyInfo.name,\n          business_number: companyInfo.businessNumber,\n          address: companyInfo.address,\n          phone: companyInfo.phone,\n          email: companyInfo.email,\n          representative: companyInfo.representative,\n          stamp_image: companyInfo.stampImage || null,\n          bank_account: companyInfo.bankAccount || null,\n          account_holder: companyInfo.accountHolder || null,\n          units: units,\n          categories: categories\n        };\n        const insertPayload = {\n          user_id: userId,\n          ...updatePayload\n        };\n\n        // Upsert 사용 (user_id unique constraint 기반 자동 conflict 처리)\n        const {\n          error: upsertError\n        } = await supabase!.from('company_info').upsert(insertPayload);\n        if (upsertError) {\n          console.error('회사 정보 저장 실패:', upsertError);\n        }\n      } catch (err) {\n        console.error('회사 정보 저장 실패:', err);\n      }\n    }, DEBOUNCE_DELAY_MS);\n    return () => clearTimeout(timer);\n  }, [companyInfo, units, categories, userId, supabase, loading, isInitialLoad]);\n\n  // Work Items 저장 - WorkItems.tsx에서 즉시 저장하므로 디바운스 저장 비활성화\n  // Clients.tsx와 WorkItems.tsx에서 각각 즉시 INSERT/UPDATE/DELETE 처리\n  // 디바운스 저장은 중복 INSERT 409 Conflict를 발생시키므로 제거\n  // useEffect(() => {\n  //   ... (disabled)\n  // }, [workItems, userId, loading, isInitialLoad]);\n\n  // Estimates 저장 (디바운싱 적용)\n  useEffect(() => {\n    if (!userId || !supabase || loading || isInitialLoad) return;\n    const timer = setTimeout(async () => {\n      try {\n        await supabase!.from('estimate_items').delete().match({\n          user_id: userId\n        });\n        await supabase!.from('estimates').delete().eq('user_id', userId);\n        if (estimates.length > 0) {\n          for (const estimate of estimates) {\n            // workplace_id: 0 또는 NaN은 null로 변환\n            const validWorkplaceId = typeof estimate.workplaceId === 'number' && estimate.workplaceId > 0 && !isNaN(estimate.workplaceId) ? estimate.workplaceId : null;\n            const {\n              data: estimateData,\n              error: estError\n            } = await supabase!.from('estimates').insert({\n              estimate_number: estimate.id,\n              user_id: userId,\n              client_id: estimate.clientId,\n              client_name: estimate.clientName,\n              workplace_id: validWorkplaceId,\n              workplace_name: estimate.workplaceName,\n              project_name: estimate.projectName,\n              title: estimate.title || '',\n              date: estimate.date || new Date().toISOString().split('T')[0],\n              status: toDbEstimateStatus(estimate.status),\n              valid_until: estimate.validUntil || null,\n              notes: estimate.notes || '',\n              total_amount: estimate.totalAmount\n            }).select().single();\n            if (estError) {\n              console.error('견적서 저장 오류:', estError);\n              continue;\n            }\n            if (estimateData && estimate.items.length > 0) {\n              const items = estimate.items.map(item => ({\n                user_id: userId,\n                estimate_id: estimateData.estimate_id,\n                name: item.name,\n                category: item.category || null,\n                quantity: item.quantity || 0,\n                unit: item.unit || null,\n                unit_price: item.unitPrice || 0,\n                total: item.total || 0,\n                description: item.description || null,\n                notes: item.notes || null\n              }));\n              const {\n                error: itemsError\n              } = await supabase!.from('estimate_items').insert(items);\n              if (itemsError) {\n                console.error('견적서 항목 저장 오류:', itemsError);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        console.error('견적서 저장 실패:', err);\n      }\n    }, DEBOUNCE_DELAY_MS);\n    return () => clearTimeout(timer);\n  }, [estimates, userId, loading, isInitialLoad]);\n\n  // Invoices 저장 (디바운싱 적용)\n  useEffect(() => {\n    if (!userId || !supabase || loading || isInitialLoad) return;\n    const timer = setTimeout(async () => {\n      try {\n        await supabase!.from('invoice_items').delete().match({\n          user_id: userId\n        });\n        await supabase!.from('invoices').delete().eq('user_id', userId);\n\n        // 유효하지 않은 청구서 필터링 및 자동 삭제\n        const validInvoices = invoices.filter(inv => {\n          const isValid = inv.clientId !== null && inv.clientId !== undefined && inv.clientId !== 0;\n          if (!isValid) {\n            console.warn('유효하지 않은 청구서 자동 삭제:', inv.id);\n          }\n          return isValid;\n        });\n\n        // 삭제된 청구서가 있으면 상태 업데이트 후 종료 (다음 사이클에서 정리된 데이터 저장)\n        if (validInvoices.length !== invoices.length) {\n          const deletedCount = invoices.length - validInvoices.length;\n          console.info(`${deletedCount}개의 유효하지 않은 청구서가 삭제되었습니다. 다음 저장 시 정리된 데이터가 반영됩니다.`);\n          setInvoices(validInvoices);\n          return; // 이번 사이클은 건너뛰고 다음 사이클에서 정리된 데이터 저장\n        }\n        if (validInvoices.length > 0) {\n          // Status 변환 함수 (한글 → 영어)\n          const toDbStatus = (status: string): string => {\n            const statusMap: Record<string, string> = {\n              '발송대기': 'pending',\n              '발송됨': 'pending',\n              '미결제': 'overdue',\n              '결제완료': 'paid'\n            };\n            return statusMap[status] ?? 'pending';\n          };\n          for (const invoice of validInvoices) {\n            // workplace_id: 0 또는 NaN은 null로 변환\n            const validWorkplaceId = typeof invoice.workplaceId === 'number' && invoice.workplaceId > 0 && !isNaN(invoice.workplaceId) ? invoice.workplaceId : null;\n            const invoiceSyncData = {\n              invoice_number: invoice.id,\n              user_id: userId,\n              client_id: invoice.clientId,\n              workplace_id: validWorkplaceId,\n              title: invoice.project,\n              amount: invoice.amount,\n              status: toDbStatus(invoice.status),\n              date: invoice.date\n            };\n            const {\n              data: invoiceData,\n              error: invError\n            } = await supabase!.from('invoices').insert(invoiceSyncData).select().single();\n            if (invError) {\n              console.error('청구서 저장 오류:', invError);\n              continue;\n            }\n            if (invoiceData && invoice.workItems.length > 0) {\n              const items = invoice.workItems.map((item, index) => ({\n                user_id: userId,\n                invoice_id: invoiceData.invoice_id,\n                category: item.category ?? '',\n                name: item.name,\n                description: item.description ?? '',\n                unit: item.unit ?? '',\n                quantity: item.quantity || 0,\n                unit_price: item.unitPrice || 0,\n                sort_order: index,\n                date: item.date !== null && item.date !== undefined && item.date !== '' ? item.date : null,\n                notes: item.notes !== null && item.notes !== undefined && item.notes !== '' ? item.notes : null,\n                labor_persons: typeof item.laborPersons === 'number' ? item.laborPersons : 0,\n                labor_unit_rate: typeof item.laborUnitRate === 'number' ? item.laborUnitRate : 0,\n                labor_persons_general: typeof item.laborPersonsGeneral === 'number' ? item.laborPersonsGeneral : 0,\n                labor_unit_rate_general: typeof item.laborUnitRateGeneral === 'number' ? item.laborUnitRateGeneral : 0\n              }));\n              const {\n                error: itemsError\n              } = await supabase!.from('invoice_items').insert(items);\n              if (itemsError) {\n                console.error('청구서 항목 저장 오류:', itemsError);\n              }\n            }\n          }\n        }\n      } catch (err) {\n        console.error('청구서 저장 실패:', err);\n      }\n    }, DEBOUNCE_DELAY_MS);\n    return () => clearTimeout(timer);\n  }, [invoices, userId, loading, isInitialLoad]);\n  const value: AppContextValue = {\n    companyInfo,\n    setCompanyInfo,\n    clients,\n    setClients,\n    workItems,\n    setWorkItems,\n    invoices,\n    setInvoices,\n    estimates,\n    setEstimates,\n    schedules,\n    setSchedules,\n    units,\n    setUnits,\n    categories,\n    setCategories,\n    stampImage,\n    setStampImage,\n    getCompletedWorkItems,\n    getCompletedWorkItemsByClient,\n    addWorkItemToInvoice,\n    convertEstimateToWorkItems,\n    saveSchedule,\n    deleteSchedule,\n    loading,\n    error\n  };\n  if (loading) {\n    return /*@million jsx-skip*/<AppProvider_1 />;\n  }\n  if (error) {\n    return /*@million jsx-skip*/<AppProvider_2 v0={error} v1={() => window.location.href = '/'} />;\n  }\n  return /*@million jsx-skip*/<AppProvider_3 v0={<AppContext.Provider value={value}>{children}</AppContext.Provider>} />;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"28\":\"2bebae8e\",\"93\":\"75a12726\",\"217\":\"8e4bba27\",\"288\":\"62c9b4b6\",\"347\":\"3b4de98b\",\"355\":\"9fcb5943\",\"399\":\"9de48e49\",\"648\":\"83727047\",\"686\":\"1d698c08\",\"703\":\"e15899f4\",\"776\":\"43b535c8\",\"940\":\"64d615e5\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"construction-management-frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"https://bluesky78060.github.io/Architecture-Management/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkconstruction_management_frontend\"] = self[\"webpackChunkconstruction_management_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(568)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ThemeContext","createContext","undefined","ThemeProvider","_ref","children","theme","setTheme","useState","savedTheme","localStorage","getItem","useEffect","root","window","document","documentElement","classList","remove","add","setItem","_jsx","Provider","value","toggleTheme","prevTheme","Layout_1","_compiledBlock","_props","_jsxs","className","v0","onClick","v1","v2","title","v3","v4","v5","v6","v7","name","portals","navigation","href","icon","HomeIcon","adminOnly","CalculatorIcon","DocumentTextIcon","UsersIcon","WrenchScrewdriverIcon","CalendarIcon","CogIcon","UserCircleIcon","ShieldCheckIcon","location","useLocation","logout","currentUser","isAdmin","useUser","useTheme","context","useContext","Error","showUserMenu","setShowUserMenu","menuRef","useRef","handleClickOutside","e","current","contains","target","handleKeyDown","key","addEventListener","removeEventListener","MoonIcon","SunIcon","filter","item","map","isActive","pathname","Link","to","console","log","concat","ref","UserIcon","Outlet","JSX_socialProviders_1","viewBox","fill","d","svg","JSX_socialProviders_2","Login_1","_props3","onSubmit","htmlFor","id","type","autoComplete","onChange","v8","placeholder","v9","v10","v11","v12","v13","v14","v15","v16","disabled","v17","v18","v19","Login","mode","setMode","email","setEmail","password","setPassword","setName","rememberMe","setRememberMe","error","setError","success","setSuccess","loading","setLoading","navigate","useNavigate","isLoggedIn","socialProviders","action","async","supabase","signInError","auth","signInWithOAuth","provider","options","redirectTo","origin","err","errorMessage","message","bgColor","hoverColor","textColor","borderColor","data","handleSubmit","preventDefault","trim","signInWithPassword","user","setTimeout","length","signUpError","signUp","envVer","process","version","envBg","REACT_APP_LOGIN_BG","raw","sep","includes","bgUrl","style","backgroundImage","LockClosedIcon","EnvelopeIcon","checked","_Fragment","ForgotPassword_1","ForgotPassword","resetError","resetPasswordForEmail","ArrowLeftIcon","PendingApproval_1","PendingApproval_2","_props2","PendingApproval","approvalStatus","setApprovalStatus","replace","getUser","approval","approvalError","from","select","eq","single","checkApprovalStatus","handleLogout","signOut","status","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ClockIcon","Date","created_at","toLocaleString","ExclamationCircleIcon","AppGate_1","AppGate_2","AppGate_3","AppGate_4","_props4","AppGate","LOGIN_DISABLED","REACT_APP_DISABLE_LOGIN","app_metadata","maybeSingle","_user$app_metadata$pr","_user$email","userEmail","insertError","insert","user_id","Navigate","Layout","LoadingFallback_1","LoadingFallback","Dashboard","lazy","EstimatesPage","InvoicesPage","Clients","WorkItemsPage","Schedules","CompanyInfo","Settings","AdminApproval","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","retry","staleTime","SECONDS_IN_MINUTE","MS_IN_SECOND","ReactDOM","getElementById","routes","createRoutesFromElements","Route","path","element","index","Suspense","fallback","futureFlags","v7_startTransition","v7_relativeSplatPath","router","createBrowserRouter","basename","future","render","QueryClientProvider","client","UserProvider","AppProvider","RouterProvider","supabaseService","constructor","config","initialize","url","this","createClient","anonKey","persistSession","autoRefreshToken","db","schema","global","headers","getClient","getConfig","healthCheck","count","head","code","getStats","connected","hasAnonKey","hasServiceRoleKey","serviceRoleKey","query","functionName","params","rpc","transaction","callback","supabaseUrl","_process$env$REACT_AP","REACT_APP_SUPABASE_URL","supabaseAnonKey","_process$env$REACT_AP2","REACT_APP_SUPABASE_ANON_KEY","getCurrentUserId","DEFAULT_USER_UUID","_session$user","_session$user2","session","getSession","isDevelopment","logger","info","warn","arguments","debug","KIB","SYSTEM_PASSWORD","isInitialized","initPromise","initializeSecureStorage","secureStorage","initializeSystemKey","setSecureItem","then","catch","removeSecureItem","removeItem","ADMIN_EMAILS","REACT_APP_ADMIN_EMAILS","split","toLowerCase","getLoginDisabled","isLoginDisabledRuntime","sessionStorage","_","UserContext","setCurrentUser","setIsLoggedIn","autoMigrate","migrateSensitiveData","URLSearchParams","search","bypassLogin","get","devUser","username","role","JSON","stringify","_ref2","_session$user$email","_ref3","_session$user$user_me","_session$user$user_me2","supabaseUser","user_metadata","savedUser","parse","subscription","onAuthStateChange","event","_session$user$email2","_ref4","_session$user$user_me3","_session$user$user_me4","unsubscribe","String","now","getUserStorageKey","timerId","TIMEOUT_MS","reset","clearTimeout","events","forEach","ev","passive","onStorage","DEFAULT_KEY_CONFIG","ModernSecureStorage","cryptoKey","keyVersion","getInstance","instance","deriveKey","salt","actualSalt","crypto","getRandomValues","Uint8Array","keyMaterial","subtle","importKey","TextEncoder","encode","iterations","hash","storedSalt","getStoredSalt","storeSalt","encrypt","customKey","_this$getStoredSalt","iv","encodedData","encrypted","algorithm","decrypt","encryptedData","decrypted","TextDecoder","decode","isSensitiveData","serialized","serializeEncryptedData","getSecureItem","rawData","deserializeEncryptedData","some","sensitiveKey","arrayBufferToBase64","uint8ArrayToBase64","parsed","base64ToArrayBuffer","base64ToUint8Array","_unused","buffer","bytes","binary","i","byteLength","fromCharCode","btoa","base64","atob","charCodeAt","array","base64Salt","stored","_unused2","resetSecurityKey","oldPassword","newPassword","newSalt","newKey","reencryptAllSensitiveData","sensitiveKeys","showScheduleNotification","schedule","minutesUntil","Notification","permission","timeText","notification","body","description","tag","requireInteraction","silent","onclick","focus","close","scheduledNotifications","cancelScheduleNotification","scheduleId","findIndex","n","timeoutId","splice","scheduleNotification","reminderEnabled","reminderMinutesBefore","scheduleDateTime","startDate","startTime","reminderTime","getTime","timeUntilReminder","Math","round","push","DEBOUNCE_DELAY_MS","toDbEstimateStatus","koreanStatus","_statusMap$koreanStat","AppContext","useApp","ctx","defaultCompanyInfo","businessNumber","address","phone","representative","bankAccount","accountHolder","AppProvider_1","AppProvider_2","AppProvider_3","userId","setUserId","isInitialLoad","setIsInitialLoad","companyInfo","setCompanyInfo","clients","setClients","workItems","setWorkItems","invoices","setInvoices","estimates","setEstimates","schedules","setSchedules","units","setUnits","categories","setCategories","stampImage","setStampImage","checkAuth","reload","resetTimer","MINUTES_PER_HOUR","clientsData","clientsError","order","ascending","mappedClients","c","client_id","company_name","mobile","business","businessName","business_number","businessType","business_type","businessItem","business_item","businessAddress","business_address","taxEmail","tax_email","workplaces","projects","totalBilled","total_billed","outstanding","notes","workItemsData","workItemsError","fromDbStatus","_statusMap$status","mappedWorkItems","w","_w$clients","_w$clients2","clientName","workplace","find","wp","Number","workplace_id","workplaceName","work_item_id","clientId","workplaceId","projectName","project_name","category","defaultPrice","default_price","quantity","unit","date","start_date","laborPersons","labor_persons","laborUnitRate","labor_unit_rate","laborPersonsGeneral","labor_persons_general","laborUnitRateGeneral","labor_unit_rate_general","estimatesData","estimatesError","mappedEstimates","_e$clients","estimate_number","estimate_id","workplace_name","validUntil","valid_until","totalAmount","total_amount","items","estimate_items","unitPrice","unit_price","total","invoicesData","invoicesError","mappedInvoices","inv","_inv$clients","_inv$clients2","workplaceAddress","invoice_number","invoice_id","project","amount","invoice_items","companyData","companyError","stampImageData","stamp_image","bank_account","account_holder","Array","isArray","loadStampImage","loadedImage","prev","_objectSpread","schedulesData","schedulesError","mappedSchedules","s","schedule_id","scheduleType","schedule_type","start_time","endDate","end_date","endTime","end_time","allDay","all_day","client_name","priority","reminder_enabled","reminder_minutes_before","isRecurring","is_recurring","recurrenceRule","recurrence_rule","attendees","attachments","createdAt","updatedAt","updated_at","requestPermission","requestNotificationPermission","scheduleMultipleNotifications","loadData","timer","updatePayload","insertPayload","upsertError","upsert","delete","match","estimate","validWorkplaceId","isNaN","estimateData","estError","toISOString","itemsError","validInvoices","isValid","deletedCount","toDbStatus","_statusMap$status2","invoice","invoiceSyncData","invoiceData","invError","_item$category2","_item$description2","_item$unit2","sort_order","getCompletedWorkItems","getCompletedWorkItemsByClient","addWorkItemToInvoice","workItem","_workItem$quantity","_workItem$laborPerson","_workItem$laborUnitRa","_workItem$laborPerson2","_workItem$laborUnitRa2","_workItem$unit","_workItem$description","_workItem$category","_workItem$date","_workItem$notes","finalQuantity","finalUnitPrice","lp","parseInt","lr","lpg","lrg","laborCost","convertEstimateToWorkItems","estimateId","est","baseMax","max","isFinite","newItems","_item$notes","toDbWorkItemStatus","_statusMap$koreanStat2","_item$category","_item$defaultPrice","_item$quantity","_item$unit","_item$description","_item$status","_item$notes2","update","saveSchedule","payload","updateQuery","newSchedule","sort","a","b","localeCompare","deleteSchedule","deleteQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","Object","keys","every","r","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","ns","create","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","onerror","onload","doneFns","parentNode","removeChild","bind","appendChild","Symbol","toStringTag","p","installedChunks","installedChunkData","promise","resolve","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}