{"version":3,"file":"static/js/355.c13bb460.chunk.js","mappings":"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","sources":["hooks/useCalendar.ts","components/ConfirmDialog.tsx","hooks/useClientWorkplaces.ts","components/work-items/StatsCards.tsx","utils/guards.ts","components/work-items/FilterBar.tsx","components/work-items/WorkItemsTable.tsx","components/work-items/ItemFormModal.tsx","components/work-items/BulkFormModal.tsx","hooks/useProjects.ts","components/WorkItems.tsx","pages/WorkItemsPage.tsx","hooks/useSelection.ts","hooks/useNumberFormat.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport type UseCalendarOptions = {\n  value?: string | null;\n  onChange?: (date: string) => void;\n  closeOnSelect?: boolean;\n};\n\nexport function useCalendar(options: UseCalendarOptions = {}) {\n  const { value, onChange, closeOnSelect = true } = options;\n  const [open, setOpen] = useState(false);\n  const [month, setMonth] = useState<Date>(() => new Date());\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  // Sync month with external value\n  useEffect(() => {\n    if (value == null || value === '') return;\n    const parts = value.split('-').map((x) => parseInt(x, 10));\n    const y = parts[0];\n    const m = parts[1];\n    if (Number.isFinite(y) && Number.isFinite(m)) {\n      const ONE = 1; // eslint-disable-line no-magic-numbers\n      setMonth(new Date(y, m - ONE, ONE));\n    }\n  }, [value]);\n\n  // Close when clicking outside\n  useEffect(() => {\n    const onDoc = (e: MouseEvent) => {\n      const el = containerRef.current;\n      if (el !== null && !el.contains(e.target as Node)) setOpen(false);\n    };\n    document.addEventListener('mousedown', onDoc);\n    return () => document.removeEventListener('mousedown', onDoc);\n  }, []);\n\n  const pad2 = (n: number) => {\n    const WIDTH = 2; // eslint-disable-line no-magic-numbers\n    return String(n).padStart(WIDTH, '0');\n  };\n  const prevMonth = () => setMonth((d) => new Date(d.getFullYear(), d.getMonth() - 1, 1));\n  const nextMonth = () => setMonth((d) => new Date(d.getFullYear(), d.getMonth() + 1, 1));\n  const pickDate = (day: number | null) => {\n    if (day == null || !Number.isFinite(day) || day <= 0) return;\n    const y = month.getFullYear();\n    const m = month.getMonth() + 1;\n    const v = `${y}-${pad2(m)}-${pad2(day)}`;\n    onChange?.(v);\n    if (closeOnSelect) setOpen(false);\n  };\n\n  // Calendar grid (weeks x days)\n  const getCalendarGrid = () => {\n    const first = new Date(month.getFullYear(), month.getMonth(), 1);\n    const startDay = first.getDay();\n    const days = new Date(month.getFullYear(), month.getMonth() + 1, 0).getDate();\n    const cells: Array<number | null> = [];\n    for (let i = 0; i < startDay; i++) cells.push(null);\n    for (let d = 1; d <= days; d++) cells.push(d);\n    const rows: Array<Array<number | null>> = [];\n    const DAYS_IN_WEEK = 7; // eslint-disable-line no-magic-numbers\n    for (let i = 0; i < cells.length; i += DAYS_IN_WEEK) rows.push(cells.slice(i, i + DAYS_IN_WEEK));\n    return rows;\n  };\n\n  return {\n    open,\n    setOpen,\n    month,\n    setMonth,\n    prevMonth,\n    nextMonth,\n    pickDate,\n    getCalendarGrid,\n    containerRef,\n  };\n}\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React from 'react';\ntype Props = {\n  open: boolean;\n  title: string;\n  message: string | React.ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\nconst ConfirmDialog_1 = _compiledBlock(_props => <div className=\"fixed inset-0 bg-black bg-opacity-30 dark:bg-black dark:bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-md p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">{_props.v0}</h3>\n        <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">{_props.v1}</div>\n        <div className=\"flex justify-end space-x-2\">\n          <button onClick={_props.v2} className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\">{_props.v3}</button>\n          <button onClick={_props.v4} className=\"px-4 py-2 bg-red-600 hover:bg-red-700 dark:bg-red-700 dark:hover:bg-red-800 text-white rounded\">{_props.v5}</button>\n        </div>\n      </div>\n    </div>, {\n  name: \"ConfirmDialog_1\",\n  portals: [\"v0\", \"v1\", \"v3\", \"v5\"]\n});\nconst ConfirmDialog: React.FC<Props> = ({\n  open,\n  title,\n  message,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel\n}) => {\n  if (!open) return null;\n  return /*@million jsx-skip*/<ConfirmDialog_1 v0={title} v1={message} v2={onCancel} v3={cancelText} v4={onConfirm} v5={confirmText} />;\n};\nexport default ConfirmDialog;","import { useApp } from '../contexts/AppContext';\nimport type { Client, Workplace } from '../types/domain';\n\nexport function useClientWorkplaces() {\n  const { clients } = useApp();\n\n  const getClientWorkplaces = (clientId?: number | string): Workplace[] => {\n    if (clientId == null || (typeof clientId === 'string' && clientId.trim() === '')) return [];\n    const parsed = typeof clientId === 'string' ? parseInt(clientId, 10) : clientId;\n    const id = Number.isFinite(parsed) ? parsed : null;\n    if (id === null) return [];\n    const client = (clients as Client[]).find(c => c.id === id);\n    const workplaces: Workplace[] = (client !== undefined && Array.isArray(client.workplaces)) ? client.workplaces : [];\n    return workplaces;\n  };\n\n  return { getClientWorkplaces };\n}\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst StatsCards_1 = _compiledBlock(_props => <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-4\">\n      <div className=\"bg-blue-100 dark:bg-blue-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">총 작업 항목</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v0}건</p>\n          </div>\n          <div className=\"bg-blue-500 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v1}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-green-100 dark:bg-green-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">완료된 작업</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v2}건</p>\n          </div>\n          <div className=\"bg-green-500 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v3}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-purple-100 dark:bg-purple-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">진행 중인 작업</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v4}건</p>\n          </div>\n          <div className=\"bg-purple-500 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v5}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-orange-100 dark:bg-orange-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">총 작업 금액</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v6}원</p>\n          </div>\n          <div className=\"bg-orange-500 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v7}\n          </div>\n        </div>\n      </div>\n    </div>, {\n  name: \"StatsCards_1\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\"]\n});\nconst StatsCards = function StatsCards({\n  filteredWorkItems,\n  format,\n  getLaborCost\n}: Props) {\n  const total = filteredWorkItems.length;\n  const completed = filteredWorkItems.filter(i => i.status === '완료').length;\n  const inProgress = filteredWorkItems.filter(i => i.status === '진행중').length;\n  const totalAmount = filteredWorkItems.reduce((sum, item) => {\n    const priceRaw = Number(item.defaultPrice);\n    const qtyRaw = Number(item.quantity);\n    const price = Number.isFinite(priceRaw) ? priceRaw : 0;\n    const qty = Number.isFinite(qtyRaw) ? qtyRaw : 1;\n    return sum + price * qty + getLaborCost(item);\n  }, 0);\n  return /*@million jsx-skip*/<StatsCards_1 v0={total} v1={<WrenchScrewdriverIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v2={completed} v3={<CheckCircleIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v4={inProgress} v5={<ExclamationTriangleIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v6={format(totalAmount)} v7={<CurrencyDollarIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { WrenchScrewdriverIcon, CheckCircleIcon, ExclamationTriangleIcon, CurrencyDollarIcon } from '@heroicons/react/24/outline';\nimport type { WorkItem } from '../../types/domain';\ntype Props = {\n  filteredWorkItems: WorkItem[];\n  format: (n: number) => string;\n  getLaborCost: (item: WorkItem) => number;\n};\nexport default StatsCards;","export const hasValue = <T>(v: T | null | undefined): v is T => v !== null && v !== undefined;\n\nexport const isNonEmptyString = (v: unknown): v is string => typeof v === 'string' && v.trim() !== '';\n\nexport const isFiniteNumber = (v: unknown): v is number => typeof v === 'number' && Number.isFinite(v);\n\nexport const isPositiveNumber = (v: unknown): v is number => isFiniteNumber(v) && v > 0;\n\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst FilterBar_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-md shadow-sm p-2 mb-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3 flex-wrap\">\n          <span className=\"text-xs font-medium text-gray-500 dark:text-gray-400\">필터:</span>\n          <div className=\"relative inline-flex items-center\">\n            <label htmlFor=\"filter-client\" className=\"sr-only\">건축주 필터</label>\n            <select id=\"filter-client\" name=\"filterClient\" autoComplete=\"off\" value={_props.v0} onChange={_props.v1} className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0\">\n              <option value=\"\">전체 건축주</option>\n              {_props.v2}\n            </select>\n          </div>\n          <div className=\"relative inline-flex items-center\">\n            <label htmlFor=\"filter-project\" className=\"sr-only\">프로젝트 필터</label>\n            <select id=\"filter-project\" name=\"filterProject\" autoComplete=\"off\" value={_props.v3} onChange={_props.v4} className={_props.v5} disabled={_props.v6}>\n              <option value=\"\">{_props.v7}</option>\n              {_props.v8}\n            </select>\n          </div>\n          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n            {_props.v9}\n          </span>\n          {_props.v10}\n          {_props.v11}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {_props.v12}\n        </div>\n      </div>\n    </div>, {\n  name: \"FilterBar_1\",\n  portals: [\"v2\", \"v7\", \"v8\", \"v9\", \"v10\", \"v11\", \"v12\"]\n});\nconst FilterBar = function FilterBar({\n  clients,\n  selectedClient,\n  selectedProject,\n  filteredCount,\n  totalCount,\n  selectionCount,\n  bulkStatus,\n  statuses,\n  getClientProjects,\n  onChangeClient,\n  onChangeProject,\n  onResetFilters,\n  onBulkStatusChange,\n  onApplyBulkStatus,\n  onCreateBulkInvoice,\n  onBulkDelete\n}: Props) {\n  const hasClient = String(selectedClient ?? '') !== '';\n  const hasProject = (selectedProject ?? '').trim() !== '';\n  const hasFilter = hasClient || hasProject;\n  const hasSelection = isPositiveNumber(selectionCount);\n  return /*@million jsx-skip*/<FilterBar_1 v0={selectedClient == null ? '' : String(selectedClient)} v1={e => onChangeClient(e.target.value)} v2={clients.map(client => <option key={client.id} value={String(client.id)}>{client.name}</option>)} v3={selectedProject} v4={e => onChangeProject(e.target.value)} v5={`border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0 ${!hasClient ? 'text-gray-400 cursor-not-allowed' : 'text-gray-700 dark:text-gray-300'}`} v6={!hasClient} v7={hasClient ? '전체 프로젝트' : '건축주 선택 후'} v8={hasClient && getClientProjects(selectedClient).map(project => <option key={project} value={project}>{project}</option>)} v9={hasFilter ? `${filteredCount}개` : `총 ${totalCount}개`} v10={hasSelection && <span className=\"ml-2 inline-flex items-center px-2 py-0.5 text-xs font-medium rounded-full bg-indigo-50 dark:bg-indigo-900/30 text-indigo-700 dark:text-indigo-300 border border-indigo-200 dark:border-indigo-700\">\n              선택 {selectionCount}\n            </span>} v11={hasFilter && <button onClick={onResetFilters} className=\"text-xs text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 underline\">\n              초기화\n            </button>} v12={hasSelection && <>\n              <div className=\"flex items-center space-x-2 mr-2\">\n                <label htmlFor=\"bulk-status-select\" className=\"text-xs text-gray-600 dark:text-gray-300\">상태 일괄 변경</label>\n                <select id=\"bulk-status-select\" name=\"bulkStatus\" autoComplete=\"off\" value={bulkStatus} onChange={e => onBulkStatusChange(e.target.value)} className=\"border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 text-xs bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-500\">\n                  <option value=\"\">상태 선택</option>\n                  {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n                </select>\n                <button onClick={onApplyBulkStatus} className=\"bg-purple-600 hover:bg-purple-700 text-white font-medium py-1 px-2 rounded flex items-center text-xs leading-none\">\n                  적용\n                </button>\n              </div>\n              <button onClick={onCreateBulkInvoice} className=\"flex items-center justify-center px-3 py-1.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 dark:text-gray-300 text-xs leading-none\">\n                <span className=\"text-green-600 mr-1.5\">📈</span>\n                <span className=\"font-semibold\">청구서 생성 ({selectionCount})</span>\n              </button>\n              <button onClick={onBulkDelete} className=\"flex items-center justify-center px-3 py-1.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 dark:text-gray-300 text-xs leading-none\">\n                <span className=\"text-red-600 mr-1.5\">🗑️</span>\n                <span className=\"font-semibold\">삭제 ({selectionCount})</span>\n              </button>\n            </>} />;\n};\nimport { block as _block } from \"million/react\";\nimport type { Client } from '../../types/domain';\nimport { isPositiveNumber } from '../../utils/guards';\ntype Props = {\n  clients: Client[];\n  selectedClient: string | number;\n  selectedProject: string;\n  filteredCount: number;\n  totalCount: number;\n  selectionCount: number;\n  bulkStatus: string;\n  statuses: string[];\n  getClientProjects: (clientId?: number | string) => string[];\n  onChangeClient: (val: string) => void;\n  onChangeProject: (val: string) => void;\n  onResetFilters: () => void;\n  onBulkStatusChange: (val: string) => void;\n  onApplyBulkStatus: () => void;\n  onCreateBulkInvoice: () => void;\n  onBulkDelete: () => void;\n};\nexport default FilterBar;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst WorkItemsTable_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n          <thead className=\"bg-gray-50 dark:bg-gray-700\">\n            <tr>\n              <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-12\">\n                <input id=\"workitem-select-all\" name=\"workitem-select-all\" type=\"checkbox\" onChange={_props.v0} checked={_props.v1} className=\"w-4 h-4 rounded border-gray-300\" title=\"전체 선택\" />\n              </th>\n              <th className=\"px-2 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-24\">\n                건 축 주\n              </th>\n              <th className=\"px-2 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-52\">\n                내&nbsp;&nbsp;&nbsp;&nbsp;용\n              </th>\n              <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-24\">\n                작 업 장\n              </th>\n              <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-28\">\n                프로젝트\n              </th>\n              <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider w-20 whitespace-nowrap\">\n카테고리\n              </th>\n              <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider w-32 whitespace-nowrap\">\n단가/수량\n              </th>\n              <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider w-16\">\n                상&nbsp;&nbsp;&nbsp;&nbsp;태\n              </th>\n              <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider w-24\">\n                날&nbsp;&nbsp;&nbsp;&nbsp;짜\n              </th>\n              <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 uppercase tracking-wider w-20\">\n                작&nbsp;&nbsp;&nbsp;&nbsp;업\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n            {_props.v2}\n          </tbody>\n        </table>\n      </div>\n    </div>, {\n  name: \"WorkItemsTable_1\",\n  portals: [\"v2\"]\n});\nconst WorkItemsTable = function WorkItemsTable({\n  items,\n  selection,\n  format,\n  getLaborCost,\n  getCategoryColor,\n  onEdit,\n  onDelete,\n  onCreateInvoice\n}: Props) {\n  return /*@million jsx-skip*/<WorkItemsTable_1 v0={e => selection.toggleAll(e.target.checked)} v1={selection.selected.length > 0 && selection.selected.length === items.length} v2={items.map((item, idx) => <tr key={`${item.id}-${idx}`} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                <td className=\"px-3 py-4 whitespace-nowrap\">\n                  <input id={`workitem-select-${item.id}`} name={`workitem-select-${item.id}`} type=\"checkbox\" checked={selection.selected.includes(item.id)} onChange={e => selection.toggleOne(item.id, e.target.checked)} className=\"w-4 h-4 rounded border-gray-300\" title=\"항목 선택\" />\n                </td>\n                <td className=\"px-2 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate w-16\">{item.clientName}</div>\n                </td>\n                <td className=\"px-2 py-3 w-52\">\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">{item.name}</div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">{item.description}</div>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-gray-100 truncate w-24\">{item.workplaceName}</div>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap\">\n                  <div className=\"text-sm text-gray-900 dark:text-gray-100 truncate w-28\">{item.projectName}</div>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getCategoryColor(item.category)}`}>\n                    {item.category}\n                  </span>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap w-32 text-right\">\n                  {(() => {\n        const priceRaw = Number(item.defaultPrice);\n        const qtyRaw = Number(item.quantity);\n        const price = Number.isFinite(priceRaw) ? priceRaw : 0;\n        const qty = Number.isFinite(qtyRaw) ? qtyRaw : 1;\n        const laborCost = getLaborCost(item);\n        const line = price * qty + laborCost;\n        return <>\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{format(price)}원</div>\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">× {qty} {item.unit}</div>\n                        {laborCost > 0 && <div className=\"text-xs text-indigo-600 dark:text-indigo-400\">+ 인건비 {format(laborCost)}원</div>}\n                        <div className=\"text-xs text-gray-700 dark:text-gray-200 font-medium\">{format(line)}원</div>\n                      </>;\n      })()}\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap w-16\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${item.status === '완료' ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-400' : item.status === '진행중' ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-400' : item.status === '보류' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-400' : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-400'}`}>\n                    {item.status}\n                  </span>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap w-24\">\n                  <div className=\"text-sm text-gray-900 dark:text-gray-100\">{item.date}</div>\n                </td>\n                <td className=\"px-3 py-3 whitespace-nowrap text-sm font-medium w-24\">\n                  <div className=\"flex\">\n                    <Tooltip label=\"편집\">\n                      <button onClick={() => onEdit(item)} className=\"text-blue-600 dark:text-blue-400 hover:text-blue-900 dark:hover:text-blue-300 mx-2\" title=\"작업 항목 편집\">✏️</button>\n                    </Tooltip>\n                    <Tooltip label=\"삭제\">\n                      <button onClick={() => onDelete(item.id)} className=\"text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300 mx-2\" title=\"작업 항목 삭제\">🗑️</button>\n                    </Tooltip>\n                    {item.status === '완료' && <Tooltip label=\"청구서 생성\">\n                        <button onClick={() => onCreateInvoice(item)} className=\"text-green-600 dark:text-green-400 hover:text-green-900 dark:hover:text-green-300 mx-2\" title=\"청구서 생성\">🧾</button>\n                      </Tooltip>}\n                  </div>\n                </td>\n              </tr>)} />;\n};\nimport { block as _block } from \"million/react\";\nimport Tooltip from '../Tooltip';\nimport type { WorkItem } from '../../types/domain';\nimport type { Id } from '../../hooks/useSelection';\ntype Selection = {\n  selected: Id[];\n  toggleAll: (checked: boolean) => void;\n  toggleOne: (id: Id, checked: boolean) => void;\n};\ntype Props = {\n  items: WorkItem[];\n  selection: Selection;\n  format: (n: number) => string;\n  getLaborCost: (item: WorkItem) => number;\n  getCategoryColor: (category?: string) => string;\n  onEdit: (item: WorkItem) => void;\n  onDelete: (id: Id) => void;\n  onCreateInvoice: (item: WorkItem) => void;\n};\nexport default WorkItemsTable;","import { useRef } from 'react';\nimport type { Client, WorkItem } from '../../types/domain';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { useNumberFormat } from '../../hooks/useNumberFormat';\nimport { useClientWorkplaces } from '../../hooks/useClientWorkplaces';\ntype Props = {\n  open: boolean;\n  editingItem: WorkItem | null;\n  newItem: WorkItem;\n  clients: Client[];\n  units: string[];\n  categories: string[];\n  statuses: string[];\n  onChangeField: (name: string, value: string) => void;\n  onCancel: () => void;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n};\nexport default function ItemFormModal({\n  open,\n  editingItem,\n  newItem,\n  clients,\n  units,\n  categories,\n  statuses,\n  onChangeField,\n  onCancel,\n  onSubmit\n}: Props) {\n  const {\n    getClientWorkplaces\n  } = useClientWorkplaces();\n  const {\n    format\n  } = useNumberFormat();\n  const cal = useCalendar({\n    value: newItem?.date ?? '',\n    onChange: d => onChangeField('date', d)\n  });\n  const calRef = useRef<HTMLDivElement>(null);\n  if (open !== true) return null;\n  return <div className=\"fixed inset-0 bg-gray-800/50 dark:bg-gray-900/70 backdrop-blur-sm overflow-y-auto h-full w-full z-50\">\n      <div className=\"relative top-8 mx-auto w-[980px] max-w-[95vw] shadow-2xl rounded-2xl bg-white/80 dark:bg-gray-800/90 ring-1 ring-black/5 dark:ring-white/10 mb-8\">\n        <div className=\"rounded-t-2xl bg-gradient-to-br from-indigo-50 via-purple-50 to-white dark:from-indigo-900/30 dark:via-purple-900/30 dark:to-gray-800 px-8 pt-5 pb-3\">\n          <div className=\"text-center\">\n            <h3 className=\"text-2xl font-extrabold tracking-tight text-indigo-600 dark:text-indigo-400\">{editingItem !== null ? '작업 항목 편집' : '새 작업 항목 추가'}</h3>\n            <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">새로운 건설 작업 항목을 등록하고 관리하세요</p>\n          </div>\n        </div>\n        <div className=\"px-6 pb-6 pt-3\">\n          <form id=\"work-item-form\" onSubmit={onSubmit} className=\"space-y-4\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n              <div className=\"flex items-center mb-3 gap-3\">\n                <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400\">🏗️</span>\n                <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">기본 정보</h4>\n              </div>\n              <div className=\"grid grid-cols-2 gap-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300\">건축주</label>\n                  <select name=\"clientId\" value={String(newItem.clientId ?? '')} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                    <option value=\"\">건축주 선택</option>\n                    {clients.map(c => <option key={c.id} value={String(c.id)}>{c.name}</option>)}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300\">작업장</label>\n                  {(() => {\n                  const hasClient = String(newItem.clientId ?? '') !== '';\n                  return <select name=\"workplaceId\" value={String(newItem.workplaceId ?? '')} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\" required disabled={!hasClient}>\n                        <option value=\"\">{hasClient ? '작업장 선택' : '작업장 선택(먼저 건축주를 선택하세요)'}</option>\n                        {hasClient && getClientWorkplaces(newItem.clientId).map(wp => <option key={wp.id} value={String(wp.id)}>{wp.name} - {wp.address}</option>)}\n                      </select>;\n                })()}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-3 mt-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300\">프로젝트명</label>\n                  {(() => {\n                  const selectedClient = clients.find(c => String(c.id) === String(newItem.clientId));\n                  const projects: string[] = selectedClient !== undefined && Array.isArray(selectedClient.projects) ? selectedClient.projects : [];\n                  const hasProjects = Array.isArray(projects) && projects.length > 0;\n                  return hasProjects ? <select name=\"projectName\" value={newItem.projectName ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                        <option value=\"\">프로젝트 선택</option>\n                        {projects.map(proj => <option key={proj} value={proj}>{proj}</option>)}\n                      </select> : <input type=\"text\" name=\"projectName\" value={newItem.projectName ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} placeholder=\"프로젝트명 입력\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />;\n                })()}\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300\">카테고리</label>\n                  <select name=\"category\" value={newItem.category ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                    <option value=\"\">카테고리 선택</option>\n                    {categories.map(cat => <option key={cat} value={cat}>{cat}</option>)}\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n              <div className=\"flex items-center mb-3 gap-3\">\n                <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-green-50 dark:bg-green-900/30 text-green-600 dark:text-green-400\">🛠️</span>\n                <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">작업 정보</h4>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">작업일자</label>\n                <div className=\"mt-1 relative inline-block\" ref={calRef}>\n                  <div className=\"flex items-center gap-2\">\n                    <input type=\"text\" name=\"date\" value={newItem?.date ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} placeholder=\"YYYY-MM-DD\" inputMode=\"numeric\" className=\"block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 placeholder-gray-400\" onFocus={() => cal.setOpen(true)} required />\n                    <button type=\"button\" className=\"px-2 py-2 text-gray-600 hover:text-gray-800\" onClick={() => cal.setOpen(v => !v)} title=\"달력 열기\">📅</button>\n                  </div>\n                  {cal.open && <div className=\"absolute z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg mt-2 p-3\" style={{\n                  transform: 'scale(1)',\n                  transformOrigin: 'top left'\n                }}>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <button type=\"button\" className=\"px-2 py-1 text-sm border dark:border-gray-600 rounded text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={cal.prevMonth}>◀</button>\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{cal.month.getFullYear()}년 {cal.month.getMonth() + 1}월</div>\n                        <button type=\"button\" className=\"px-2 py-1 text-sm border dark:border-gray-600 rounded text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={cal.nextMonth}>▶</button>\n                      </div>\n                      <table className=\"text-xs select-none\">\n                        <thead>\n                          <tr className=\"text-left text-gray-600 dark:text-gray-400\">{['일', '월', '화', '수', '목', '금', '토'].map((d, idx) => {\n                          const SUN = 0; // eslint-disable-line no-magic-numbers\n                          const SAT = 6; // eslint-disable-line no-magic-numbers\n                          return <th key={d} className={`px-2 py-1 ${idx === SUN ? 'text-red-600' : idx === SAT ? 'text-blue-600' : ''}`}>{d}</th>;\n                        })}</tr>\n                        </thead>\n                        <tbody>{cal.getCalendarGrid().map((row, idx) => <tr key={idx} className=\"text-left\">{row.map((d, i2) => {\n                          const clickable = typeof d === 'number' && d !== 0 && !Number.isNaN(d);\n                          const SUN = 0; // eslint-disable-line no-magic-numbers\n                          const SAT = 6; // eslint-disable-line no-magic-numbers\n                          const dayColor = i2 === SUN ? 'text-red-600' : i2 === SAT ? 'text-blue-600' : '';\n                          return <td key={i2} className={`px-2 py-1 ${dayColor} ${clickable ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`} onClick={() => {\n                            if (clickable) cal.pickDate(d as number);\n                          }}>\n                                {clickable ? d : ''}\n                              </td>;\n                        })}</tr>)}</tbody>\n                      </table>\n                    </div>}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-3 mt-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">내용</label>\n                  <input type=\"text\" name=\"name\" value={newItem.name ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">세부 작업</label>\n                  <input type=\"text\" name=\"description\" value={newItem.description ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-4 gap-3 mt-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">수량</label>\n                  <input type=\"text\" name=\"quantity\" value={newItem.quantity ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 1\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">단위</label>\n                  <select name=\"unit\" value={newItem.unit ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\n                    <option value=\"\">단위 선택</option>\n                    {units.map(u => <option key={u} value={u}>{u}</option>)}\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">단가</label>\n                  <input type=\"text\" name=\"defaultPrice\" value={(() => {\n                  const val = newItem.defaultPrice;\n                  if (val === null || val === undefined) return '';\n                  const num = Number(val);\n                  return Number.isFinite(num) ? format(num) : String(val);\n                })()} onChange={e => onChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 200,000\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">합계</label>\n                  <div className=\"mt-1 w-full bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-700 rounded px-3 py-2 text-sm font-semibold text-green-900 dark:text-green-300\">{(() => {\n                    const pRaw = newItem.defaultPrice;\n                    const qRaw = newItem.quantity;\n                    const pNum = Number(pRaw);\n                    const qNum = Number(qRaw);\n                    const p = Number.isFinite(pNum) ? pNum : 0;\n                    const q = Number.isFinite(qNum) ? qNum : 1;\n                    return `${format(p * q)}원`;\n                  })()}</div>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-3 mt-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부 인원</label>\n                  <input type=\"text\" name=\"laborPersons\" value={String(newItem.laborPersons ?? '')} onChange={e => onChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 3\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부 단가</label>\n                  <input type=\"text\" name=\"laborUnitRate\" value={typeof newItem.laborUnitRate === 'number' ? format(newItem.laborUnitRate) : ''} onChange={e => onChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 250,000\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부임 합계</label>\n                  <div className=\"mt-1 w-full bg-indigo-50 dark:bg-indigo-900/30 border border-indigo-200 dark:border-indigo-700 rounded px-3 py-2 text-sm font-semibold text-indigo-900 dark:text-indigo-300\">{(() => {\n                    const persons = Number(newItem.laborPersons ?? 0);\n                    const rate = Number(newItem.laborUnitRate ?? 0);\n                    const p = Number.isFinite(persons) ? persons : 0;\n                    const r = Number.isFinite(rate) ? rate : 0;\n                    return `${format(p * r)}원`;\n                  })()}</div>\n                </div>\n              </div>\n\n              <div className=\"mt-3\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">비고</label>\n                <input type=\"text\" name=\"notes\" value={newItem.notes ?? ''} onChange={e => onChangeField(e.target.name, e.target.value)} placeholder=\"추가 메모나 특이사항을 입력하세요\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n              </div>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n              <div className=\"flex justify-between items-center\">\n                <div className=\"flex-1\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">상태</label>\n                  <div className=\"flex flex-wrap gap-1.5\">\n                    {statuses.map(s => {\n                    const active = newItem.status === s;\n                    const classes = active ? 'bg-indigo-600 dark:bg-indigo-500 text-white border-transparent shadow' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600';\n                    return <button key={s} type=\"button\" onClick={() => onChangeField('status', s)} className={`px-3 py-1.5 rounded-full text-sm transition ${classes}`} aria-pressed={active}>{s}</button>;\n                  })}\n                  </div>\n                </div>\n                <div className=\"ml-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 text-right\">총합계 금액</label>\n                  <div className=\"bg-blue-600 dark:bg-blue-700 text-white rounded-lg px-4 py-2 text-base font-bold shadow-md\">{(() => {\n                    const pRaw = newItem.defaultPrice;\n                    const qRaw = newItem.quantity;\n                    const pNum = Number(pRaw);\n                    const qNum = Number(qRaw);\n                    const p = Number.isFinite(pNum) ? pNum : 0;\n                    const q = Number.isFinite(qNum) ? qNum : 1;\n                    const laborPersons = Number(newItem.laborPersons ?? 0);\n                    const laborRate = Number(newItem.laborUnitRate ?? 0);\n                    const lp = Number.isFinite(laborPersons) ? laborPersons : 0;\n                    const lr = Number.isFinite(laborRate) ? laborRate : 0;\n                    const laborCost = lp * lr;\n                    const total = p * q + laborCost;\n                    return `${format(total)}원`;\n                  })()}</div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        {/* Sticky 버튼 영역 */}\n        <div className=\"sticky bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700 px-6 py-4 rounded-b-2xl shadow-lg\">\n          <div className=\"flex justify-end space-x-3\">\n            <button type=\"button\" onClick={onCancel} className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition font-medium\">\n              취소\n            </button>\n            <button type=\"submit\" form=\"work-item-form\" className=\"px-6 py-2.5 rounded-lg bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white shadow-md transition font-bold\">\n              {editingItem !== null ? '수정' : '추가'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>;\n}","import { useRef } from 'react';\nimport type { Client, WorkItem } from '../../types/domain';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { useNumberFormat } from '../../hooks/useNumberFormat';\nimport { useClientWorkplaces } from '../../hooks/useClientWorkplaces';\nimport { useProjects } from '../../hooks/useProjects';\ntype BulkItem = Partial<WorkItem> & {\n  status?: string;\n};\ntype Props = {\n  open: boolean;\n  clients: Client[];\n  categories: string[];\n  units: string[];\n  bulkItems: BulkItem[];\n  bulkBaseInfo: {\n    clientId: string | number;\n    workplaceId: string | number;\n    projectName: string;\n    date?: string;\n    bulkLaborPersons?: string | number;\n    bulkLaborUnitRate?: string | number;\n  };\n  showBulkCustomProject: boolean;\n  statuses: string[];\n  onBaseInfoChangeField: (name: string, value: string) => void;\n  onItemChange: (index: number, field: string, value: string) => void;\n  onAddItem: () => void;\n  onRemoveItem: (index: number) => void;\n  onCancel: () => void;\n  onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n};\nexport default function BulkFormModal({\n  open,\n  clients,\n  categories,\n  units,\n  bulkItems,\n  bulkBaseInfo,\n  showBulkCustomProject,\n  statuses,\n  onBaseInfoChangeField,\n  onItemChange,\n  onAddItem,\n  onRemoveItem,\n  onCancel,\n  onSubmit\n}: Props) {\n  const {\n    getClientWorkplaces\n  } = useClientWorkplaces();\n  const {\n    getClientProjects\n  } = useProjects();\n  const {\n    format\n  } = useNumberFormat();\n  const cal = useCalendar({\n    value: bulkBaseInfo?.date ?? '',\n    onChange: d => onBaseInfoChangeField('date', d)\n  });\n  const calRef = useRef<HTMLDivElement>(null);\n  if (open !== true) return null;\n  return <div className=\"fixed inset-0 bg-gray-800/50 dark:bg-gray-900/70 backdrop-blur-sm overflow-y-auto h-full w-full z-50\">\n      <div className=\"relative top-6 mx-auto w-[1100px] max-w-[96vw] shadow-2xl rounded-2xl bg-white/80 dark:bg-gray-800/90 ring-1 ring-black/5 dark:ring-white/10 mb-8\">\n        <div className=\"rounded-t-2xl bg-gradient-to-br from-indigo-50 via-purple-50 to-white dark:from-indigo-900/30 dark:via-purple-900/30 dark:to-gray-800 px-8 pt-8 pb-6 text-center\">\n          <h3 className=\"text-2xl font-extrabold tracking-tight text-indigo-600 dark:text-indigo-400\">일괄 작업 항목 추가</h3>\n          <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">여러 작업을 한 번에 등록합니다</p>\n        </div>\n        <div className=\"px-6 pb-6\">\n          <form id=\"bulk-work-item-form\" onSubmit={onSubmit} className=\"space-y-4\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n              <div className=\"flex items-center mb-3 gap-3\">\n                <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400\">📋</span>\n                <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">공통 정보</h4>\n              </div>\n              <div className=\"grid grid-cols-4 gap-3 mb-3\">\n                <div>\n                  <label htmlFor=\"bulk-client\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">건축주</label>\n                  <select id=\"bulk-client\" name=\"clientId\" autoComplete=\"organization\" value={String(bulkBaseInfo.clientId ?? '')} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                    <option value=\"\">건축주 선택</option>\n                    {clients.map(client => <option key={client.id} value={String(client.id)}>{client.name}</option>)}\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"bulk-workplace\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">작업장</label>\n                  {(() => {\n                  const hasClient = String(bulkBaseInfo.clientId ?? '') !== '';\n                  return <select id=\"bulk-workplace\" name=\"workplaceId\" autoComplete=\"off\" value={String(bulkBaseInfo.workplaceId ?? '')} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required disabled={!hasClient}>\n                        <option value=\"\">{hasClient ? '작업장 선택' : '작업장 선택(먼저 건축주를 선택하세요)'}</option>\n                        {hasClient && getClientWorkplaces(bulkBaseInfo.clientId).map(workplace => <option key={workplace.id} value={String(workplace.id)}>{workplace.name} - {workplace.address}</option>)}\n                      </select>;\n                })()}\n                </div>\n                <div>\n                  <label htmlFor=\"bulk-project\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">프로젝트명</label>\n                  {showBulkCustomProject !== true ? (() => {\n                  const hasClient = String(bulkBaseInfo.clientId ?? '') !== '';\n                  return <select id=\"bulk-project\" name=\"projectName\" autoComplete=\"off\" value={bulkBaseInfo.projectName} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required disabled={!hasClient}>\n                          <option value=\"\">프로젝트 선택</option>\n                          {hasClient && getClientProjects(bulkBaseInfo.clientId).map(project => <option key={project} value={project}>{project}</option>)}\n                          <option value=\"custom\">+ 새 프로젝트 입력</option>\n                        </select>;\n                })() : <div className=\"flex space-x-2\">\n                      <input id=\"bulk-project-custom\" type=\"text\" name=\"projectName\" autoComplete=\"off\" value={bulkBaseInfo.projectName} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} placeholder=\"새 프로젝트명 입력\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                      <button type=\"button\" onClick={() => onBaseInfoChangeField('projectName', '')} className=\"mt-1 px-2 py-2 text-gray-400 hover:text-gray-600\" aria-label=\"기존 프로젝트 선택으로 돌아가기\">↩</button>\n                    </div>}\n                </div>\n                <div>\n                  <label htmlFor=\"bulk-date\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">작업일자</label>\n                  <div className=\"mt-1 relative inline-block\" ref={calRef}>\n                    <div className=\"flex items-center gap-2\">\n                      <input id=\"bulk-date\" type=\"text\" name=\"date\" autoComplete=\"off\" value={bulkBaseInfo?.date ?? ''} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} placeholder=\"YYYY-MM-DD\" inputMode=\"numeric\" className=\"block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 placeholder-gray-400\" onFocus={() => cal.setOpen(true)} required />\n                      <button type=\"button\" className=\"px-2 py-2 text-gray-600 hover:text-gray-800\" onClick={() => cal.setOpen(v => !v)} aria-label=\"달력 열기\">📅</button>\n                    </div>\n                    {cal.open && <div className=\"absolute z-50 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg mt-2 p-3\" style={{\n                    transform: 'scale(1)',\n                    transformOrigin: 'top left'\n                  }}>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <button type=\"button\" className=\"px-2 py-1 text-sm border dark:border-gray-600 rounded text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={cal.prevMonth}>◀</button>\n                          <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">{cal.month.getFullYear()}년 {cal.month.getMonth() + 1}월</div>\n                          <button type=\"button\" className=\"px-2 py-1 text-sm border dark:border-gray-600 rounded text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\" onClick={cal.nextMonth}>▶</button>\n                        </div>\n                        <table className=\"text-xs select-none\">\n                          <thead>\n                            <tr className=\"text-left text-gray-600 dark:text-gray-400\">{['일', '월', '화', '수', '목', '금', '토'].map((d, idx) => {\n                            const SUN = 0; // eslint-disable-line no-magic-numbers\n                            const SAT = 6; // eslint-disable-line no-magic-numbers\n                            return <th key={d} className={`px-2 py-1 ${idx === SUN ? 'text-red-600' : idx === SAT ? 'text-blue-600' : ''}`}>{d}</th>;\n                          })}</tr>\n                          </thead>\n                          <tbody>{cal.getCalendarGrid().map((row, idx) => <tr key={idx} className=\"text-left\">{row.map((d, i2) => {\n                            const clickable = typeof d === 'number' && d !== 0 && !Number.isNaN(d);\n                            const SUN = 0; // eslint-disable-line no-magic-numbers\n                            const SAT = 6; // eslint-disable-line no-magic-numbers\n                            const dayColor = i2 === SUN ? 'text-red-600' : i2 === SAT ? 'text-blue-600' : '';\n                            return <td key={i2} className={`px-2 py-1 ${dayColor} ${clickable ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`} onClick={() => {\n                              if (clickable) cal.pickDate(d as number);\n                            }}>\n                                  {clickable ? d : ''}\n                                </td>;\n                          })}</tr>)}</tbody>\n                        </table>\n                      </div>}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-3\">\n                <div className=\"grid grid-cols-3 gap-3\">\n                  <div>\n                    <label htmlFor=\"bulk-labor-persons\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부 인원</label>\n                    <input id=\"bulk-labor-persons\" type=\"text\" name=\"bulkLaborPersons\" autoComplete=\"off\" value={bulkBaseInfo.bulkLaborPersons ?? ''} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 3\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                  </div>\n                  <div>\n                    <label htmlFor=\"bulk-labor-rate\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부 단가</label>\n                    <input id=\"bulk-labor-rate\" type=\"text\" name=\"bulkLaborUnitRate\" autoComplete=\"off\" value={(() => {\n                    const val = bulkBaseInfo.bulkLaborUnitRate;\n                    if (val === null || val === undefined || val === '') return '';\n                    const num = Number(val);\n                    return Number.isFinite(num) ? format(num) : String(val);\n                  })()} onChange={e => onBaseInfoChangeField(e.target.name, e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 250,000\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                  </div>\n                  <div>\n                    <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">인부임 합계</div>\n                    <div className=\"mt-1 w-full bg-indigo-50 dark:bg-indigo-900/30 border border-indigo-200 dark:border-indigo-700 rounded px-3 py-2 text-sm font-semibold text-indigo-900 dark:text-indigo-300\">{(() => {\n                      const persons = Number(bulkBaseInfo.bulkLaborPersons);\n                      const rate = Number(bulkBaseInfo.bulkLaborUnitRate);\n                      const p = Number.isFinite(persons) ? persons : 0;\n                      const r = Number.isFinite(rate) ? rate : 0;\n                      return `${format(p * r)}원`;\n                    })()}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 p-4\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <div className=\"flex items-center gap-3\">\n                  <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-green-50 dark:bg-green-900/30 text-green-600 dark:text-green-400\">🗂️</span>\n                  <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">작업 항목들</h4>\n                </div>\n                <button type=\"button\" onClick={onAddItem} className=\"text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 text-sm\">+ 항목 추가</button>\n              </div>\n\n              <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n                {bulkItems.map((item, index) => <div key={index} className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-700/50\">\n                    <div className=\"flex justify-between items-center mb-3\">\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">작업 항목 #{index + 1}</span>\n                      {bulkItems.length > 1 && <button type=\"button\" onClick={() => onRemoveItem(index)} className=\"text-red-600 dark:text-red-400 hover:text-red-800 dark:hover:text-red-300 text-sm\">삭제</button>}\n                    </div>\n\n                    {/* 1행: 내용, 카테고리, 세부작업 */}\n                    <div className=\"grid grid-cols-3 gap-3 mb-2\">\n                      <div>\n                        <label htmlFor={`bulk-item-name-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">내용</label>\n                        <input id={`bulk-item-name-${index}`} type=\"text\" name={`bulk-item-name-${index}`} autoComplete=\"off\" value={item.name ?? ''} onChange={e => onItemChange(index, 'name', e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                      </div>\n                      <div>\n                        <label htmlFor={`bulk-item-category-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">카테고리</label>\n                        <select id={`bulk-item-category-${index}`} name={`bulk-item-category-${index}`} autoComplete=\"off\" value={item.category ?? ''} onChange={e => onItemChange(index, 'category', e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                          <option value=\"\">카테고리 선택</option>\n                          {categories.map(cat => <option key={cat} value={cat}>{cat}</option>)}\n                        </select>\n                      </div>\n                      <div>\n                        <label htmlFor={`bulk-item-description-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">세부 작업</label>\n                        <input id={`bulk-item-description-${index}`} type=\"text\" name={`bulk-item-description-${index}`} autoComplete=\"off\" value={item.description ?? ''} onChange={e => onItemChange(index, 'description', e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                      </div>\n                    </div>\n\n                    {/* 2행: 수량, 단위, 단가, 합계 */}\n                    <div className=\"grid grid-cols-4 gap-3 mb-2\">\n                      <div>\n                        <label htmlFor={`bulk-item-quantity-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">수량</label>\n                        <input id={`bulk-item-quantity-${index}`} type=\"text\" name={`bulk-item-quantity-${index}`} autoComplete=\"off\" value={item.quantity ?? ''} onChange={e => onItemChange(index, 'quantity', e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 1\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                      </div>\n                      <div>\n                        <label htmlFor={`bulk-item-unit-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">단위</label>\n                        <select id={`bulk-item-unit-${index}`} name={`bulk-item-unit-${index}`} autoComplete=\"off\" value={item.unit ?? ''} onChange={e => onItemChange(index, 'unit', e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\">\n                          <option value=\"\">단위 선택</option>\n                          {units.map(u => <option key={u} value={u}>{u}</option>)}\n                        </select>\n                      </div>\n                      <div>\n                        <label htmlFor={`bulk-item-price-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">단가</label>\n                        <input id={`bulk-item-price-${index}`} type=\"text\" name={`bulk-item-price-${index}`} autoComplete=\"off\" value={(() => {\n                      const val = item.defaultPrice;\n                      if (val === null || val === undefined) return '';\n                      const num = Number(val);\n                      return Number.isFinite(num) ? format(num) : String(val);\n                    })()} onChange={e => onItemChange(index, 'defaultPrice', e.target.value)} onFocus={e => e.target.select()} placeholder=\"예: 200,000\" className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                      </div>\n                      <div>\n                        <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">합계</div>\n                        <div className=\"mt-1 w-full bg-green-50 dark:bg-green-900/30 border border-green-200 dark:border-green-700 rounded px-3 py-2 text-sm font-semibold text-green-900 dark:text-green-300\">{(() => {\n                        const pRaw = item.defaultPrice;\n                        const qRaw = item.quantity;\n                        const pNum = Number(pRaw);\n                        const qNum = Number(qRaw);\n                        const p = Number.isFinite(pNum) ? pNum : 0;\n                        const q = Number.isFinite(qNum) ? qNum : 1;\n                        const total = p * q;\n                        return `${format(total)}원`;\n                      })()}</div>\n                      </div>\n                    </div>\n\n                    {/* 3행: 비고 */}\n                    <div className=\"mb-3\">\n                      <label htmlFor={`bulk-item-notes-${index}`} className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">비고</label>\n                      <input id={`bulk-item-notes-${index}`} type=\"text\" name={`bulk-item-notes-${index}`} autoComplete=\"off\" value={item.notes ?? ''} onChange={e => onItemChange(index, 'notes', e.target.value)} className=\"mt-1 block w-full border border-gray-200 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                    </div>\n\n                    {/* 상태 및 총합계 */}\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex-1\">\n                        <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">상태</div>\n                        <div className=\"flex flex-wrap gap-1.5\" role=\"group\" aria-label={`작업 항목 ${index + 1} 상태 선택`}>\n                          {statuses.map(s => {\n                        const active = item.status === s;\n                        const classes = active ? 'bg-indigo-600 dark:bg-indigo-500 text-white border-transparent shadow' : 'bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-500 hover:bg-gray-200 dark:hover:bg-gray-500';\n                        return <button key={s} type=\"button\" onClick={() => onItemChange(index, 'status', s)} className={`px-2.5 py-1 rounded-full text-xs transition ${classes}`} aria-pressed={active}>{s}</button>;\n                      })}\n                        </div>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 text-right\">총합계 금액</div>\n                        <div className=\"bg-blue-600 dark:bg-blue-700 text-white rounded-lg px-4 py-2 text-base font-bold shadow-md\">{(() => {\n                        const pRaw = item.defaultPrice;\n                        const qRaw = item.quantity;\n                        const pNum = Number(pRaw);\n                        const qNum = Number(qRaw);\n                        const p = Number.isFinite(pNum) ? pNum : 0;\n                        const q = Number.isFinite(qNum) ? qNum : 1;\n                        const laborPersons = Number(bulkBaseInfo.bulkLaborPersons);\n                        const laborRate = Number(bulkBaseInfo.bulkLaborUnitRate);\n                        const lp = Number.isFinite(laborPersons) ? laborPersons : 0;\n                        const lr = Number.isFinite(laborRate) ? laborRate : 0;\n                        const laborCost = lp * lr;\n                        const total = p * q + laborCost;\n                        return `${format(total)}원`;\n                      })()}</div>\n                      </div>\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n          </form>\n        </div>\n\n        {/* Sticky 버튼 영역 */}\n        <div className=\"sticky bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700 px-6 py-4 rounded-b-2xl shadow-lg\">\n          <div className=\"flex justify-end space-x-3\">\n            <button type=\"button\" onClick={onCancel} className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition font-medium\">\n              취소\n            </button>\n            <button type=\"submit\" form=\"bulk-work-item-form\" className=\"px-6 py-2.5 rounded-lg bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white shadow-md transition font-bold\">\n              {bulkItems.length}개 항목 일괄 추가\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>;\n}","import { useApp } from '../contexts/AppContext';\nimport type { WorkItem, Client } from '../types/domain';\n\nexport function useProjects() {\n  const { workItems, clients } = useApp();\n\n  const getClientProjects = (clientId?: number | string): string[] => {\n    if (clientId == null || (typeof clientId === 'string' && clientId.trim() === '')) return [];\n    const parsed = typeof clientId === 'string' ? parseInt(clientId, 10) : clientId;\n    const cid = Number.isFinite(parsed) ? parsed : null;\n    if (cid === null) return [];\n    const fromWorkItems = (workItems as WorkItem[])\n      .filter(item => item.clientId === cid)\n      .map(item => item.projectName)\n      .filter((s): s is string => typeof s === 'string' && s.trim() !== '');\n    const client = (clients as Client[]).find(c => c.id === cid);\n    const clientProjects: string[] = (client !== undefined && Array.isArray(client.projects)) ? client.projects : [];\n    const clientWorkplaces = (client !== undefined && Array.isArray(client.workplaces)) ? client.workplaces : [];\n    const fromClientProjects = clientProjects\n      .filter((s): s is string => typeof s === 'string' && s.trim() !== '');\n    const fromWorkplaces = clientWorkplaces\n      .map(wp => wp.description)\n      .filter((s): s is string => typeof s === 'string' && s.trim() !== '');\n    return Array.from(new Set([...fromWorkItems, ...fromClientProjects, ...fromWorkplaces]));\n  };\n\n  const getAllProjects = (): string[] => {\n    const all = Array.from(new Set((workItems as WorkItem[])\n      .map(i => i.projectName)\n      .filter((s): s is string => typeof s === 'string' && s.trim() !== '')));\n    return all.sort();\n  };\n\n  return { getClientProjects, getAllProjects };\n}\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst WorkItems_1 = _compiledBlock(_props => <div className=\"p-2 md:p-3\">\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2\">작업 항목 관리</h1>\n            <p className=\"text-gray-600 dark:text-gray-300\">작업 항목을 관리하고 진행을 확인하세요</p>\n          </div>\n          <div className=\"flex space-x-2\">\n            <button onClick={_props.v0} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm text-gray-700 dark:text-gray-300\">\n              <span className=\"text-gray-500 dark:text-gray-400 mr-2\">📁</span>\n              <span className=\"text-xs font-semibold\">템플릿 다운로드</span>\n            </button>\n            <button onClick={_props.v1} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm text-gray-700 dark:text-gray-300\">\n              <span className=\"text-blue-500 mr-2\">📤</span>\n              <span className=\"text-xs font-semibold\">Excel 가져오기</span>\n            </button>\n            <button onClick={_props.v2} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm text-gray-700 dark:text-gray-300\">\n              <span className=\"text-green-500 mr-2\">📥</span>\n              <span className=\"text-xs font-semibold\">Excel 내보내기</span>\n            </button>\n            <button onClick={_props.v3} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm text-gray-700 dark:text-gray-300\">\n              <span className=\"text-purple-500 mr-2\">📋</span>\n              <span className=\"text-xs font-semibold\">일괄 작업 항목 추가</span>\n            </button>\n            <button onClick={_props.v4} className=\"flex items-center justify-center px-4 py-2.5 bg-indigo-600 text-white rounded-full shadow-lg\">\n              <span className=\"text-yellow-300 mr-2\">✨</span>\n              <span className=\"text-xs font-bold\">새 작업 항목</span>\n            </button>\n          </div>\n        </div>\n        {_props.v5}\n      </div>\n\n      {_props.v6}\n\n      {_props.v7}\n\n      {_props.v8}\n\n      {_props.v9}\n\n      {_props.v10}\n\n      {_props.v11}\n      {_props.v12}\n    </div>, {\n  name: \"WorkItems_1\",\n  portals: [\"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\", \"v11\", \"v12\"]\n});\nconst WorkItems = function WorkItems() {\n  const {\n    clients,\n    setClients,\n    workItems,\n    setWorkItems,\n    invoices,\n    setInvoices,\n    units,\n    categories\n  } = useApp();\n  const {\n    format,\n    parse\n  } = useNumberFormat();\n  const {\n    getClientWorkplaces\n  } = useClientWorkplaces();\n  // const { getAllProjects } = useProjects();\n\n  const [selectedClient, setSelectedClient] = useState<string>('');\n  const [selectedProject, setSelectedProject] = useState<string>('');\n  const [bulkStatus, setBulkStatus] = useState<string>('');\n  const [showConfirmBulkDelete, setShowConfirmBulkDelete] = useState<boolean>(false);\n  const [pendingDeleteId, setPendingDeleteId] = useState<Id | null>(null);\n  const [showItemModal, setShowItemModal] = useState<boolean>(false);\n  const [editingItem, setEditingItem] = useState<WorkItem | null>(null);\n  const [showBulkModal, setShowBulkModal] = useState<boolean>(false);\n  const [showBulkCustomProject, setShowBulkCustomProject] = useState<boolean>(false);\n  const [bulkItems, setBulkItems] = useState<BulkItem[]>([{\n    name: '',\n    category: '',\n    defaultPrice: '' as unknown as number,\n    quantity: '' as unknown as number,\n    unit: '',\n    description: '',\n    status: '예정',\n    notes: '',\n    laborPersons: '',\n    laborUnitRate: ''\n  }]);\n  const [bulkBaseInfo, setBulkBaseInfo] = useState<{\n    clientId: string | number;\n    workplaceId: string | number;\n    projectName: string;\n    date: string;\n    bulkLaborPersons: string | number;\n    bulkLaborUnitRate: string | number;\n  }>({\n    clientId: '',\n    workplaceId: '',\n    projectName: '',\n    date: new Date().toISOString().split('T')[0],\n    bulkLaborPersons: '',\n    bulkLaborUnitRate: ''\n  });\n  const defaultNewItem: NewItem = {\n    id: 0,\n    clientId: '' as unknown as number,\n    clientName: '',\n    workplaceId: '' as unknown as number,\n    workplaceName: '',\n    projectName: '',\n    name: '',\n    category: '',\n    defaultPrice: '' as unknown as number,\n    quantity: '' as unknown as number,\n    unit: '',\n    description: '',\n    status: '예정',\n    notes: '',\n    date: new Date().toISOString().split('T')[0],\n    laborPersons: '',\n    laborUnitRate: '',\n    laborPersonsGeneral: '',\n    laborUnitRateGeneral: ''\n  };\n  const [newItem, setNewItem] = useState<NewItem>(defaultNewItem);\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const filteredWorkItems = useMemo(() => {\n    return workItems.filter(item => {\n      if (selectedClient !== '' && item.clientId !== parseInt(selectedClient)) return false;\n      if (selectedProject !== '' && item.projectName !== selectedProject) return false;\n      return true;\n    });\n  }, [workItems, selectedClient, selectedProject]);\n  const visibleIds = useMemo<Id[]>(() => filteredWorkItems.map(i => i.id), [filteredWorkItems]);\n  const selection = useSelection(visibleIds);\n  const getLaborCost = (item: WorkItem): number => {\n    const skilledPersons = parseInt(String(item?.laborPersons ?? 0), 10);\n    const skilledRate = parseInt(String(item?.laborUnitRate ?? 0), 10);\n    const generalPersons = parseInt(String(item?.laborPersonsGeneral ?? 0), 10);\n    const generalRate = parseInt(String(item?.laborUnitRateGeneral ?? 0), 10);\n    const skilledCost = Number.isFinite(skilledPersons) && skilledPersons !== 0 ? skilledPersons * skilledRate : 0;\n    const generalCost = Number.isFinite(generalPersons) && generalPersons !== 0 ? generalPersons * generalRate : 0;\n    return skilledCost + generalCost;\n  };\n  const getClientProjects = (clientId?: number | string): string[] => {\n    if (clientId === undefined || clientId === null || clientId === '') return [];\n    const cid = parseInt(String(clientId));\n    const fromWorkItems = workItems.filter(item => item.clientId === cid).map(item => item.projectName ?? '').filter((name): name is string => name !== '');\n    const client = clients.find(c => Number(c.id) === cid);\n    const fromClientProjects = (client?.projects ?? []).filter((p): p is string => p !== '' && p !== null && p !== undefined);\n    const fromWorkplaces = (client?.workplaces ?? []).map(wp => wp.description ?? '').filter((desc): desc is string => desc !== '');\n    return Array.from(new Set([...fromWorkItems, ...fromClientProjects, ...fromWorkplaces]));\n  };\n  const getCategoryColor = (category?: string): string => {\n    const colors: Record<string, string> = {\n      '토목공사': 'bg-brown-100 text-brown-800 dark:bg-brown-900/30 dark:text-brown-300',\n      '구조공사': 'bg-gray-100 text-gray-800 dark:bg-gray-700/30 dark:text-gray-300',\n      '철거공사': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',\n      '마감공사': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',\n      '설비공사': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300',\n      '내부공사': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',\n      '기타': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300'\n    };\n    if (category !== undefined && category !== null && category !== '') {\n      return colors[category] ?? 'bg-gray-100 text-gray-800 dark:bg-gray-700/30 dark:text-gray-300';\n    }\n    return 'bg-gray-100 text-gray-800 dark:bg-gray-700/30 dark:text-gray-300';\n  };\n  const handleEdit = (item: WorkItem) => {\n    setEditingItem(item);\n    setNewItem({\n      ...item\n    });\n    setShowItemModal(true);\n  };\n  const handleDelete = (id: Id) => setPendingDeleteId(id);\n  const confirmDeleteSingle = async () => {\n    if (pendingDeleteId == null) return;\n\n    // UI에서 즉시 제거\n    setWorkItems(prev => prev.filter(i => i.id !== pendingDeleteId));\n    setPendingDeleteId(null);\n\n    // Supabase에서도 즉시 삭제\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('work_items').delete().eq('work_item_id', pendingDeleteId);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const toInvoiceItem = (wi: WorkItem) => {\n    const DEFAULT_QUANTITY = 1;\n    const qty = typeof wi.quantity === 'number' && wi.quantity > 0 ? wi.quantity : DEFAULT_QUANTITY;\n    const unitPrice = typeof wi.defaultPrice === 'number' ? wi.defaultPrice : 0;\n\n    // 통합 인부임 계산 (laborPersons * laborUnitRate)\n    const persons = parseInt(String(wi.laborPersons ?? 0), 10);\n    const rate = parseInt(String(wi.laborUnitRate ?? 0), 10);\n    const personsNum = Number.isFinite(persons) && !isNaN(persons) ? persons : 0;\n    const rateNum = Number.isFinite(rate) && !isNaN(rate) ? rate : 0;\n    const laborCost = personsNum * rateNum;\n\n    // 레거시 필드도 읽어서 포함 (기존 데이터 호환성)\n    const lpg = parseInt(String(wi.laborPersonsGeneral ?? 0), 10);\n    const lrg = parseInt(String(wi.laborUnitRateGeneral ?? 0), 10);\n    const lpgNum = Number.isFinite(lpg) && !isNaN(lpg) ? lpg : 0;\n    const lrgNum = Number.isFinite(lrg) && !isNaN(lrg) ? lrg : 0;\n    const legacyLaborCost = lpgNum * lrgNum;\n    const totalLaborCost = laborCost + legacyLaborCost;\n    return {\n      name: wi.name,\n      quantity: qty,\n      unit: wi.unit,\n      unitPrice,\n      total: qty * unitPrice + totalLaborCost,\n      notes: wi.notes ?? '',\n      date: wi.date ?? '',\n      // 상세/인부임 정보 보전\n      category: wi.category ?? '',\n      description: wi.description ?? '',\n      laborPersons: wi.laborPersons ?? '',\n      laborUnitRate: wi.laborUnitRate ?? '',\n      laborPersonsGeneral: wi.laborPersonsGeneral ?? '',\n      laborUnitRateGeneral: wi.laborUnitRateGeneral ?? ''\n    };\n  };\n  const handleCreateInvoice = async (workItem: WorkItem) => {\n    const INVOICE_ID_PADDING = 3;\n    const DAYS_UNTIL_DUE = 14;\n    const HOURS_PER_DAY = 24;\n    const MINUTES_PER_HOUR = 60;\n    const SECONDS_PER_MINUTE = 60;\n    const MS_PER_SECOND = 1000;\n\n    // clientId 유효성 검증\n    if (workItem.clientId === null || workItem.clientId === undefined || workItem.clientId === 0) {\n      alert('유효한 건축주 정보가 없습니다. 작업 항목에 건축주를 먼저 설정해주세요.');\n      return;\n    }\n    const completedItems = workItems.filter(i => i.clientId === workItem.clientId && Number(i.workplaceId) === Number(workItem.workplaceId) && i.projectName === workItem.projectName && i.status === '완료');\n    const unbilledItems = completedItems;\n    if (unbilledItems.length === 0) {\n      alert('청구 가능한 완료된 작업 항목이 없습니다.');\n      return;\n    }\n    const client = clients.find(c => Number(c.id) === workItem.clientId);\n    const workplace = client?.workplaces?.find(w => Number(w.id) === Number(workItem.workplaceId));\n    const newInvoiceId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(INVOICE_ID_PADDING, '0')}`;\n    const items = unbilledItems.map(toInvoiceItem);\n    const totalAmount = items.reduce((s, it) => s + (it.total !== 0 ? it.total : 0), 0);\n    const dueDateTime = Date.now() + DAYS_UNTIL_DUE * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE * MS_PER_SECOND;\n    const newInvoice = {\n      id: newInvoiceId,\n      clientId: workItem.clientId,\n      client: workItem.clientName ?? '',\n      workplaceId: typeof workItem.workplaceId === 'number' ? workItem.workplaceId : undefined,\n      project: workItem.projectName ?? '',\n      workplaceAddress: workplace?.address ?? '',\n      amount: totalAmount,\n      status: '발송대기' as const,\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(dueDateTime).toISOString().split('T')[0],\n      workItems: items\n    };\n\n    // 이전 상태 백업\n    const previousInvoices = [...invoices];\n\n    // UI 먼저 업데이트 (optimistic update)\n    const tempInvoice = {\n      ...newInvoice,\n      id: `TEMP-${Date.now()}`\n    };\n    setInvoices(prev => [...prev, tempInvoice]);\n\n    // Supabase INSERT\n    try {\n      const {\n        supabase,\n        getCurrentUserId\n      } = await import('../services/supabase');\n      if (supabase !== null && supabase !== undefined) {\n        const userId = await getCurrentUserId();\n\n        // Status 한글 → 영어 변환\n        const toDbStatus = (status: string): string => {\n          const statusMap: Record<string, string> = {\n            '발송대기': 'pending',\n            '발송됨': 'pending',\n            '미결제': 'overdue',\n            '결제완료': 'paid'\n          };\n          return statusMap[status] ?? 'pending';\n        };\n\n        // 1. Invoice 메인 데이터 INSERT\n        const {\n          data: invoiceData,\n          error: invoiceError\n        } = await supabase.from('invoices').insert({\n          user_id: userId,\n          invoice_number: newInvoiceId,\n          client_id: workItem.clientId,\n          workplace_id: workItem.workplaceId,\n          title: workItem.projectName ?? '',\n          date: newInvoice.date,\n          due_date: newInvoice.dueDate,\n          status: toDbStatus(newInvoice.status),\n          amount: totalAmount,\n          notes: ''\n        }).select('invoice_id').single();\n        if (invoiceError !== null && invoiceError !== undefined) {\n          alert(`청구서 생성 중 오류가 발생했습니다: ${invoiceError.message}`);\n          setInvoices(previousInvoices);\n          return;\n        }\n\n        // 2. Invoice Items INSERT\n        if (invoiceData !== null && invoiceData !== undefined && items.length > 0) {\n          const dbInvoiceItems = items.map((item, index) => ({\n            user_id: userId,\n            invoice_id: invoiceData.invoice_id,\n            category: item.category ?? '',\n            name: item.name,\n            description: item.description ?? '',\n            unit: item.unit ?? '',\n            quantity: item.quantity,\n            unit_price: item.unitPrice,\n            sort_order: index,\n            date: item.date !== null && item.date !== undefined && item.date !== '' ? item.date : null,\n            notes: item.notes !== null && item.notes !== undefined && item.notes !== '' ? item.notes : null,\n            labor_persons: typeof item.laborPersons === 'number' ? item.laborPersons : typeof item.laborPersons === 'string' && item.laborPersons !== '' ? Number(item.laborPersons) : 0,\n            labor_unit_rate: typeof item.laborUnitRate === 'number' ? item.laborUnitRate : typeof item.laborUnitRate === 'string' && item.laborUnitRate !== '' ? Number(item.laborUnitRate) : 0,\n            labor_persons_general: typeof item.laborPersonsGeneral === 'number' ? item.laborPersonsGeneral : typeof item.laborPersonsGeneral === 'string' && item.laborPersonsGeneral !== '' ? Number(item.laborPersonsGeneral) : 0,\n            labor_unit_rate_general: typeof item.laborUnitRateGeneral === 'number' ? item.laborUnitRateGeneral : typeof item.laborUnitRateGeneral === 'string' && item.laborUnitRateGeneral !== '' ? Number(item.laborUnitRateGeneral) : 0\n          }));\n          const {\n            error: itemsError\n          } = await supabase.from('invoice_items').insert(dbInvoiceItems);\n          if (itemsError !== null && itemsError !== undefined) {\n            alert(`청구서 항목 저장 중 오류가 발생했습니다: ${itemsError.message}`);\n            // Invoice는 생성되었으나 items 저장 실패 - 계속 진행\n          }\n        }\n\n        // 실제 ID로 UI 업데이트\n        setInvoices(prev => prev.map(inv => inv.id === tempInvoice.id ? {\n          ...newInvoice,\n          id: newInvoiceId\n        } : inv));\n        alert(`청구서 ${newInvoiceId}가 생성되었습니다.`);\n      }\n    } catch (err) {\n      alert(`청구서 생성 실패: ${String(err)}`);\n      setInvoices(previousInvoices);\n    }\n  };\n  const onChangeField = (name: string, value: string) => {\n    let v: unknown = value;\n    if (['defaultPrice', 'quantity', 'laborPersons', 'laborUnitRate', 'laborPersonsGeneral', 'laborUnitRateGeneral'].includes(name)) {\n      const digits = String(value).replace(/[^\\d-]/g, '');\n      v = digits === '' || digits === '-' ? '' : parse(digits);\n    } else if (['clientId', 'workplaceId'].includes(name)) {\n      const parsedValue = parseInt(String(value));\n      v = parsedValue !== 0 ? parsedValue : 0;\n    }\n    setNewItem(prev => ({\n      ...prev,\n      [name]: v\n    }) as NewItem);\n  };\n\n  // Bulk Modal handlers\n  const onBaseInfoChangeField = (name: string, value: string) => {\n    let v: unknown = value;\n    if (name === 'clientId' || name === 'workplaceId') {\n      const parsedValue = parseInt(String(value));\n      v = parsedValue !== 0 ? parsedValue : '';\n    } else if (name === 'bulkLaborPersons' || name === 'bulkLaborUnitRate') {\n      const digits = String(value).replace(/[^\\d-]/g, '');\n      v = digits === '' || digits === '-' ? '' : parse(digits);\n    }\n    setBulkBaseInfo(prev => {\n      const next = {\n        ...prev,\n        [name]: v\n      } as typeof prev;\n      if (name === 'clientId') {\n        next.workplaceId = '';\n        setShowBulkCustomProject(false);\n      }\n      if (name === 'workplaceId') {\n        const wp = getClientWorkplaces(next.clientId).find(w => w.id === Number(v));\n        const hasProjectName = next.projectName !== '' && next.projectName !== null && next.projectName !== undefined;\n        const hasDescription = wp?.description !== undefined && wp?.description !== null && wp?.description !== '';\n        if (!hasProjectName && hasDescription) next.projectName = wp.description ?? '';\n      }\n      if (name === 'projectName') {\n        if (value === 'custom') {\n          setShowBulkCustomProject(true);\n          next.projectName = '';\n        } else {\n          setShowBulkCustomProject(false);\n        }\n      }\n      return next;\n    });\n  };\n  const onBulkItemChange = (index: number, field: string, value: string) => {\n    setBulkItems(prev => {\n      const updated = [...prev];\n      let v: unknown = value;\n      if (['defaultPrice', 'quantity', 'laborPersons', 'laborUnitRate'].includes(field)) {\n        const digits = String(value).replace(/[^\\d-]/g, '');\n        v = digits === '' || digits === '-' ? '' : parse(digits);\n      }\n      const existingItem = updated[index];\n      if (existingItem !== undefined) {\n        updated[index] = {\n          ...existingItem,\n          [field]: v\n        } as BulkItem;\n      }\n      return updated;\n    });\n  };\n  const onBulkAddItem = () => {\n    setBulkItems(prev => [...prev, {\n      name: '',\n      category: '',\n      defaultPrice: '' as unknown as number,\n      quantity: '' as unknown as number,\n      unit: '',\n      description: '',\n      status: '예정',\n      notes: '',\n      laborPersons: '',\n      laborUnitRate: ''\n    }]);\n  };\n  const onBulkRemoveItem = (index: number) => {\n    setBulkItems(prev => prev.length <= 1 ? prev : prev.filter((_, i) => i !== index));\n  };\n  const onBulkSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const errors: string[] = [];\n    const hasClientId = bulkBaseInfo.clientId !== '' && bulkBaseInfo.clientId !== null && bulkBaseInfo.clientId !== undefined;\n    const hasWorkplaceId = bulkBaseInfo.workplaceId !== '' && bulkBaseInfo.workplaceId !== null && bulkBaseInfo.workplaceId !== undefined;\n    const hasProjectName = bulkBaseInfo.projectName !== '' && bulkBaseInfo.projectName !== null && bulkBaseInfo.projectName !== undefined;\n    if (!hasClientId) errors.push('건축주를 선택하세요.');\n    if (!hasWorkplaceId) errors.push('작업장을 선택하세요.');\n    if (!hasProjectName) errors.push('프로젝트명을 입력하세요.');\n    bulkItems.forEach((it, idx) => {\n      const hasName = it.name !== undefined && it.name !== null && String(it.name).trim() !== '';\n      if (!hasName) errors.push(`항목 #${idx + 1}: 내용은 필수입니다.`);\n    });\n    if (errors.length > 0) {\n      alert(errors.join('\\n'));\n      return;\n    }\n    const selectedClientData = clients.find(c => Number(c.id) === Number(bulkBaseInfo.clientId));\n    const selectedWorkplace = getClientWorkplaces(bulkBaseInfo.clientId).find(wp => wp.id === Number(bulkBaseInfo.workplaceId));\n    const currentMaxId = workItems.length > 0 ? Math.max(...workItems.map(i => Number(i.id) ?? 0)) : 0;\n    const bulkLP: number | '' = typeof bulkBaseInfo.bulkLaborPersons === 'number' ? bulkBaseInfo.bulkLaborPersons : String(bulkBaseInfo.bulkLaborPersons).trim() === '' ? '' : parseInt(String(bulkBaseInfo.bulkLaborPersons), 10) ?? 0;\n    const bulkLR: number | '' = typeof bulkBaseInfo.bulkLaborUnitRate === 'number' ? bulkBaseInfo.bulkLaborUnitRate : String(bulkBaseInfo.bulkLaborUnitRate).trim() === '' ? '' : parseInt(String(bulkBaseInfo.bulkLaborUnitRate), 10) ?? 0;\n    const createdItems: WorkItem[] = bulkItems.map((item, idx) => ({\n      id: currentMaxId + idx + 1,\n      clientId: Number(bulkBaseInfo.clientId) as number,\n      clientName: selectedClientData?.name ?? '',\n      workplaceId: Number(bulkBaseInfo.workplaceId) as number,\n      workplaceName: selectedWorkplace?.name ?? '',\n      projectName: bulkBaseInfo.projectName,\n      date: bulkBaseInfo.date ?? new Date().toISOString().split('T')[0],\n      name: item.name ?? '',\n      category: item.category ?? '',\n      defaultPrice: typeof item.defaultPrice === 'number' && item.defaultPrice !== 0 ? item.defaultPrice : item.defaultPrice as unknown as string === '' ? '' as unknown as number : 0,\n      quantity: typeof item.quantity === 'number' && item.quantity !== 0 ? item.quantity : item.quantity as unknown as string === '' ? '' as unknown as number : 1,\n      unit: item.unit ?? '',\n      description: item.description ?? '',\n      status: item.status as WorkStatus ?? '예정',\n      notes: item.notes ?? '',\n      laborPersonsGeneral: bulkLP,\n      laborUnitRateGeneral: bulkLR,\n      laborPersons: item.laborPersons ?? '',\n      laborUnitRate: item.laborUnitRate ?? ''\n    }));\n\n    // 이전 상태 백업 (롤백용)\n    const previousWorkItems = workItems;\n    const previousClients = clients;\n\n    // UI 즉시 업데이트 (낙관적 업데이트)\n    setWorkItems(prev => [...prev, ...createdItems]);\n    const hasBulkProjectName = bulkBaseInfo.projectName !== '' && bulkBaseInfo.projectName !== null && bulkBaseInfo.projectName !== undefined;\n    if (hasBulkProjectName) {\n      setClients(prev => prev.map(c => Number(c.id) === Number(bulkBaseInfo.clientId) ? {\n        ...c,\n        projects: Array.from(new Set([...(c.projects ?? []), bulkBaseInfo.projectName]))\n      } : c));\n    }\n\n    // Supabase에도 즉시 생성\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) {\n        setWorkItems(previousWorkItems);\n        setClients(previousClients);\n        alert('데이터베이스 연결에 실패했습니다.');\n        return;\n      }\n      const {\n        getCurrentUserId\n      } = await import('../services/supabase');\n      const userId = await getCurrentUserId();\n\n      // Integer 필드를 안전하게 변환하는 헬퍼 함수\n      const toIntOrNull = (val: string | number | null | undefined): number | null => {\n        if (val === null || val === undefined || val === '') return null;\n        const num = Number(val);\n        return isNaN(num) ? null : num;\n      };\n\n      // Status 한글 -> 영어 변환 함수\n      const toDbStatus = (status: string | undefined): string => {\n        if (status === null || status === undefined || status === '') return 'planned';\n        const statusMap: Record<string, string> = {\n          '예정': 'planned',\n          '진행중': 'in_progress',\n          '완료': 'completed',\n          '보류': 'on_hold'\n        };\n        return statusMap[status] ?? 'planned';\n      };\n\n      // 대량 INSERT를 위한 데이터 배열 생성\n      const dbWorkItems = createdItems.map(item => ({\n        user_id: userId,\n        client_id: toIntOrNull(item.clientId),\n        workplace_id: toIntOrNull(item.workplaceId),\n        project_name: item.projectName ?? '',\n        name: item.name,\n        description: item.description ?? '',\n        category: item.category ?? '',\n        quantity: toIntOrNull(item.quantity) ?? 0,\n        unit: item.unit ?? '',\n        default_price: toIntOrNull(item.defaultPrice) ?? 0,\n        status: toDbStatus(item.status),\n        start_date: item.date ?? null,\n        notes: item.notes ?? '',\n        labor_persons: toIntOrNull(item.laborPersons) ?? 0,\n        labor_unit_rate: toIntOrNull(item.laborUnitRate) ?? 0,\n        labor_persons_general: toIntOrNull(item.laborPersonsGeneral) ?? 0,\n        labor_unit_rate_general: toIntOrNull(item.laborUnitRateGeneral) ?? 0\n      }));\n      const {\n        data: insertedData,\n        error\n      } = await supabase.from('work_items').insert(dbWorkItems).select(`\n          *,\n          clients!client_id (\n            company_name,\n            workplaces\n          )\n        `);\n      if (error !== null && error !== undefined) {\n        setWorkItems(previousWorkItems);\n        setClients(previousClients);\n        alert(`작업 항목 생성 중 오류가 발생했습니다: ${error.message}`);\n        return;\n      }\n\n      // DB에서 반환된 실제 데이터로 UI 업데이트\n      if (insertedData !== null && insertedData !== undefined && insertedData.length > 0) {\n        const fromDbStatus = (status: string): '예정' | '진행중' | '완료' | '보류' => {\n          const statusMap: Record<string, '예정' | '진행중' | '완료' | '보류'> = {\n            'planned': '예정',\n            'in_progress': '진행중',\n            'completed': '완료',\n            'on_hold': '보류',\n            'cancelled': '보류'\n          };\n          return statusMap[status] ?? '예정';\n        };\n        const actualCreatedItems: WorkItem[] = insertedData.map((w: Record<string, unknown>) => {\n          const clients = w.clients as Record<string, unknown> | null | undefined;\n          const clientName = clients?.company_name !== null && clients?.company_name !== undefined ? String(clients.company_name) : '';\n          const workplaces = clients?.workplaces !== null && clients?.workplaces !== undefined ? clients.workplaces as Array<Record<string, unknown>> : [];\n          const workplace = workplaces.find((wp: Record<string, unknown>) => wp.id !== null && wp.id !== undefined && wp.id === w.workplace_id);\n          const workplaceName = workplace?.name !== null && workplace?.name !== undefined ? String(workplace.name) : '';\n          const rawWorkplaceId = w.workplace_id as number | null | undefined;\n          const workplaceId = rawWorkplaceId !== null && rawWorkplaceId !== undefined ? rawWorkplaceId : '';\n          return {\n            id: w.work_item_id as number,\n            clientId: w.client_id as number,\n            clientName,\n            workplaceId,\n            workplaceName,\n            projectName: w.project_name !== null && w.project_name !== undefined ? String(w.project_name) : '',\n            name: w.name as string,\n            category: w.category !== null && w.category !== undefined ? String(w.category) : '',\n            defaultPrice: w.default_price !== null && w.default_price !== undefined ? Number(w.default_price) : 0,\n            quantity: w.quantity !== null && w.quantity !== undefined ? Number(w.quantity) : 0,\n            unit: w.unit !== null && w.unit !== undefined ? String(w.unit) : '',\n            description: w.description !== null && w.description !== undefined ? String(w.description) : '',\n            status: fromDbStatus(w.status as string) as WorkStatus,\n            date: w.start_date !== null && w.start_date !== undefined ? String(w.start_date) : '',\n            notes: w.notes !== null && w.notes !== undefined ? String(w.notes) : '',\n            laborPersons: w.labor_persons !== null && w.labor_persons !== undefined ? Number(w.labor_persons) : 0,\n            laborUnitRate: w.labor_unit_rate !== null && w.labor_unit_rate !== undefined ? Number(w.labor_unit_rate) : 0,\n            laborPersonsGeneral: w.labor_persons_general !== null && w.labor_persons_general !== undefined ? Number(w.labor_persons_general) : 0,\n            laborUnitRateGeneral: w.labor_unit_rate_general !== null && w.labor_unit_rate_general !== undefined ? Number(w.labor_unit_rate_general) : 0\n          };\n        });\n\n        // 실제 DB 데이터로 다시 업데이트\n        setWorkItems(prev => {\n          const withoutOptimistic = prev.filter(item => !createdItems.some(created => created.id === item.id));\n          return [...withoutOptimistic, ...actualCreatedItems];\n        });\n      }\n    } catch (err) {\n      setWorkItems(previousWorkItems);\n      setClients(previousClients);\n      alert('작업 항목 생성 중 예상치 못한 오류가 발생했습니다.');\n      return;\n    }\n    setShowBulkModal(false);\n    setShowBulkCustomProject(false);\n    setBulkItems([{\n      name: '',\n      category: '',\n      defaultPrice: '' as unknown as number,\n      quantity: '' as unknown as number,\n      unit: '',\n      description: '',\n      status: '예정',\n      notes: '',\n      laborPersons: '',\n      laborUnitRate: ''\n    }]);\n    setBulkBaseInfo({\n      clientId: '',\n      workplaceId: '',\n      projectName: '',\n      date: new Date().toISOString().split('T')[0],\n      bulkLaborPersons: '',\n      bulkLaborUnitRate: ''\n    });\n    alert(`${createdItems.length}개의 작업 항목이 추가되었습니다.`);\n  };\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const selectedClientData = clients.find(c => Number(c.id) === Number(newItem.clientId));\n    const selectedWorkplace = getClientWorkplaces(newItem.clientId).find(wp => wp.id === newItem.workplaceId);\n    if (editingItem !== null) {\n      // 이전 상태 백업 (롤백용)\n      const previousWorkItems = workItems;\n\n      // 수정: UI 즉시 업데이트 (낙관적 업데이트)\n      const updated = {\n        ...editingItem,\n        ...newItem,\n        clientName: selectedClientData?.name ?? editingItem.clientName,\n        workplaceName: selectedWorkplace?.name ?? editingItem.workplaceName\n      } as WorkItem;\n      setWorkItems(prev => prev.map(i => i.id === editingItem.id ? updated : i));\n\n      // Supabase에도 즉시 업데이트\n      try {\n        const {\n          supabase\n        } = await import('../services/supabase');\n        if (supabase === null || supabase === undefined) {\n          // Supabase 초기화 실패 시 롤백\n          setWorkItems(previousWorkItems);\n          alert('데이터베이스 연결에 실패했습니다.');\n          return;\n        }\n        // Integer 필드를 안전하게 변환하는 헬퍼 함수\n        const toIntOrNull = (val: string | number | null | undefined): number | null => {\n          if (val === null || val === undefined || val === '') return null;\n          const num = Number(val);\n          return isNaN(num) ? null : num;\n        };\n\n        // Status 한글 -> 영어 변환 함수\n        const toDbStatus = (status: string | undefined): string => {\n          if (status === null || status === undefined || status === '') return 'planned';\n          const statusMap: Record<string, string> = {\n            '예정': 'planned',\n            '진행중': 'in_progress',\n            '완료': 'completed',\n            '보류': 'on_hold'\n          };\n          return statusMap[status] ?? 'planned';\n        };\n        const {\n          error\n        } = await supabase.from('work_items').update({\n          client_id: toIntOrNull(updated.clientId),\n          workplace_id: toIntOrNull(updated.workplaceId),\n          project_name: updated.projectName ?? '',\n          name: updated.name,\n          description: updated.description ?? '',\n          category: updated.category ?? '',\n          quantity: toIntOrNull(updated.quantity) ?? 0,\n          unit: updated.unit ?? '',\n          default_price: toIntOrNull(updated.defaultPrice) ?? 0,\n          status: toDbStatus(updated.status),\n          start_date: updated.date ?? null,\n          notes: updated.notes ?? '',\n          labor_persons: toIntOrNull(updated.laborPersons) ?? 0,\n          labor_unit_rate: toIntOrNull(updated.laborUnitRate) ?? 0,\n          labor_persons_general: toIntOrNull(updated.laborPersonsGeneral) ?? 0,\n          labor_unit_rate_general: toIntOrNull(updated.laborUnitRateGeneral) ?? 0\n        }).eq('work_item_id', updated.id);\n        if (error !== null && error !== undefined) {\n          // 오류 발생 시 롤백\n          setWorkItems(previousWorkItems);\n          alert(`작업 항목 수정 중 오류가 발생했습니다: ${error.message}`);\n          return;\n        }\n      } catch (err) {\n        // 예외 발생 시 롤백\n        setWorkItems(previousWorkItems);\n        alert('작업 항목 수정 중 예상치 못한 오류가 발생했습니다.');\n        return;\n      }\n    } else {\n      // 이전 상태 백업 (롤백용)\n      const previousWorkItems = workItems;\n      const previousClients = clients;\n\n      // 생성: UI 즉시 업데이트 (낙관적 업데이트)\n      const nextId = (workItems.length > 0 ? Math.max(...workItems.map(i => Number(i.id) ?? 0)) : 0) + 1;\n      const created: WorkItem = {\n        ...newItem,\n        id: nextId,\n        clientName: selectedClientData?.name ?? '',\n        workplaceName: selectedWorkplace?.name ?? '',\n        date: newItem.date ?? new Date().toISOString().split('T')[0]\n      } as WorkItem;\n      setWorkItems(prev => [...prev, created]);\n      const hasProjectName = newItem.projectName !== undefined && newItem.projectName !== null && newItem.projectName !== '';\n      if (hasProjectName) {\n        setClients(prev => prev.map(c => Number(c.id) === Number(newItem.clientId) ? {\n          ...c,\n          projects: Array.from(new Set([...(c.projects ?? []), newItem.projectName!]))\n        } : c));\n      }\n\n      // Supabase에도 즉시 생성\n      try {\n        const {\n          supabase\n        } = await import('../services/supabase');\n        if (supabase === null || supabase === undefined) {\n          // Supabase 초기화 실패 시 롤백\n          setWorkItems(previousWorkItems);\n          setClients(previousClients);\n          alert('데이터베이스 연결에 실패했습니다.');\n          return;\n        }\n        const {\n          getCurrentUserId\n        } = await import('../services/supabase');\n        const userId = await getCurrentUserId();\n\n        // Integer 필드를 안전하게 변환하는 헬퍼 함수\n        const toIntOrNull = (val: string | number | null | undefined): number | null => {\n          if (val === null || val === undefined || val === '') return null;\n          const num = Number(val);\n          return isNaN(num) ? null : num;\n        };\n\n        // Status 한글 -> 영어 변환 함수\n        const toDbStatus = (status: string | undefined): string => {\n          if (status === null || status === undefined || status === '') return 'planned';\n          const statusMap: Record<string, string> = {\n            '예정': 'planned',\n            '진행중': 'in_progress',\n            '완료': 'completed',\n            '보류': 'on_hold'\n          };\n          return statusMap[status] ?? 'planned';\n        };\n        const dbStatus = toDbStatus(created.status);\n        const clientIdValue = toIntOrNull(created.clientId);\n        const workplaceIdValue = toIntOrNull(created.workplaceId);\n\n        // client_id가 필수이므로 null이면 에러\n        if (clientIdValue === null) {\n          alert('건축주를 선택해주세요.');\n          setWorkItems(previousWorkItems);\n          setClients(previousClients);\n          return;\n        }\n\n        // work_item_id는 데이터베이스에서 자동 생성하도록 제거\n        const {\n          error\n        } = await supabase.from('work_items').insert({\n          user_id: userId,\n          client_id: clientIdValue,\n          workplace_id: workplaceIdValue,\n          project_name: created.projectName ?? '',\n          name: created.name,\n          description: created.description ?? '',\n          category: created.category ?? '',\n          quantity: toIntOrNull(created.quantity) ?? 0,\n          unit: created.unit ?? '',\n          default_price: toIntOrNull(created.defaultPrice) ?? 0,\n          status: dbStatus,\n          start_date: created.date ?? null,\n          notes: created.notes ?? '',\n          labor_persons: toIntOrNull(created.laborPersons) ?? 0,\n          labor_unit_rate: toIntOrNull(created.laborUnitRate) ?? 0,\n          labor_persons_general: toIntOrNull(created.laborPersonsGeneral) ?? 0,\n          labor_unit_rate_general: toIntOrNull(created.laborUnitRateGeneral) ?? 0\n        });\n        if (error !== null && error !== undefined) {\n          // 오류 발생 시 롤백\n          setWorkItems(previousWorkItems);\n          setClients(previousClients);\n          alert(`작업 항목 생성 중 오류가 발생했습니다: ${error.message}`);\n          return;\n        }\n      } catch (err) {\n        // 예외 발생 시 롤백\n        setWorkItems(previousWorkItems);\n        setClients(previousClients);\n        alert('작업 항목 생성 중 예상치 못한 오류가 발생했습니다.');\n        return;\n      }\n    }\n    setShowItemModal(false);\n    setEditingItem(null);\n    setNewItem(defaultNewItem);\n  };\n  const handleBulkDelete = () => {\n    if (selection.selected.length === 0) {\n      alert('삭제할 항목을 선택하세요.');\n      return;\n    }\n    setShowConfirmBulkDelete(true);\n  };\n  const confirmBulkDelete = async () => {\n    const count = selection.selected.length;\n\n    // UI에서 즉시 제거\n    setWorkItems(prev => prev.filter(i => !selection.selected.includes(i.id)));\n    selection.clear();\n    setShowConfirmBulkDelete(false);\n    alert(`${count}개의 작업 항목이 삭제되었습니다.`);\n\n    // Supabase에서도 즉시 삭제\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('work_items').delete().in('work_item_id', selection.selected);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const handleApplyBulkStatus = async () => {\n    const hasStatus = bulkStatus !== '' && bulkStatus !== null && bulkStatus !== undefined;\n    if (!hasStatus) {\n      alert('변경할 상태를 선택하세요.');\n      return;\n    }\n\n    // 이전 상태 백업 (롤백용)\n    const previousWorkItems = workItems;\n\n    // UI 즉시 업데이트 (낙관적 업데이트)\n    setWorkItems(prev => prev.map(item => selection.selected.includes(item.id) ? {\n      ...item,\n      status: bulkStatus as WorkStatus\n    } : item));\n    setBulkStatus('');\n\n    // Supabase에도 즉시 업데이트\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) {\n        setWorkItems(previousWorkItems);\n        alert('데이터베이스 연결에 실패했습니다.');\n        return;\n      }\n\n      // Status 한글 -> 영어 변환 함수\n      const toDbStatus = (status: string | undefined): string => {\n        if (status === null || status === undefined || status === '') return 'planned';\n        const statusMap: Record<string, string> = {\n          '예정': 'planned',\n          '진행중': 'in_progress',\n          '완료': 'completed',\n          '보류': 'on_hold'\n        };\n        return statusMap[status] ?? 'planned';\n      };\n      const dbStatus = toDbStatus(bulkStatus as WorkStatus);\n\n      // 선택된 항목들의 상태를 일괄 업데이트\n      const {\n        error\n      } = await supabase.from('work_items').update({\n        status: dbStatus\n      }).in('work_item_id', selection.selected);\n      if (error !== null && error !== undefined) {\n        setWorkItems(previousWorkItems);\n        alert(`상태 변경 중 오류가 발생했습니다: ${error.message}`);\n        return;\n      }\n    } catch (err) {\n      setWorkItems(previousWorkItems);\n      alert('상태 변경 중 예상치 못한 오류가 발생했습니다.');\n    }\n  };\n  const handleCreateBulkInvoice = () => {\n    const INVOICE_ID_PADDING = 3;\n    const DAYS_UNTIL_DUE = 14;\n    const HOURS_PER_DAY = 24;\n    const MINUTES_PER_HOUR = 60;\n    const SECONDS_PER_MINUTE = 60;\n    const MS_PER_SECOND = 1000;\n    if (selection.selected.length === 0) {\n      alert('항목을 선택하세요.');\n      return;\n    }\n    const selectedItems = workItems.filter(i => selection.selected.includes(i.id) && i.status === '완료');\n    if (selectedItems.length === 0) {\n      alert('완료된 항목이 없습니다.');\n      return;\n    }\n    const first = selectedItems[0];\n\n    // clientId 유효성 검증\n    if (first.clientId === null || first.clientId === undefined || first.clientId === 0) {\n      alert('유효한 건축주 정보가 없습니다. 작업 항목에 건축주를 먼저 설정해주세요.');\n      return;\n    }\n\n    // 같은 건축주, 작업장, 프로젝트인지 확인\n    const hasDifferentProject = selectedItems.some(item => item.clientId !== first.clientId || Number(item.workplaceId) !== Number(first.workplaceId) || item.projectName !== first.projectName);\n    if (hasDifferentProject) {\n      alert('선택한 항목들은 모두 같은 건축주, 작업장, 프로젝트여야 합니다.');\n      return;\n    }\n    const client = clients.find(c => Number(c.id) === first.clientId);\n    const workplace = client?.workplaces?.find(w => Number(w.id) === Number(first.workplaceId));\n    const newInvoiceId = `INV-${new Date().getFullYear()}-${String(invoices.length + 1).padStart(INVOICE_ID_PADDING, '0')}`;\n    const items = selectedItems.map(toInvoiceItem);\n    const totalAmount = items.reduce((s, it) => s + (it.total !== 0 ? it.total : 0), 0);\n    const dueDateTime = Date.now() + DAYS_UNTIL_DUE * HOURS_PER_DAY * MINUTES_PER_HOUR * SECONDS_PER_MINUTE * MS_PER_SECOND;\n    const newInvoice = {\n      id: newInvoiceId,\n      clientId: first.clientId,\n      client: first.clientName ?? '',\n      workplaceId: typeof first.workplaceId === 'number' ? first.workplaceId : undefined,\n      project: first.projectName ?? '',\n      workplaceAddress: workplace?.address ?? '',\n      amount: totalAmount,\n      status: '발송대기' as const,\n      date: new Date().toISOString().split('T')[0],\n      dueDate: new Date(dueDateTime).toISOString().split('T')[0],\n      workItems: items\n    };\n    setInvoices(prev => [...prev, newInvoice]);\n    selection.clear();\n    alert(`청구서 ${newInvoiceId}가 생성되었습니다! (${selectedItems.length}개 항목)`);\n  };\n  const handleExport = () => exportToExcel.workItems(filteredWorkItems);\n  const handleImport = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    const file = files !== null && files.length > 0 ? files[0] : null;\n    if (file === null) return;\n\n    // 이전 상태 백업 (롤백용)\n    const previousWorkItems = workItems;\n    try {\n      const imported = await importFromExcel.workItems(file);\n      const currentMax = workItems.length > 0 ? Math.max(...workItems.map(i => Number(i.id) ?? 0)) : 0;\n      const importedArray = imported ?? [];\n\n      // 건축주 이름으로 ID 매칭 및 검증\n      const notFoundClients: string[] = [];\n      const notFoundWorkplaces: string[] = [];\n      const missingWorkplaces: string[] = [];\n      const remapped = importedArray.map((it: Partial<WorkItem>, idx: number) => {\n        // 건축주 이름으로 ID 찾기\n        let matchedClient: Client | undefined;\n        if (it?.clientName !== null && it?.clientName !== undefined && it.clientName !== '') {\n          matchedClient = clients.find(c => c.name === it.clientName);\n          if (matchedClient === null || matchedClient === undefined) {\n            notFoundClients.push(it.clientName);\n          }\n        }\n\n        // 작업장 이름 필수 검증\n        if (it?.workplaceName === null || it?.workplaceName === undefined || it.workplaceName.trim() === '') {\n          missingWorkplaces.push(`${it?.clientName ?? '(건축주 없음)'} - ${it?.name ?? '(항목명 없음)'}`);\n        }\n\n        // 작업장 이름으로 ID 찾기 (해당 건축주 내에서)\n        let matchedWorkplaceId: number | '' = '';\n        if (matchedClient !== null && matchedClient !== undefined && it?.workplaceName !== null && it?.workplaceName !== undefined && it.workplaceName !== '') {\n          const workplace = matchedClient.workplaces?.find(wp => wp.name === it.workplaceName);\n          if (workplace !== null && workplace !== undefined) {\n            matchedWorkplaceId = typeof workplace.id === 'number' ? workplace.id : Number(workplace.id);\n          } else {\n            // 건축주는 있지만 해당 작업장이 없는 경우\n            notFoundWorkplaces.push(`${it.clientName} - ${it.workplaceName}`);\n          }\n        }\n        return {\n          id: currentMax + idx + 1,\n          clientId: matchedClient !== null && matchedClient !== undefined ? typeof matchedClient.id === 'number' ? matchedClient.id : Number(matchedClient.id) : 0,\n          clientName: it?.clientName ?? '',\n          workplaceId: matchedWorkplaceId,\n          workplaceName: it?.workplaceName ?? '',\n          projectName: it?.projectName ?? '',\n          name: String(it?.name ?? ''),\n          category: it?.category ?? '',\n          unit: it?.unit ?? '',\n          quantity: typeof it?.quantity === 'number' ? it.quantity : 0,\n          defaultPrice: typeof it?.defaultPrice === 'number' ? it.defaultPrice : 0,\n          description: it?.description ?? '',\n          notes: it?.notes ?? '',\n          status: it?.status as WorkStatus ?? '예정',\n          date: it?.date ?? new Date().toISOString().split('T')[0],\n          laborPersons: it?.laborPersons ?? '',\n          laborUnitRate: it?.laborUnitRate ?? '',\n          laborPersonsGeneral: it?.laborPersonsGeneral ?? '',\n          laborUnitRateGeneral: it?.laborUnitRateGeneral ?? ''\n        } as WorkItem;\n      });\n\n      // 검증 오류 확인\n      const MAX_ERROR_DISPLAY_COUNT = 5;\n      const errors: string[] = [];\n      if (notFoundClients.length > 0) {\n        const uniqueNames = Array.from(new Set(notFoundClients));\n        errors.push(`❌ 등록되지 않은 건축주:\\n   ${uniqueNames.join(', ')}`);\n      }\n      if (missingWorkplaces.length > 0) {\n        errors.push(`❌ 작업장 정보가 누락된 항목:\\n   ${missingWorkplaces.slice(0, MAX_ERROR_DISPLAY_COUNT).join('\\n   ')}${missingWorkplaces.length > MAX_ERROR_DISPLAY_COUNT ? `\\n   ... 외 ${missingWorkplaces.length - MAX_ERROR_DISPLAY_COUNT}개` : ''}`);\n      }\n      if (notFoundWorkplaces.length > 0) {\n        const uniqueWorkplaces = Array.from(new Set(notFoundWorkplaces));\n        errors.push(`❌ 등록되지 않은 작업장:\\n   ${uniqueWorkplaces.slice(0, MAX_ERROR_DISPLAY_COUNT).join('\\n   ')}${uniqueWorkplaces.length > MAX_ERROR_DISPLAY_COUNT ? `\\n   ... 외 ${uniqueWorkplaces.length - MAX_ERROR_DISPLAY_COUNT}개` : ''}`);\n      }\n      if (errors.length > 0) {\n        setWorkItems(previousWorkItems);\n        alert(`엑셀 가져오기 실패\\n\\n${errors.join('\\n\\n')}\\n\\n해결 방법:\\n1. 건축주 관리에서 건축주를 먼저 등록\\n2. 건축주의 작업장을 등록\\n3. 엑셀 파일의 \"건축주\"와 \"작업장\" 컬럼을 정확히 입력`);\n        (e.target as HTMLInputElement).value = '';\n        return;\n      }\n\n      // UI 즉시 업데이트 (낙관적 업데이트)\n      setWorkItems(prev => [...prev, ...remapped]);\n\n      // Supabase에 저장\n      try {\n        const {\n          supabase\n        } = await import('../services/supabase');\n        if (supabase === null || supabase === undefined) {\n          setWorkItems(previousWorkItems);\n          alert('데이터베이스 연결에 실패했습니다.');\n          return;\n        }\n        const {\n          getCurrentUserId\n        } = await import('../services/supabase');\n        const userId = await getCurrentUserId();\n\n        // Integer 필드를 안전하게 변환하는 헬퍼 함수\n        const toIntOrNull = (val: string | number | null | undefined): number | null => {\n          if (val === null || val === undefined || val === '') return null;\n          const num = Number(val);\n          return isNaN(num) ? null : num;\n        };\n\n        // Status 한글 -> 영어 변환 함수\n        const toDbStatus = (status: string | undefined): string => {\n          if (status === null || status === undefined || status === '') return 'planned';\n          const statusMap: Record<string, string> = {\n            '예정': 'planned',\n            '진행중': 'in_progress',\n            '완료': 'completed',\n            '보류': 'on_hold'\n          };\n          return statusMap[status] ?? 'planned';\n        };\n\n        // 대량 INSERT를 위한 데이터 배열 생성\n        const dbWorkItems = remapped.map(item => ({\n          user_id: userId,\n          client_id: toIntOrNull(item.clientId),\n          client_name: item.clientName ?? '',\n          workplace_id: toIntOrNull(item.workplaceId),\n          workplace_name: item.workplaceName ?? '',\n          project_name: item.projectName ?? '',\n          name: item.name,\n          description: item.description ?? '',\n          category: item.category ?? '',\n          quantity: toIntOrNull(item.quantity) ?? 0,\n          unit: item.unit ?? '',\n          default_price: toIntOrNull(item.defaultPrice) ?? 0,\n          status: toDbStatus(item.status),\n          start_date: item.date ?? null,\n          notes: item.notes ?? '',\n          labor_persons: toIntOrNull(item.laborPersons) ?? 0,\n          labor_unit_rate: toIntOrNull(item.laborUnitRate) ?? 0,\n          labor_persons_general: toIntOrNull(item.laborPersonsGeneral) ?? 0,\n          labor_unit_rate_general: toIntOrNull(item.laborUnitRateGeneral) ?? 0\n        }));\n        const {\n          data: insertedData,\n          error: insertError\n        } = await supabase.from('work_items').insert(dbWorkItems).select();\n        if (insertError !== null && insertError !== undefined) {\n          setWorkItems(previousWorkItems);\n          // eslint-disable-next-line no-console\n          console.error('엑셀 가져오기 Supabase 저장 오류 상세:', {\n            message: insertError.message,\n            details: insertError.details,\n            hint: insertError.hint,\n            code: insertError.code,\n            데이터개수: dbWorkItems.length,\n            첫번째항목: dbWorkItems[0]\n          });\n          alert(`Supabase 저장 중 오류가 발생했습니다: ${insertError.message}\\n\\n콘솔(F12)을 열어 상세 정보를 확인하세요.`);\n          return;\n        }\n\n        // DB에서 반환된 실제 데이터로 업데이트 (work_item_id 포함)\n        if (insertedData !== null && insertedData !== undefined) {\n          const actualCreatedItems: WorkItem[] = insertedData.map((w: Record<string, unknown>) => {\n            const fromDbStatus = (dbStatus: string): WorkStatus => {\n              const statusMap: Record<string, WorkStatus> = {\n                'planned': '예정',\n                'in_progress': '진행중',\n                'completed': '완료',\n                'on_hold': '보류'\n              };\n              return statusMap[dbStatus] ?? '예정';\n            };\n            const clientId = w.client_id as number;\n            const rawWorkplaceId = w.workplace_id as number | null | undefined;\n            const workplaceId = rawWorkplaceId !== null && rawWorkplaceId !== undefined ? rawWorkplaceId : '';\n            return {\n              id: w.work_item_id as number,\n              clientId,\n              clientName: (w.client_name ?? '') as string,\n              workplaceId,\n              workplaceName: (w.workplace_name ?? '') as string,\n              projectName: (w.project_name ?? '') as string,\n              name: w.name as string,\n              category: (w.category ?? '') as string,\n              defaultPrice: (w.default_price ?? 0) as number,\n              quantity: (w.quantity ?? 0) as number,\n              unit: (w.unit ?? '') as string,\n              description: (w.description ?? '') as string,\n              status: fromDbStatus(w.status as string),\n              date: (w.start_date ?? '') as string,\n              notes: (w.notes ?? '') as string,\n              laborPersons: (w.labor_persons ?? 0) as number,\n              laborUnitRate: (w.labor_unit_rate ?? 0) as number,\n              laborPersonsGeneral: (w.labor_persons_general ?? 0) as number,\n              laborUnitRateGeneral: (w.labor_unit_rate_general ?? 0) as number\n            };\n          });\n\n          // 실제 DB 데이터로 다시 업데이트\n          setWorkItems(prev => {\n            const withoutOptimistic = prev.filter(item => !remapped.some(created => created.id === item.id));\n            return [...withoutOptimistic, ...actualCreatedItems];\n          });\n        }\n      } catch (err) {\n        setWorkItems(previousWorkItems);\n        alert('작업 항목 저장 중 예상치 못한 오류가 발생했습니다.');\n        return;\n      }\n      alert(`${imported.length}개의 작업 항목을 가져왔습니다.`);\n    } catch (err) {\n      alert('Excel 파일을 가져오는 중 오류가 발생했습니다.');\n    }\n    (e.target as HTMLInputElement).value = '';\n  };\n  return /*@million jsx-skip*/<WorkItems_1 v0={() => createTemplate.workItems()} v1={() => fileInputRef.current?.click()} v2={handleExport} v3={() => setShowBulkModal(true)} v4={() => setShowItemModal(true)} v5={<input type=\"file\" ref={fileInputRef} onChange={handleImport} accept=\".xlsx,.xls\" style={{\n    display: 'none'\n  }} />} v6={<StatsCards filteredWorkItems={filteredWorkItems} format={format} getLaborCost={getLaborCost} />} v7={<FilterBar clients={clients} selectedClient={selectedClient} selectedProject={selectedProject} filteredCount={filteredWorkItems.length} totalCount={workItems.length} selectionCount={selection.selected.length} bulkStatus={bulkStatus} statuses={STATUSES} getClientProjects={getClientProjects} onChangeClient={val => {\n    setSelectedClient(val);\n    setSelectedProject('');\n  }} onChangeProject={val => setSelectedProject(val)} onResetFilters={() => {\n    setSelectedClient('');\n    setSelectedProject('');\n  }} onBulkStatusChange={val => setBulkStatus(val)} onApplyBulkStatus={handleApplyBulkStatus} onCreateBulkInvoice={handleCreateBulkInvoice} onBulkDelete={handleBulkDelete} />} v8={<WorkItemsTable items={filteredWorkItems} selection={selection} format={format} getLaborCost={getLaborCost} getCategoryColor={getCategoryColor} onEdit={handleEdit} onDelete={handleDelete} onCreateInvoice={handleCreateInvoice} />} v9={<ItemFormModal open={showItemModal} editingItem={editingItem} newItem={newItem} clients={clients} units={units} categories={categories} statuses={STATUSES} onChangeField={onChangeField} onCancel={() => {\n    setShowItemModal(false);\n    setEditingItem(null);\n    setNewItem(defaultNewItem);\n  }} onSubmit={handleSubmit} />} v10={<BulkFormModal open={showBulkModal} clients={clients} categories={categories} units={units} bulkItems={bulkItems} bulkBaseInfo={bulkBaseInfo} showBulkCustomProject={showBulkCustomProject} statuses={STATUSES} onBaseInfoChangeField={onBaseInfoChangeField} onItemChange={onBulkItemChange} onAddItem={onBulkAddItem} onRemoveItem={onBulkRemoveItem} onCancel={() => {\n    setShowBulkModal(false);\n  }} onSubmit={onBulkSubmit} />} v11={<ConfirmDialog open={showConfirmBulkDelete} title=\"선택 삭제\" message={`선택된 ${selection.selected.length}개의 작업 항목을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmBulkDelete} onCancel={() => setShowConfirmBulkDelete(false)} />} v12={<ConfirmDialog open={pendingDeleteId != null} title=\"작업 항목 삭제\" message={`이 작업 항목을 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmDeleteSingle} onCancel={() => setPendingDeleteId(null)} />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { useMemo, useRef, useState } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { useNumberFormat } from '../hooks/useNumberFormat';\nimport { useSelection } from '../hooks/useSelection';\nimport { useClientWorkplaces } from '../hooks/useClientWorkplaces';\nimport StatsCards from './work-items/StatsCards';\nimport FilterBar from './work-items/FilterBar';\nimport WorkItemsTable from './work-items/WorkItemsTable';\nimport ItemFormModal from './work-items/ItemFormModal';\nimport BulkFormModal from './work-items/BulkFormModal';\nimport ConfirmDialog from './ConfirmDialog';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\nimport type { WorkItem, WorkStatus, Client } from '../types/domain';\nimport type { Id } from '../hooks/useSelection';\ntype NewItem = WorkItem;\ntype BulkItem = Partial<WorkItem> & {\n  status?: string;\n};\nconst STATUSES: WorkStatus[] = ['예정', '진행중', '완료', '보류'];\nexport default WorkItems;","import WorkItems from '../components/WorkItems';\nexport default function WorkItemsPage() {\n  return <WorkItems />;\n}","import { useEffect, useMemo, useState } from 'react';\n\nexport type Id = string | number;\n\nexport function useSelection(allIds: Id[]) {\n  const [selected, setSelected] = useState<Id[]>([]);\n\n  // 교차 보정: 전체 목록이 바뀌면 선택 목록도 교집합으로 정리\n  useEffect(() => {\n    setSelected((prev) => {\n      const next = prev.filter((id) => allIds.includes(id));\n      // 동일한 내용이면 상태 갱신 생략하여 불필요한 리렌더/루프 방지\n      if (next.length === prev.length && next.every((v, i) => v === prev[i])) {\n        return prev;\n      }\n      return next;\n    });\n  }, [allIds]);\n\n  const allSelected = useMemo(\n    () => allIds.length > 0 && selected.length === allIds.length,\n    [allIds.length, selected.length]\n  );\n\n  const toggleOne = (id: Id, checked: boolean) => {\n    setSelected((prev) =>\n      checked ? Array.from(new Set([...prev, id])) : prev.filter((x) => x !== id)\n    );\n  };\n\n  const toggleAll = (checked: boolean) => {\n    setSelected(checked ? [...allIds] : []);\n  };\n\n  const clear = () => setSelected([]);\n\n  return { selected, setSelected, allSelected, toggleOne, toggleAll, clear };\n}\n","// Simple number format/parse utilities as a React hook\n// Provides comma formatting and safe integer parsing used across forms.\n\nexport function useNumberFormat() {\n  /** Format a number-like value with thousands separators. */\n  const format = (value: number | string | null | undefined): string => {\n    if (value === null || value === undefined || value === '') return '';\n    const onlyDigits = String(value).replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return '';\n    const num = Number(onlyDigits);\n    if (Number.isNaN(num)) return '';\n    return num.toLocaleString();\n  };\n\n  /** Parse a user input string into an integer (commas and non-digits ignored). */\n  const parse = (input: string): number => {\n    const onlyDigits = String(input ?? '').replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return 0;\n    const n = parseInt(onlyDigits, 10);\n    return Number.isNaN(n) ? 0 : n;\n  };\n\n  return { format, parse };\n}\n"],"names":["useCalendar","options","arguments","length","undefined","value","onChange","closeOnSelect","open","setOpen","useState","month","setMonth","Date","containerRef","useRef","useEffect","parts","split","map","x","parseInt","y","m","Number","isFinite","ONE","onDoc","e","el","current","contains","target","document","addEventListener","removeEventListener","pad2","n","String","padStart","prevMonth","d","getFullYear","getMonth","nextMonth","pickDate","day","v","concat","getCalendarGrid","startDay","getDay","days","getDate","cells","i","push","rows","slice","ConfirmDialog_1","_compiledBlock","_props","_jsx","className","children","_jsxs","v0","v1","onClick","v2","v3","v4","v5","name","portals","_ref","title","message","confirmText","cancelText","onConfirm","onCancel","useClientWorkplaces","clients","useApp","getClientWorkplaces","clientId","trim","parsed","id","client","find","c","Array","isArray","workplaces","StatsCards_1","v6","v7","filteredWorkItems","format","getLaborCost","total","completed","filter","status","inProgress","totalAmount","reduce","sum","item","priceRaw","defaultPrice","qtyRaw","quantity","WrenchScrewdriverIcon","CheckCircleIcon","ExclamationTriangleIcon","CurrencyDollarIcon","isPositiveNumber","isFiniteNumber","FilterBar_1","htmlFor","autoComplete","disabled","v8","v9","v10","v11","v12","selectedClient","selectedProject","filteredCount","totalCount","selectionCount","bulkStatus","statuses","getClientProjects","onChangeClient","onChangeProject","onResetFilters","onBulkStatusChange","onApplyBulkStatus","onCreateBulkInvoice","onBulkDelete","hasClient","hasProject","hasFilter","hasSelection","project","_Fragment","s","WorkItemsTable_1","type","checked","items","selection","getCategoryColor","onEdit","onDelete","onCreateInvoice","toggleAll","selected","idx","includes","toggleOne","clientName","description","workplaceName","projectName","category","price","qty","laborCost","line","unit","date","Tooltip","label","ItemFormModal","_newItem$date","_newItem$clientId","_newItem$category","_newItem$date2","_newItem$name","_newItem$description","_newItem$quantity","_newItem$unit","_newItem$laborPersons","_newItem$notes","editingItem","newItem","units","categories","onChangeField","onSubmit","useNumberFormat","cal","calRef","required","_newItem$clientId2","_newItem$workplaceId","workplaceId","wp","address","_newItem$projectName","_newItem$projectName2","projects","proj","placeholder","cat","ref","inputMode","onFocus","style","transform","transformOrigin","row","i2","clickable","isNaN","dayColor","select","u","val","num","pRaw","qRaw","pNum","qNum","p","q","laborPersons","laborUnitRate","_newItem$laborPersons2","_newItem$laborUnitRat","persons","rate","r","notes","active","classes","_newItem$laborPersons3","_newItem$laborUnitRat2","laborRate","lp","lr","form","BulkFormModal","_bulkBaseInfo$date","_bulkBaseInfo$clientI","_bulkBaseInfo$date2","_bulkBaseInfo$bulkLab","bulkItems","bulkBaseInfo","showBulkCustomProject","onBaseInfoChangeField","onItemChange","onAddItem","onRemoveItem","workItems","cid","fromWorkItems","clientProjects","clientWorkplaces","fromClientProjects","fromWorkplaces","from","Set","getAllProjects","sort","useProjects","_bulkBaseInfo$clientI2","_bulkBaseInfo$workpla","workplace","_bulkBaseInfo$clientI3","bulkLaborPersons","bulkLaborUnitRate","index","_item$name","_item$category","_item$description","_item$quantity","_item$unit","_item$notes","role","WorkItems_1","STATUSES","setClients","setWorkItems","invoices","setInvoices","parse","setSelectedClient","setSelectedProject","setBulkStatus","showConfirmBulkDelete","setShowConfirmBulkDelete","pendingDeleteId","setPendingDeleteId","showItemModal","setShowItemModal","setEditingItem","showBulkModal","setShowBulkModal","setShowBulkCustomProject","setBulkItems","setBulkBaseInfo","toISOString","defaultNewItem","laborPersonsGeneral","laborUnitRateGeneral","setNewItem","fileInputRef","useMemo","visibleIds","useSelection","_item$laborPersons","_item$laborUnitRate","_item$laborPersonsGen","_item$laborUnitRateGe","skilledPersons","skilledRate","generalPersons","generalRate","toInvoiceItem","wi","_wi$laborPersons","_wi$laborUnitRate","_wi$laborPersonsGener","_wi$laborUnitRateGene","_wi$notes","_wi$date","_wi$category","_wi$description","_wi$laborPersons2","_wi$laborUnitRate2","_wi$laborPersonsGener2","_wi$laborUnitRateGene2","unitPrice","lpg","lrg","totalLaborCost","createTemplate","_fileInputRef$current","click","handleExport","exportToExcel","async","files","file","previousWorkItems","imported","importFromExcel","currentMax","Math","max","_Number3","notFoundClients","notFoundWorkplaces","missingWorkplaces","remapped","it","_it$clientName2","_it$workplaceName","_it$projectName","_it$name2","_it$category","_it$unit","_it$description","_it$notes","_ref2","_it$date","_it$laborPersons","_it$laborUnitRate","_it$laborPersonsGener","_it$laborUnitRateGene","matchedClient","_it$clientName","_it$name","matchedWorkplaceId","_matchedClient$workpl","MAX_ERROR_DISPLAY_COUNT","errors","uniqueNames","join","uniqueWorkplaces","alert","prev","supabase","getCurrentUserId","userId","toIntOrNull","toDbStatus","_statusMap$status7","dbWorkItems","_item$clientName","_item$workplaceName","_item$projectName3","_item$description4","_item$category4","_toIntOrNull17","_item$unit4","_toIntOrNull18","_item$date2","_item$notes3","_toIntOrNull19","_toIntOrNull20","_toIntOrNull21","_toIntOrNull22","user_id","client_id","client_name","workplace_id","workplace_name","project_name","default_price","start_date","labor_persons","labor_unit_rate","labor_persons_general","labor_unit_rate_general","data","insertedData","error","insertError","insert","console","details","hint","code","데이터개수","첫번째항목","actualCreatedItems","w","_w$client_name","_w$workplace_name","_w$project_name","_w$category","_w$default_price","_w$quantity","_w$unit","_w$description","_w$start_date","_w$notes","_w$labor_persons","_w$labor_unit_rate","_w$labor_persons_gene","_w$labor_unit_rate_ge","rawWorkplaceId","work_item_id","dbStatus","_statusMap$dbStatus","fromDbStatus","some","created","err","accept","display","StatsCards","FilterBar","_client$projects","_client$workplaces","_item$projectName","_wp$description","desc","_objectSpread","_statusMap$status6","update","in","handleCreateBulkInvoice","_client$workplaces3","_first$clientName","_first$projectName","_workplace$address2","selectedItems","first","newInvoiceId","dueDateTime","now","DAYS_UNTIL_DUE","newInvoice","workplaceAddress","amount","dueDate","clear","handleBulkDelete","WorkItemsTable","_colors$category","_client$workplaces2","_workItem$clientName","_workItem$projectName","_workplace$address","workItem","unbilledItems","previousInvoices","tempInvoice","_workItem$projectName2","_statusMap$status","invoiceData","invoiceError","invoice_number","due_date","single","dbInvoiceItems","invoice_id","unit_price","sort_order","itemsError","inv","digits","replace","parsedValue","preventDefault","selectedClientData","selectedWorkplace","_selectedClientData$n2","_selectedWorkplace$na2","updated","_updated$projectName","_updated$description","_updated$category","_toIntOrNull7","_updated$unit","_toIntOrNull8","_updated$date","_updated$notes","_toIntOrNull9","_toIntOrNull0","_toIntOrNull1","_toIntOrNull10","_statusMap$status4","eq","_selectedClientData$n3","_selectedWorkplace$na3","previousClients","nextId","_Number2","_c$projects2","_created$projectName","_created$description","_created$category","_toIntOrNull11","_created$unit","_toIntOrNull12","_created$date","_created$notes","_toIntOrNull13","_toIntOrNull14","_toIntOrNull15","_toIntOrNull16","_statusMap$status5","clientIdValue","workplaceIdValue","next","_wp$description2","hasProjectName","hasDescription","onBulkItemChange","field","existingItem","onBulkAddItem","_","_parseInt","_parseInt2","hasClientId","hasWorkplaceId","forEach","currentMaxId","_Number","bulkLP","bulkLR","createdItems","_selectedClientData$n","_selectedWorkplace$na","_item$category2","_item$unit2","_item$description2","_item$laborPersons2","_item$laborUnitRate2","_c$projects","_statusMap$status2","_item$projectName2","_item$description3","_item$category3","_toIntOrNull","_item$unit3","_toIntOrNull2","_item$date","_item$notes2","_toIntOrNull3","_toIntOrNull4","_toIntOrNull5","_toIntOrNull6","_statusMap$status3","company_name","ConfirmDialog","count","delete","WorkItemsPage","WorkItems","allIds","setSelected","every","allSelected","onlyDigits","toLocaleString","input"],"sourceRoot":""}