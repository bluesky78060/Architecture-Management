{"version":3,"file":"static/js/347.47495054.chunk.js","mappings":"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","sources":["hooks/useCalendar.ts","constants/formatting.ts","components/ConfirmDialog.tsx","components/estimates/StatsCards.tsx","components/estimates/FilterBar.tsx","components/estimates/EstimatesTable.tsx","utils/numberToKorean.ts","components/Estimates.tsx","hooks/useModalState.ts","pages/EstimatesPage.tsx","hooks/useNumberFormat.ts","hooks/useFilters.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport type UseCalendarOptions = {\n  value?: string | null;\n  onChange?: (date: string) => void;\n  closeOnSelect?: boolean;\n};\n\nexport function useCalendar(options: UseCalendarOptions = {}) {\n  const { value, onChange, closeOnSelect = true } = options;\n  const [open, setOpen] = useState(false);\n  const [month, setMonth] = useState<Date>(() => new Date());\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  // Sync month with external value\n  useEffect(() => {\n    if (value == null || value === '') return;\n    const parts = value.split('-').map((x) => parseInt(x, 10));\n    const y = parts[0];\n    const m = parts[1];\n    if (Number.isFinite(y) && Number.isFinite(m)) {\n      const ONE = 1; // eslint-disable-line no-magic-numbers\n      setMonth(new Date(y, m - ONE, ONE));\n    }\n  }, [value]);\n\n  // Close when clicking outside\n  useEffect(() => {\n    const onDoc = (e: MouseEvent) => {\n      const el = containerRef.current;\n      if (el !== null && !el.contains(e.target as Node)) setOpen(false);\n    };\n    document.addEventListener('mousedown', onDoc);\n    return () => document.removeEventListener('mousedown', onDoc);\n  }, []);\n\n  const pad2 = (n: number) => {\n    const WIDTH = 2; // eslint-disable-line no-magic-numbers\n    return String(n).padStart(WIDTH, '0');\n  };\n  const prevMonth = () => setMonth((d) => new Date(d.getFullYear(), d.getMonth() - 1, 1));\n  const nextMonth = () => setMonth((d) => new Date(d.getFullYear(), d.getMonth() + 1, 1));\n  const pickDate = (day: number | null) => {\n    if (day == null || !Number.isFinite(day) || day <= 0) return;\n    const y = month.getFullYear();\n    const m = month.getMonth() + 1;\n    const v = `${y}-${pad2(m)}-${pad2(day)}`;\n    onChange?.(v);\n    if (closeOnSelect) setOpen(false);\n  };\n\n  // Calendar grid (weeks x days)\n  const getCalendarGrid = () => {\n    const first = new Date(month.getFullYear(), month.getMonth(), 1);\n    const startDay = first.getDay();\n    const days = new Date(month.getFullYear(), month.getMonth() + 1, 0).getDate();\n    const cells: Array<number | null> = [];\n    for (let i = 0; i < startDay; i++) cells.push(null);\n    for (let d = 1; d <= days; d++) cells.push(d);\n    const rows: Array<Array<number | null>> = [];\n    const DAYS_IN_WEEK = 7; // eslint-disable-line no-magic-numbers\n    for (let i = 0; i < cells.length; i += DAYS_IN_WEEK) rows.push(cells.slice(i, i + DAYS_IN_WEEK));\n    return rows;\n  };\n\n  return {\n    open,\n    setOpen,\n    month,\n    setMonth,\n    prevMonth,\n    nextMonth,\n    pickDate,\n    getCalendarGrid,\n    containerRef,\n  };\n}\n","/**\n * Formatting constants for phone numbers and business registration\n */\nimport { MS_IN_SECOND, SECONDS_IN_MINUTE } from './units';\n\n// Phone number formatting constants\nexport const PHONE_FORMAT = {\n  SEOUL_AREA_CODE_LENGTH: 2,\n  STANDARD_AREA_CODE_LENGTH: 3,\n  MIN_DIGITS_FOR_AREA_CODE: 3,\n  MIN_DIGITS_FOR_FIRST_HYPHEN: 7,\n  MAX_PHONE_DIGITS: 11,\n  SEOUL_DIGITS_THRESHOLD: 9,\n  LAST_FOUR_DIGITS: 4,\n  SEOUL_MIDDLE_START: 2,\n  SEOUL_MIDDLE_END: 6,\n  SEOUL_TOTAL_MAX: 10,\n  STANDARD_MIDDLE_START: 3,\n  STANDARD_MIDDLE_END: 7,\n} as const;\n\n// Business registration number formatting constants\nexport const BUSINESS_NUMBER_FORMAT = {\n  MAX_DIGITS: 10,\n  FIRST_PART_LENGTH: 3,\n  SECOND_PART_LENGTH: 5,\n} as const;\n\n// File size constants\nexport const FILE_SIZE = {\n  MAX_SIZE_MB: 2,\n  BYTES_PER_MB: 1024,\n  BYTES_PER_KB: 1024,\n} as const;\n\n// Pagination constants\nexport const PAGINATION = {\n  DEFAULT_PAGE_SIZE: 20,\n  DEFAULT_PAGE: 0,\n  ITEMS_PER_PAGE: 5,\n  RECENT_ITEMS_LIMIT: 6,\n} as const;\n\n// Timeout constants (in milliseconds)\nexport const TIMEOUT = {\n  // eslint-disable-next-line no-magic-numbers\n  AUTO_SAVE_DELAY: 3 * MS_IN_SECOND,\n  // eslint-disable-next-line no-magic-numbers\n  SESSION_TIMEOUT: 60 * SECONDS_IN_MINUTE * MS_IN_SECOND, // 1 hour\n} as const;\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React from 'react';\ntype Props = {\n  open: boolean;\n  title: string;\n  message: string | React.ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\nconst ConfirmDialog_1 = _compiledBlock(_props => <div className=\"fixed inset-0 bg-black bg-opacity-30 dark:bg-black dark:bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-md p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">{_props.v0}</h3>\n        <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">{_props.v1}</div>\n        <div className=\"flex justify-end space-x-2\">\n          <button onClick={_props.v2} className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\">{_props.v3}</button>\n          <button onClick={_props.v4} className=\"px-4 py-2 bg-red-600 hover:bg-red-700 dark:bg-red-700 dark:hover:bg-red-800 text-white rounded\">{_props.v5}</button>\n        </div>\n      </div>\n    </div>, {\n  name: \"ConfirmDialog_1\",\n  portals: [\"v0\", \"v1\", \"v3\", \"v5\"]\n});\nconst ConfirmDialog: React.FC<Props> = ({\n  open,\n  title,\n  message,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel\n}) => {\n  if (!open) return null;\n  return /*@million jsx-skip*/<ConfirmDialog_1 v0={title} v1={message} v2={onCancel} v3={cancelText} v4={onConfirm} v5={confirmText} />;\n};\nexport default ConfirmDialog;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst StatsCards_1 = _compiledBlock(_props => <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n      <div className=\"bg-blue-100 dark:bg-blue-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">총 견적서</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v0}건</p>\n          </div>\n          <div className=\"bg-indigo-500 dark:bg-indigo-600 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v1}\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-green-100 dark:bg-green-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">승인된 견적서</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v2}건</p>\n          </div>\n          <div className=\"bg-green-500 dark:bg-green-600 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v3}\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-yellow-100 dark:bg-orange-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">검토 중인 견적서</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v4}건</p>\n          </div>\n          <div className=\"bg-orange-500 dark:bg-orange-600 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v5}\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-purple-100 dark:bg-purple-900/30 rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow border border-gray-100 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex-1\">\n            <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300 mb-2\">총 견적 금액</p>\n            <p className=\"text-base font-bold text-gray-900 dark:text-gray-100\">{_props.v6}원</p>\n          </div>\n          <div className=\"bg-purple-500 dark:bg-purple-600 rounded-full p-3 text-white text-xl ml-4 flex items-center justify-center w-12 h-12\">\n            {_props.v7}\n          </div>\n        </div>\n      </div>\n    </div>, {\n  name: \"StatsCards_1\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\"]\n});\nconst StatsCards = function StatsCards({\n  items,\n  format\n}: Props) {\n  const total = items.length;\n  const approved = items.filter(e => e.status === '승인됨').length;\n  const reviewing = items.filter(e => e.status === '검토중').length;\n  const totalAmount = items.reduce((sum, e) => {\n    const n = Number(e.totalAmount);\n    return sum + (Number.isFinite(n) ? n : 0);\n  }, 0);\n  return /*@million jsx-skip*/<StatsCards_1 v0={total} v1={<DocumentTextIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v2={approved} v3={<CheckCircleIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v4={reviewing} v5={<ClockIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} v6={format(totalAmount)} v7={<CurrencyDollarIcon className=\"h-6 w-6\" aria-hidden=\"true\" />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { DocumentTextIcon, CheckCircleIcon, ClockIcon, CurrencyDollarIcon } from '@heroicons/react/24/outline';\nimport type { Estimate } from '../../types/domain';\ntype Props = {\n  items: Estimate[];\n  format: (n: number) => string;\n};\nexport default StatsCards;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst FilterBar_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-md shadow-sm p-3 mb-4\">\n      <div className=\"flex items-center space-x-3 flex-wrap\">\n        <span className=\"text-xs font-medium text-gray-500 dark:text-gray-300\">필터:</span>\n        <div className=\"relative inline-flex items-center\">\n          <select id=\"estimate-client-filter\" name=\"estimate-client-filter\" value={_props.v0} onChange={_props.v1} className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0\">\n            <option value=\"\">전체 건축주</option>\n            {_props.v2}\n          </select>\n        </div>\n        <div className=\"relative inline-flex items-center\">\n          <select id=\"estimate-status-filter\" name=\"estimate-status-filter\" value={_props.v3} onChange={_props.v4} className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 pr-8 py-1.5 bg-white dark:bg-gray-700 text-xs text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-1 focus:ring-indigo-500 appearance-none cursor-pointer min-w-0\">\n            <option value=\"\">전체 상태</option>\n            {_props.v5}\n          </select>\n        </div>\n        <span className=\"text-xs text-gray-500 dark:text-gray-300\">{_props.v6}</span>\n        {_props.v7}\n      </div>\n    </div>, {\n  name: \"FilterBar_1\",\n  portals: [\"v2\", \"v5\", \"v6\", \"v7\"]\n});\nconst FilterBar = function FilterBar({\n  clients,\n  statuses,\n  selectedClient,\n  selectedStatus,\n  filteredCount,\n  totalCount,\n  onChangeClient,\n  onChangeStatus,\n  onReset\n}: Props) {\n  const hasClient = String(selectedClient ?? '') !== '';\n  const hasStatus = (selectedStatus ?? '').trim() !== '';\n  const hasFilter = hasClient || hasStatus;\n  return /*@million jsx-skip*/<FilterBar_1 v0={selectedClient == null ? '' : String(selectedClient)} v1={e => onChangeClient(e.target.value)} v2={clients.map(client => <option key={client.id} value={String(client.id)}>{client.name}</option>)} v3={selectedStatus} v4={e => onChangeStatus(e.target.value)} v5={statuses.map(s => <option key={s} value={s}>{s}</option>)} v6={hasFilter ? `${filteredCount}개` : `총 ${totalCount}개`} v7={hasFilter && <button onClick={onReset} className=\"text-xs text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 underline\">초기화</button>} />;\n};\nimport { block as _block } from \"million/react\";\nimport type { Client } from '../../types/domain';\ntype Props = {\n  clients: Client[];\n  statuses: string[];\n  selectedClient: string | number;\n  selectedStatus: string;\n  filteredCount: number;\n  totalCount: number;\n  onChangeClient: (val: string) => void;\n  onChangeStatus: (val: string) => void;\n  onReset: () => void;\n};\nexport default FilterBar;","import { compiledBlock as _compiledBlock } from \"million/react\";\nconst EstimatesTable_1 = _compiledBlock(_props => <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n      <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n        <thead className=\"bg-gray-50 dark:bg-gray-700\">\n          <tr>\n            <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-12\">\n              <input id=\"estimate-select-all\" name=\"estimate-select-all\" type=\"checkbox\" className=\"w-4 h-4 rounded border-gray-300 dark:border-gray-600\" checked={_props.v0} onChange={_props.v1} title=\"전체 선택\" />\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              견적서 번호\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              건 축 주\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              프로젝트\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              작 업 장\n            </th>\n            <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              견적 금액\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              상&nbsp;&nbsp;&nbsp;&nbsp;태\n            </th>\n            <th className=\"px-3 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n              유효기한\n            </th>\n            <th className=\"px-3 py-3 text-center text-sm font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider w-20\">\n              작&nbsp;&nbsp;&nbsp;&nbsp;업\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n          {_props.v2}\n        </tbody>\n      </table>\n    </div>, {\n  name: \"EstimatesTable_1\",\n  portals: [\"v2\"]\n});\nconst EstimatesTable = function EstimatesTable({\n  items,\n  allSelected,\n  onToggleAll,\n  onToggleOne,\n  format,\n  getStatusColor,\n  onEdit,\n  onPrint,\n  onDelete,\n  onConvert,\n  onStatusChange,\n  selectedIds,\n  statuses\n}: Props) {\n  return /*@million jsx-skip*/<EstimatesTable_1 v0={allSelected} v1={e => onToggleAll(e.target.checked)} v2={items.map((estimate, idx) => <tr key={`${estimate.id}-${idx}`} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n              <td className=\"px-3 py-2 text-left w-10\">\n                <input id={`estimate-select-${estimate.id}`} name={`estimate-select-${estimate.id}`} type=\"checkbox\" className=\"w-4 h-4 rounded border-gray-300 dark:border-gray-600\" checked={selectedIds.includes(estimate.id)} onChange={e => onToggleOne(estimate.id, e.target.checked)} title=\"선택\" />\n              </td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100\">{estimate.id}</td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100\">{estimate.clientName}</td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100\">{estimate.projectName}</td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100\">{estimate.workplaceName}</td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100 text-center\">{format(estimate.totalAmount)}원</td>\n              <td className=\"px-3 py-2 whitespace-nowrap\">\n                <select id={`estimate-status-${estimate.id}`} name={`estimate-status-${estimate.id}`} className={`px-2 py-1 text-xs font-semibold rounded-full border-0 ${getStatusColor(estimate.status)} focus:outline-none focus:ring-0`} value={estimate.status} onChange={e => onStatusChange(estimate.id, e.target.value)} title=\"견적서 상태 변경\">\n                  {statuses.map(status => <option key={status} value={status}>{status}</option>)}\n                </select>\n              </td>\n              <td className=\"px-3 py-2 text-sm text-gray-900 dark:text-gray-100\">{estimate.validUntil ?? '-'}</td>\n              <td className=\"px-3 py-2 text-center text-sm font-medium\">\n                <div className=\"flex items-center justify-center\">\n                  <Tooltip label=\"편집\"><button onClick={() => onEdit(estimate)} className=\"text-blue-600 hover:text-blue-900 mx-2\" title=\"견적서 편집\">✏️</button></Tooltip>\n                  <Tooltip label=\"출력\"><button onClick={() => onPrint(estimate)} className=\"text-green-600 hover:text-green-900 mx-2\" title=\"견적서 출력\">🖨️</button></Tooltip>\n                  <Tooltip label=\"삭제\"><button onClick={() => onDelete(estimate.id)} className=\"text-red-600 hover:text-red-900 mx-2\" title=\"견적서 삭제\">🗑️</button></Tooltip>\n                  {estimate.status === '승인됨' && <Tooltip label=\"작업 항목으로 변환\"><button onClick={() => onConvert(estimate.id)} className=\"text-purple-600 hover:text-purple-900 mx-2\" title=\"작업 항목으로 변환\">🔄</button></Tooltip>}\n                </div>\n              </td>\n            </tr>)} />;\n};\nimport { block as _block } from \"million/react\";\nimport Tooltip from '../Tooltip';\nimport type { Estimate, ID } from '../../types/domain';\ntype Props = {\n  items: Estimate[];\n  allSelected: boolean;\n  onToggleAll: (checked: boolean) => void;\n  onToggleOne: (id: ID, checked: boolean) => void;\n  format: (n: number) => string;\n  getStatusColor: (s: string) => string;\n  onEdit: (e: Estimate) => void;\n  onPrint: (e: Estimate) => void;\n  onDelete: (id: ID) => void;\n  onConvert: (id: ID) => void;\n  onStatusChange: (id: ID, status: string) => void;\n  selectedIds: ID[];\n  statuses: string[];\n};\nexport default EstimatesTable;","// 숫자를 한글로 변환하는 함수\nexport const numberToKorean = (number: number): string => {\n  if (number === 0) return '영';\n\n  const units = ['', '일', '이', '삼', '사', '오', '육', '칠', '팔', '구'];\n  const tens = ['', '십', '백', '천'];\n  const bigUnits = ['', '만', '억', '조'];\n\n  const convertGroup = (num: number): string => {\n    let result = '';\n    const digits = num.toString().split('').map(Number);\n    \n    for (let i = 0; i < digits.length; i++) {\n      const digit = digits[i];\n      const position = digits.length - 1 - i;\n      \n      if (digit === 0) continue;\n      \n      // 1의 경우 십의 자리에서는 생략\n      if (digit === 1 && position === 1 && digits.length > 1) {\n        result += tens[position];\n      } else {\n        result += units[digit] + tens[position];\n      }\n    }\n    \n    return result;\n  };\n\n  let result = '';\n  const groups: number[] = [];\n  let tempNumber = Math.abs(number);\n  \n  // 4자리씩 그룹으로 나누기\n  const GROUP_BASE = 10000; // eslint-disable-line no-magic-numbers\n  while (tempNumber > 0) {\n    groups.unshift(tempNumber % GROUP_BASE);\n    tempNumber = Math.floor(tempNumber / GROUP_BASE);\n  }\n  \n  // 각 그룹을 한글로 변환\n  for (let i = 0; i < groups.length; i++) {\n    const group = groups[i];\n    if (group === 0) continue;\n    \n    const groupText = convertGroup(group);\n    const unitIndex = groups.length - 1 - i;\n    \n    result += groupText + bigUnits[unitIndex];\n  }\n  \n  return (number < 0 ? '마이너스 ' : '') + result;\n};\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport StatsCards from './estimates/StatsCards';\nimport ConfirmDialog from './ConfirmDialog';\nimport FilterBar from './estimates/FilterBar';\nimport EstimatesTable from './estimates/EstimatesTable';\nimport { Estimate, EstimateItem, EstimateStatus } from '../types/domain';\nimport type { ID } from '../types/domain';\nimport { useCalendar } from '../hooks/useCalendar';\nimport { useApp } from '../contexts/AppContext';\nimport { useNavigate } from 'react-router-dom';\nimport { exportToExcel, importFromExcel, createTemplate } from '../utils/excelUtils';\nimport { numberToKorean } from '../utils/numberToKorean';\nimport { useNumberFormat } from '../hooks/useNumberFormat';\nimport { useFilters } from '../hooks/useFilters';\nimport { useModalState } from '../hooks/useModalState';\nimport { TIMEOUT } from '../constants/formatting';\ninterface UIState {\n  selectedIds: ID[];\n}\ninterface ModalState {\n  showModal: boolean;\n  editingEstimate: Estimate | null;\n  printEstimate: Estimate | null;\n  showConfirmDelete: boolean;\n  noDueDate: boolean;\n}\ninterface NewEstimate {\n  clientId: number | string;\n  workplaceId: number | string;\n  projectName: string;\n  title: string;\n  validUntil: string;\n  category: string;\n  status: string;\n  notes: string;\n  items: EstimateItem[];\n}\nconst Estimates_1 = _compiledBlock(_props => <div className=\"p-4\">\n      <div className=\"mb-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2\">견적서 관리</h1>\n            <p className=\"text-gray-600 dark:text-gray-300\">건축주별 견적서를 관리하고 작업 항목으로 변환하세요</p>\n          </div>\n          <div className=\"flex space-x-2\">\n            {_props.v0}\n\n            <button onClick={_props.v1} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 dark:text-gray-200 font-medium\">\n              <span className=\"text-gray-500 dark:text-gray-400 mr-2\">📁</span>\n              <span className=\"text-xs font-semibold\">템플릿 다운로드</span>\n            </button>\n\n            <button onClick={_props.v2} className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 dark:text-gray-200 font-medium\">\n              <span className=\"text-green-500 dark:text-green-400 mr-2\">📥</span>\n              <span className=\"text-xs font-semibold\">Excel 내보내기</span>\n            </button>\n\n            <label className=\"flex items-center justify-center px-4 py-2.5 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 dark:text-gray-200 font-medium cursor-pointer\">\n              <span className=\"text-blue-500 dark:text-blue-400 mr-2\">📤</span>\n              <span className=\"text-xs font-semibold\">Excel 가져오기</span>\n              <input type=\"file\" accept=\".xlsx,.xls\" onChange={_props.v3} className=\"hidden\" />\n            </label>\n\n            <button onClick={_props.v4} className=\"flex items-center justify-center px-4 py-2.5 bg-indigo-600 text-white rounded-full shadow-lg hover:bg-indigo-700 transition-colors duration-300 font-bold\">\n              <span className=\"text-yellow-300 mr-2\">✨</span>\n              <span className=\"text-xs font-bold\">새 견적서</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {_props.v5}\n\n      {_props.v6}\n\n      {_props.v7}\n\n      {_props.v8}\n\n      {_props.v9}\n\n      {_props.v10}\n\n      {/* 견적서 추가/편집 모달 */}\n      {_props.v11}\n\n      {/* PDF 인쇄용 숨겨진 컴포넌트 (Tailwind 템플릿) */}\n      <div style={_props.v12}>\n        {_props.v13}\n      </div>\n    </div>, {\n  name: \"Estimates_1\",\n  portals: [\"v0\", \"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\", \"v11\", \"v13\"]\n});\nconst Estimates: React.FC = () => {\n  const {\n    clients,\n    estimates,\n    setEstimates,\n    convertEstimateToWorkItems,\n    companyInfo,\n    units,\n    categories\n  } = useApp();\n  const navigate = useNavigate();\n  const componentRef = useRef<HTMLDivElement>(null);\n  const {\n    format,\n    parse\n  } = useNumberFormat();\n  const modals = useModalState();\n\n  // Filters and UI state\n  const filters = useFilters();\n  const [uiState, setUiState] = useState<UIState>({\n    selectedIds: []\n  });\n\n  // Consolidated modal state\n  const [modalState, setModalState] = useState<ModalState>({\n    showModal: false,\n    editingEstimate: null,\n    printEstimate: null,\n    showConfirmDelete: false,\n    noDueDate: false\n  });\n  const [newEstimate, setNewEstimate] = useState<NewEstimate>({\n    clientId: '',\n    workplaceId: '',\n    projectName: '',\n    title: '',\n    validUntil: '',\n    category: '',\n    status: '검토중',\n    notes: '',\n    items: [{\n      category: '',\n      name: '',\n      description: '',\n      quantity: '',\n      unit: '',\n      unitPrice: '',\n      notes: ''\n    }]\n  });\n  const itemsContainerRef = useRef<HTMLDivElement>(null);\n\n  // Calendar hook (유효기한)\n  const cal = useCalendar({\n    value: newEstimate.validUntil,\n    onChange: (d: string) => setNewEstimate(prev => ({\n      ...prev,\n      validUntil: d\n    }))\n  });\n\n  // 공백 정규화: 두 칸 이상 연속 공백을 한 칸으로 축소\n  const normalizeSpaces = (s: string): string => s !== '' ? s.replace(/\\u00A0/g, ' ').replace(/\\s{2,}/g, ' ').trim() : s;\n  const CALENDAR_SUNDAY_INDEX = 0;\n  const CALENDAR_SATURDAY_INDEX = 6;\n  const renderCalendarRows = (): JSX.Element[] => cal.getCalendarGrid().map((row, idx) => <tr key={idx} className=\"text-left\">\n      {row.map((d, i2) => {\n      const color = i2 === CALENDAR_SUNDAY_INDEX ? 'text-red-600' : i2 === CALENDAR_SATURDAY_INDEX ? 'text-blue-600' : '';\n      const clickable = typeof d === 'number' && d !== 0 && !Number.isNaN(d);\n      return <td key={i2} className={`px-2 py-1 ${color} ${clickable ? 'cursor-pointer hover:bg-gray-100 rounded' : ''}`} onClick={() => {\n        if (clickable) cal.pickDate(d as number);\n      }}>\n            {clickable ? d : ''}\n          </td>;\n    })}\n    </tr>);\n\n  // 새 항목 추가 시 견적 항목 리스트 내부로 스크롤 이동\n  useEffect(() => {\n    if (!modals.isOpen('estimateForm')) return;\n    const c = itemsContainerRef.current;\n    if (c !== null && c !== undefined) c.scrollTop = c.scrollHeight;\n  }, [newEstimate.items.length, modals]);\n  const statuses = ['검토중', '승인됨', '거부됨', '수정 요청', '작업 전환됨'];\n\n  // 한국어 status를 데이터베이스 영어 값으로 변환\n  const toDbStatus = (koreanStatus: string): string => {\n    const statusMap: Record<string, string> = {\n      '검토중': 'draft',\n      '승인됨': 'approved',\n      '거부됨': 'rejected',\n      '수정 요청': 'sent',\n      '작업 전환됨': 'approved'\n    };\n    return statusMap[koreanStatus] ?? 'draft';\n  };\n\n  // Auto-reset modalState.printEstimate state to prevent UI issues\n  useEffect(() => {\n    if (modalState.printEstimate === null || modalState.printEstimate === undefined) return;\n    const timer = setTimeout(() => {\n      setModalState(prev => ({\n        ...prev,\n        printEstimate: null\n      }));\n    }, TIMEOUT.AUTO_SAVE_DELAY);\n    return () => clearTimeout(timer);\n  }, [modalState.printEstimate]);\n\n  // 선택된 건축주의 작업장 목록\n  const getClientWorkplaces = (clientId: number | string) => {\n    const client = clients.find(c => c.id === parseInt(String(clientId)));\n    return client?.workplaces ?? [];\n  };\n\n  // 필터링된 견적서 목록\n  const filteredEstimates = estimates.filter(estimate => {\n    if (filters.selectedClient !== '' && estimate.clientId !== parseInt(filters.selectedClient)) return false;\n    if (filters.selectedStatus !== '' && estimate.status !== filters.selectedStatus) return false;\n    return true;\n  });\n  const allVisibleIds = filteredEstimates.map(e => e.id as ID);\n  const allSelected = uiState.selectedIds.length > 0 && uiState.selectedIds.length === allVisibleIds.length;\n  const toggleSelectAll = (checked: boolean) => setUiState(prev => ({\n    ...prev,\n    selectedIds: checked ? allVisibleIds : []\n  }));\n  const toggleSelectOne = (id: ID, checked: boolean) => setUiState(prev => ({\n    ...prev,\n    selectedIds: checked ? Array.from(new Set([...(prev.selectedIds ?? []), id])) : (prev.selectedIds ?? []).filter(x => x !== id)\n  }));\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const MIN_VALID_ID = 0;\n    const parsedId = parseInt(value);\n    const newValue = name === 'clientId' || name === 'workplaceId' ? parsedId !== MIN_VALID_ID && !isNaN(parsedId) ? parsedId : MIN_VALID_ID : value;\n    setNewEstimate(prev => {\n      const updated = {\n        ...prev,\n        [name]: newValue\n      };\n      if (name === 'clientId') {\n        updated.workplaceId = '';\n      }\n      if (name === 'workplaceId') {\n        const client = clients.find(c => c.id === (typeof prev.clientId === 'string' ? parseInt(prev.clientId) : prev.clientId));\n        const wp = client?.workplaces?.find(w => w.id === (typeof newValue === 'string' ? parseInt(newValue) : newValue));\n        if (updated.projectName === '' && wp?.description !== null && wp?.description !== undefined && wp?.description !== '') {\n          updated.projectName = wp.description;\n        }\n      }\n      return updated;\n    });\n  };\n  const handleItemChange = (index: number, field: keyof EstimateItem | 'category', value: string) => {\n    const updatedItems = [...newEstimate.items];\n    const MIN_VALUE = 0;\n    const BASE_TEN = 10;\n    if (field === 'unitPrice' || field === 'quantity') {\n      const digits = String(value ?? '').replace(/[^\\d-]/g, '');\n      if (digits === '' || digits === '-') {\n        updatedItems[index][field] = '';\n      } else {\n        updatedItems[index][field] = parse(value);\n      }\n      const qParsed = parseInt(String(updatedItems[index].quantity ?? MIN_VALUE), BASE_TEN);\n      const pParsed = parseInt(String(updatedItems[index].unitPrice ?? MIN_VALUE), BASE_TEN);\n      const q = qParsed !== MIN_VALUE && !isNaN(qParsed) ? qParsed : MIN_VALUE;\n      const p = pParsed !== MIN_VALUE && !isNaN(pParsed) ? pParsed : MIN_VALUE;\n      updatedItems[index].total = q * p;\n    } else {\n      if (field === 'name' || field === 'description' || field === 'unit' || field === 'notes' || field === 'category') {\n        // These keys are string fields on EstimateItem or UI-only 'category'\n        (updatedItems[index] as unknown as Record<string, unknown>)[field] = value;\n      }\n    }\n    setNewEstimate(prev => ({\n      ...prev,\n      items: updatedItems\n    }));\n  };\n  const addItem = () => {\n    setNewEstimate(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        category: '',\n        name: '',\n        description: '',\n        quantity: '',\n        unit: '',\n        unitPrice: '',\n        notes: ''\n      }]\n    }));\n  };\n  const removeItem = (index: number) => {\n    if (newEstimate.items.length > 1) {\n      setNewEstimate(prev => ({\n        ...prev,\n        items: prev.items.filter((_, i) => i !== index)\n      }));\n    }\n  };\n  const calculateTotal = (): number => {\n    const MIN_VALUE = 0;\n    const BASE_TEN = 10;\n    return newEstimate.items.reduce((sum, item) => {\n      const qParsed = parseInt(String(item.quantity ?? MIN_VALUE), BASE_TEN);\n      const pParsed = parseInt(String(item.unitPrice ?? MIN_VALUE), BASE_TEN);\n      const q = qParsed !== MIN_VALUE && !isNaN(qParsed) ? qParsed : MIN_VALUE;\n      const p = pParsed !== MIN_VALUE && !isNaN(pParsed) ? pParsed : MIN_VALUE;\n      return sum + q * p;\n    }, MIN_VALUE);\n  };\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!modalState.noDueDate) {\n      if (newEstimate.validUntil === '' || !/^\\d{4}-\\d{2}-\\d{2}$/.test(String(newEstimate.validUntil))) {\n        alert('유효기한을 YYYY-MM-DD 형식으로 입력하세요.');\n        return;\n      }\n    }\n    const MIN_VALUE = 0;\n    const FIRST_ITEM_INDEX = 1;\n    for (let i = 0; i < newEstimate.items.length; i++) {\n      const it = newEstimate.items[i];\n      const q = it.quantity === '' ? MIN_VALUE : Number(it.quantity ?? MIN_VALUE);\n      const p = it.unitPrice === '' ? MIN_VALUE : Number(it.unitPrice ?? MIN_VALUE);\n      if (q === MIN_VALUE || isNaN(q) || q <= MIN_VALUE) {\n        alert(`항목 #${i + FIRST_ITEM_INDEX}: 수량을 입력하세요.`);\n        return;\n      }\n      if (p === MIN_VALUE || isNaN(p) || p <= MIN_VALUE) {\n        alert(`항목 #${i + FIRST_ITEM_INDEX}: 단가를 입력하세요.`);\n        return;\n      }\n    }\n    const selectedClientData = clients.find(c => c.id === newEstimate.clientId);\n    const selectedWorkplaceData = getClientWorkplaces(newEstimate.clientId).find(wp => wp.id === newEstimate.workplaceId);\n    const ESTIMATE_ID_PAD_LENGTH = 3;\n    const PAD_CHAR = '0';\n    const DEFAULT_QUANTITY = 1;\n    const estimateData = {\n      id: modalState.editingEstimate !== null && modalState.editingEstimate !== undefined ? modalState.editingEstimate.id : `EST-${new Date().getFullYear()}-${String(estimates.length + 1).padStart(ESTIMATE_ID_PAD_LENGTH, PAD_CHAR)}`,\n      clientId: Number(newEstimate.clientId),\n      workplaceId: Number(newEstimate.workplaceId),\n      clientName: selectedClientData?.name ?? '',\n      workplaceName: selectedWorkplaceData?.name ?? '',\n      workplaceAddress: selectedWorkplaceData?.address ?? '',\n      date: modalState.editingEstimate !== null && modalState.editingEstimate !== undefined ? modalState.editingEstimate.date : new Date().toISOString().split('T')[0],\n      totalAmount: calculateTotal(),\n      projectName: newEstimate.projectName,\n      title: newEstimate.title,\n      validUntil: newEstimate.validUntil,\n      status: newEstimate.status,\n      notes: newEstimate.notes,\n      items: newEstimate.items.map((item, index) => {\n        const FIRST_INDEX = 1;\n        const priceNum = Number(item.unitPrice);\n        const qtyNum = Number(item.quantity);\n        const price = priceNum !== MIN_VALUE && !isNaN(priceNum) ? priceNum : MIN_VALUE;\n        const qty = qtyNum !== MIN_VALUE && !isNaN(qtyNum) ? qtyNum : DEFAULT_QUANTITY;\n        return {\n          ...item,\n          id: index + FIRST_INDEX,\n          total: price * qty\n        };\n      })\n    } as Estimate;\n    if (modalState.editingEstimate !== null && modalState.editingEstimate !== undefined) {\n      // 이전 상태 백업 (롤백용)\n      const previousEstimates = estimates;\n\n      // 수정: UI 즉시 업데이트 (낙관적 업데이트)\n      setEstimates(prev => prev.map(est => est.id === modalState.editingEstimate?.id ? estimateData : est));\n\n      // Supabase에도 즉시 업데이트 (estimates + estimate_items)\n      try {\n        const {\n          supabase\n        } = await import('../services/supabase');\n        if (supabase === null || supabase === undefined) {\n          // Supabase 초기화 실패 시 롤백\n          setEstimates(previousEstimates);\n          alert('데이터베이스 연결에 실패했습니다.');\n          return;\n        }\n\n        // 1. estimates 테이블 업데이트\n        // workplace_id: 0 또는 NaN은 null로 변환\n        const validWorkplaceId = typeof estimateData.workplaceId === 'number' && estimateData.workplaceId > 0 && !isNaN(estimateData.workplaceId) ? estimateData.workplaceId : null;\n        const {\n          data: updatedEstimate,\n          error: estError\n        } = await supabase.from('estimates').update({\n          client_id: estimateData.clientId,\n          client_name: estimateData.clientName ?? '',\n          workplace_id: validWorkplaceId,\n          workplace_name: estimateData.workplaceName ?? '',\n          project_name: estimateData.projectName ?? '',\n          title: estimateData.title ?? '',\n          date: estimateData.date,\n          valid_until: estimateData.validUntil ?? null,\n          status: toDbStatus(estimateData.status),\n          notes: estimateData.notes ?? '',\n          total_amount: estimateData.totalAmount\n        }).eq('estimate_number', estimateData.id).select('estimate_id').single();\n        if (estError !== null && estError !== undefined) {\n          // 오류 발생 시 롤백\n          setEstimates(previousEstimates);\n          // eslint-disable-next-line no-console\n          console.error('견적서 수정 오류 상세:', {\n            message: estError.message,\n            details: estError.details,\n            hint: estError.hint,\n            code: estError.code,\n            전송데이터: {\n              estimate_number: estimateData.id,\n              client_id: estimateData.clientId,\n              client_name: estimateData.clientName,\n              workplace_id: validWorkplaceId,\n              workplace_name: estimateData.workplaceName,\n              project_name: estimateData.projectName,\n              title: estimateData.title,\n              date: estimateData.date,\n              valid_until: estimateData.validUntil,\n              status: estimateData.status,\n              notes: estimateData.notes,\n              total_amount: estimateData.totalAmount\n            }\n          });\n          alert(`견적서 수정 중 오류가 발생했습니다: ${estError.message}\\n\\n콘솔(F12)을 열어 상세 정보를 확인하세요.`);\n          return;\n        }\n\n        // 2. 기존 estimate_items 삭제\n        if (updatedEstimate === null || updatedEstimate === undefined) {\n          setEstimates(previousEstimates);\n          alert('견적서 수정 중 오류가 발생했습니다.');\n          return;\n        }\n        await supabase.from('estimate_items').delete().eq('estimate_id', updatedEstimate.estimate_id);\n\n        // 3. 새로운 estimate_items 삽입\n        const FIRST_INDEX = 1;\n        const itemsToInsert = estimateData.items.map((item, index) => ({\n          estimate_id: updatedEstimate.estimate_id,\n          item_id: index + FIRST_INDEX,\n          category: item.category ?? '',\n          name: item.name,\n          description: item.description ?? '',\n          quantity: item.quantity ?? 0,\n          unit: item.unit ?? '',\n          unit_price: item.unitPrice ?? 0,\n          total: item.total ?? 0,\n          notes: item.notes ?? ''\n        }));\n        const {\n          error: itemsError\n        } = await supabase.from('estimate_items').insert(itemsToInsert);\n        if (itemsError !== null && itemsError !== undefined) {\n          // 오류 발생 시 롤백\n          setEstimates(previousEstimates);\n          alert(`견적서 항목 저장 중 오류가 발생했습니다: ${itemsError.message}`);\n          return;\n        }\n      } catch (err) {\n        // 예외 발생 시 롤백\n        setEstimates(previousEstimates);\n        alert('견적서 수정 중 예상치 못한 오류가 발생했습니다.');\n        return;\n      }\n    } else {\n      // 이전 상태 백업 (롤백용)\n      const previousEstimates = estimates;\n\n      // 생성: UI 즉시 업데이트 (낙관적 업데이트)\n      setEstimates(prev => [...prev, estimateData]);\n\n      // Supabase에도 즉시 생성 (estimates + estimate_items)\n      try {\n        const {\n          supabase\n        } = await import('../services/supabase');\n        if (supabase === null || supabase === undefined) {\n          // Supabase 초기화 실패 시 롤백\n          setEstimates(previousEstimates);\n          alert('데이터베이스 연결에 실패했습니다.');\n          return;\n        }\n        const {\n          getCurrentUserId\n        } = await import('../services/supabase');\n        const userId = await getCurrentUserId();\n\n        // 1. estimates 테이블 삽입\n        // workplace_id: 0 또는 NaN은 null로 변환\n        const validWorkplaceId = typeof estimateData.workplaceId === 'number' && estimateData.workplaceId > 0 && !isNaN(estimateData.workplaceId) ? estimateData.workplaceId : null;\n        const {\n          data: insertedEstimate,\n          error: estError\n        } = await supabase.from('estimates').insert({\n          estimate_number: estimateData.id,\n          user_id: userId,\n          client_id: estimateData.clientId,\n          client_name: estimateData.clientName ?? '',\n          workplace_id: validWorkplaceId,\n          workplace_name: estimateData.workplaceName ?? '',\n          project_name: estimateData.projectName ?? '',\n          title: estimateData.title ?? '',\n          date: estimateData.date,\n          valid_until: estimateData.validUntil ?? null,\n          status: toDbStatus(estimateData.status),\n          notes: estimateData.notes ?? '',\n          total_amount: estimateData.totalAmount\n        }).select('estimate_id').single();\n        if (estError !== null && estError !== undefined) {\n          // 오류 발생 시 롤백\n          setEstimates(previousEstimates);\n          // eslint-disable-next-line no-console\n          console.error('견적서 생성 오류 상세:', {\n            message: estError.message,\n            details: estError.details,\n            hint: estError.hint,\n            code: estError.code,\n            전송데이터: {\n              estimate_number: estimateData.id,\n              user_id: userId,\n              client_id: estimateData.clientId,\n              client_name: estimateData.clientName,\n              workplace_id: validWorkplaceId,\n              workplace_name: estimateData.workplaceName,\n              project_name: estimateData.projectName,\n              title: estimateData.title,\n              date: estimateData.date,\n              valid_until: estimateData.validUntil,\n              status: estimateData.status,\n              notes: estimateData.notes,\n              total_amount: estimateData.totalAmount\n            }\n          });\n          alert(`견적서 생성 중 오류가 발생했습니다: ${estError.message}\\n\\n콘솔(F12)을 열어 상세 정보를 확인하세요.`);\n          return;\n        }\n\n        // 2. estimate_items 삽입\n        if (insertedEstimate === null || insertedEstimate === undefined) {\n          setEstimates(previousEstimates);\n          alert('견적서 생성 중 오류가 발생했습니다.');\n          return;\n        }\n        const FIRST_INDEX_INSERT = 1;\n        const itemsToInsert = estimateData.items.map((item, index) => ({\n          estimate_id: insertedEstimate.estimate_id,\n          item_id: index + FIRST_INDEX_INSERT,\n          category: item.category ?? '',\n          name: item.name,\n          description: item.description ?? '',\n          quantity: item.quantity ?? 0,\n          unit: item.unit ?? '',\n          unit_price: item.unitPrice ?? 0,\n          total: item.total ?? 0,\n          notes: item.notes ?? ''\n        }));\n        const {\n          error: itemsError\n        } = await supabase.from('estimate_items').insert(itemsToInsert);\n        if (itemsError !== null && itemsError !== undefined) {\n          // 오류 발생 시 롤백\n          setEstimates(previousEstimates);\n          alert(`견적서 항목 생성 중 오류가 발생했습니다: ${itemsError.message}`);\n          return;\n        }\n      } catch (err) {\n        // 예외 발생 시 롤백\n        setEstimates(previousEstimates);\n        alert('견적서 생성 중 예상치 못한 오류가 발생했습니다.');\n        return;\n      }\n    }\n    resetForm();\n  };\n  const resetForm = () => {\n    setNewEstimate({\n      clientId: '',\n      workplaceId: '',\n      projectName: '',\n      title: '',\n      validUntil: '',\n      category: '',\n      status: '검토중',\n      notes: '',\n      items: [{\n        category: '',\n        name: '',\n        description: '',\n        quantity: '',\n        unit: '',\n        unitPrice: '',\n        notes: ''\n      }]\n    });\n    setModalState(prev => ({\n      ...prev,\n      editingEstimate: null\n    }));\n    modals.close('estimateForm');\n  };\n  const handleEdit = (estimate: Estimate) => {\n    setNewEstimate({\n      clientId: estimate.clientId,\n      workplaceId: estimate.workplaceId !== null && estimate.workplaceId !== undefined && estimate.workplaceId !== 0 && !isNaN(estimate.workplaceId) ? estimate.workplaceId : '',\n      projectName: estimate.projectName !== null && estimate.projectName !== undefined && estimate.projectName !== '' ? estimate.projectName : '',\n      title: estimate.title !== null && estimate.title !== undefined && estimate.title !== '' ? estimate.title : '',\n      validUntil: estimate.validUntil ?? '',\n      category: '',\n      status: estimate.status,\n      notes: estimate.notes !== null && estimate.notes !== undefined && estimate.notes !== '' ? estimate.notes : '',\n      items: estimate.items.map(item => ({\n        category: item.category,\n        name: item.name,\n        description: item.description,\n        quantity: item.quantity,\n        unit: item.unit,\n        unitPrice: item.unitPrice,\n        notes: item.notes !== null && item.notes !== undefined && item.notes !== '' ? item.notes : ''\n      }))\n    });\n    setModalState(prev => ({\n      ...prev,\n      editingEstimate: estimate,\n      noDueDate: estimate.validUntil === '' || estimate.validUntil === null || estimate.validUntil === undefined\n    }));\n    modals.open('estimateForm');\n  };\n  const [pendingDeleteId, setPendingDeleteId] = useState<ID | null>(null);\n  const [pendingConvertId, setPendingConvertId] = useState<ID | null>(null);\n  const handleDelete = (id: ID) => {\n    setPendingDeleteId(id);\n  };\n  const handleBulkDelete = async () => {\n    if (uiState.selectedIds.length === 0) return;\n\n    // UI에서 즉시 제거\n    setEstimates(prev => prev.filter(est => !uiState.selectedIds.includes(est.id)));\n    setUiState(prev => ({\n      ...prev,\n      selectedIds: []\n    }));\n    setModalState(prev => ({\n      ...prev,\n      showConfirmDelete: false\n    }));\n\n    // Supabase에서도 즉시 삭제 (estimate_items도 CASCADE로 자동 삭제됨)\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('estimates').delete().in('estimate_number', uiState.selectedIds);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const handleConvertToWorkItems = (estimateId: ID) => {\n    setPendingConvertId(estimateId);\n  };\n  const confirmDeleteSingle = async () => {\n    if (pendingDeleteId == null) return;\n\n    // UI에서 즉시 제거\n    setEstimates(prev => prev.filter(estimate => estimate.id !== String(pendingDeleteId)));\n    setPendingDeleteId(null);\n\n    // Supabase에서도 즉시 삭제 (estimate_items도 CASCADE로 자동 삭제됨)\n    try {\n      const {\n        supabase\n      } = await import('../services/supabase');\n      if (supabase === null || supabase === undefined) return;\n      const {\n        error\n      } = await supabase.from('estimates').delete().eq('estimate_number', pendingDeleteId);\n      if (error !== null && error !== undefined) {\n        // 오류 발생\n      }\n    } catch (err) {\n      // 실패\n    }\n  };\n  const confirmConvertSingle = () => {\n    if (pendingConvertId == null) return;\n    const convertedItems = convertEstimateToWorkItems(String(pendingConvertId));\n    setPendingConvertId(null);\n    alert(`${convertedItems.length}개의 작업 항목이 생성되었습니다.`);\n    navigate('/work-items');\n  };\n  const handlePrint = (estimate: Estimate) => {\n    try {\n      const payload = {\n        estimate,\n        companyInfo\n      };\n      try {\n        localStorage.setItem('quotationPrintData', JSON.stringify(payload));\n      } catch (_) {}\n      const estimateJson = JSON.stringify(payload);\n      const resolveBaseUrl = (): string => {\n        const pub = process.env.PUBLIC_URL;\n        if (typeof pub === 'string' && pub.trim() !== '') {\n          try {\n            const u = new URL(pub, window.location.origin);\n            let path = u.pathname;\n            if (path.length > 1 && path.endsWith('/')) path = path.slice(0, -1);\n            return `${window.location.origin}${path}`;\n          } catch {\n            let path = pub.trim();\n            if (!path.startsWith('/')) path = `/${path}`;\n            if (path.length > 1 && path.endsWith('/')) path = path.slice(0, -1);\n            return `${window.location.origin}${path}`;\n          }\n        }\n        return window.location.origin;\n      };\n      const quotationUrl = `${resolveBaseUrl()}/quotation-output.html?id=${estimate.id}&data=${encodeURIComponent(estimateJson)}`;\n      const printWindow = window.open(quotationUrl, '_blank', 'width=1200,height=800,scrollbars=yes,resizable=yes');\n      const FOCUS_DELAY_MS = 500;\n      if (printWindow === null || printWindow === undefined) {\n        alert('팝업이 차단되었습니다. 브라우저 설정에서 팝업을 허용해주세요.');\n        return;\n      }\n      setTimeout(() => {\n        try {\n          printWindow.focus();\n        } catch (_) {}\n      }, FOCUS_DELAY_MS);\n    } catch (_) {\n      alert('출력 화면을 여는 중 오류가 발생했습니다.');\n    }\n  };\n  const handleExportToExcel = () => {\n    exportToExcel.estimates(estimates);\n  };\n  const handleImportFromExcel = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file === null || file === undefined) return;\n    try {\n      const importedEstimates = await importFromExcel.estimates(file);\n      setEstimates(prev => {\n        const MIN_VALUE = 0;\n        const normalized = (importedEstimates ?? []).map((e: Partial<Estimate>, idx: number) => ({\n          id: String(e?.id ?? `EST-IMP-${Date.now()}-${idx}`),\n          clientId: Number(e?.clientId ?? MIN_VALUE),\n          clientName: e?.clientName ?? '',\n          workplaceId: e?.workplaceId !== null && e?.workplaceId !== undefined ? Number(e.workplaceId) : undefined,\n          workplaceName: e?.workplaceName ?? '',\n          workplaceAddress: e?.workplaceAddress ?? '',\n          projectName: e?.projectName ?? '',\n          title: e?.title !== null && e?.title !== undefined && e?.title !== '' ? e.title : e?.projectName !== null && e?.projectName !== undefined && e?.projectName !== '' ? e.projectName : '견적',\n          date: e?.date,\n          validUntil: e?.validUntil,\n          status: e?.status as EstimateStatus ?? '임시저장',\n          totalAmount: Number(e?.totalAmount ?? MIN_VALUE),\n          notes: e?.notes ?? '',\n          items: Array.isArray(e?.items) ? e.items.map((it: Partial<EstimateItem>) => ({\n            category: it?.category,\n            name: String(it?.name ?? ''),\n            description: it?.description,\n            quantity: typeof it?.quantity === 'number' || it?.quantity === '' ? it.quantity : MIN_VALUE,\n            unit: it?.unit,\n            unitPrice: typeof it?.unitPrice === 'number' || it?.unitPrice === '' ? it.unitPrice : MIN_VALUE,\n            total: typeof it?.total === 'number' ? it.total : undefined,\n            notes: it?.notes\n          })) : []\n        }));\n        return [...prev, ...normalized];\n      });\n      alert(`${importedEstimates.length}개의 견적서를 성공적으로 가져왔습니다.`);\n    } catch (error) {\n      alert('파일을 가져오는 중 오류가 발생했습니다.');\n    }\n    e.target.value = '';\n  };\n  const handleDownloadTemplate = () => {\n    createTemplate.estimates();\n  };\n  const handleStatusChange = (id: ID, newStatus: string) => {\n    setEstimates(prev => prev.map(est => est.id === id ? {\n      ...est,\n      status: newStatus as EstimateStatus\n    } : est));\n  };\n  const getStatusColor = (status: string) => {\n    const colors: Record<string, string> = {\n      '검토중': 'bg-yellow-100 text-yellow-800',\n      '승인됨': 'bg-green-100 text-green-800',\n      '거부됨': 'bg-red-100 text-red-800',\n      '수정 요청': 'bg-blue-100 text-blue-800',\n      '작업 전환됨': 'bg-purple-100 text-purple-800'\n    };\n    return colors[status] !== null && colors[status] !== undefined && colors[status] !== '' ? colors[status] : 'bg-gray-100 text-gray-800';\n  };\n  return /*@million jsx-skip*/<Estimates_1 v0={uiState.selectedIds.length > 0 && <button onClick={() => modals.open('confirmDelete')} className=\"flex items-center justify-center px-4 py-2.5 bg-white border border-red-200 rounded-full shadow-sm hover:shadow-md transition-shadow duration-300 text-gray-700 font-medium\">\n                <span className=\"text-red-600 mr-2\">🗑️</span>\n                <span className=\"text-xs font-semibold\">삭제 ({uiState.selectedIds.length})</span>\n              </button>} v1={handleDownloadTemplate} v2={handleExportToExcel} v3={handleImportFromExcel} v4={() => {\n    setModalState(prev => ({\n      ...prev,\n      editingEstimate: null\n    }));\n    modals.open('estimateForm');\n  }} v5={<StatsCards items={filteredEstimates} format={format} />} v6={<FilterBar clients={clients} statuses={statuses} selectedClient={filters.selectedClient} selectedStatus={filters.selectedStatus} filteredCount={filteredEstimates.length} totalCount={estimates.length} onChangeClient={val => filters.setSelectedClient(val)} onChangeStatus={val => filters.setSelectedStatus(val)} onReset={() => {\n    filters.reset();\n    setUiState({\n      selectedIds: []\n    });\n  }} />} v7={<EstimatesTable items={filteredEstimates} allSelected={allSelected} onToggleAll={toggleSelectAll} onToggleOne={toggleSelectOne} format={format} getStatusColor={getStatusColor} onEdit={handleEdit} onPrint={handlePrint} onDelete={handleDelete} onConvert={handleConvertToWorkItems} onStatusChange={handleStatusChange} selectedIds={uiState.selectedIds} statuses={statuses} />} v8={modals.isOpen('confirmDelete') && <div className=\"fixed inset-0 bg-black bg-opacity-30 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">선택 삭제</h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">선택된 {uiState.selectedIds.length}개의 견적서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.</p>\n            <div className=\"flex justify-end gap-2\">\n              <button className=\"btn-secondary\" onClick={() => modals.close('confirmDelete')}>취소</button>\n              <button className=\"btn-primary bg-red-600 hover:bg-red-700\" onClick={handleBulkDelete}>삭제</button>\n            </div>\n          </div>\n        </div>} v9={<ConfirmDialog open={pendingDeleteId != null} title=\"견적서 삭제\" message={`이 견적서를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmDeleteSingle} onCancel={() => setPendingDeleteId(null)} />} v10={<ConfirmDialog open={pendingConvertId != null} title=\"작업 항목으로 변환\" message={`이 견적서를 작업 항목으로 변환하시겠습니까?`} confirmText=\"변환\" cancelText=\"취소\" onConfirm={confirmConvertSingle} onCancel={() => setPendingConvertId(null)} />} v11={modals.isOpen('estimateForm') && <div className=\"fixed inset-0 bg-gray-800/50 backdrop-blur-sm overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-6 mx-auto w-[1100px] max-w-[96vw] shadow-2xl rounded-2xl bg-white/80 dark:bg-gray-800/80 ring-1 ring-black/5 mb-8\">\n            <div className=\"rounded-t-2xl bg-gradient-to-br from-indigo-50 via-purple-50 to-white dark:bg-gradient-to-br dark:from-gray-800 dark:via-gray-700 dark:to-gray-800 px-8 pt-8 pb-6 text-center\">\n              <h3 className=\"text-2xl font-extrabold tracking-tight text-indigo-600 dark:text-indigo-400\">\n                {modalState.editingEstimate !== null && modalState.editingEstimate !== undefined ? '견적서 편집' : '새 견적서 작성'}\n              </h3>\n              <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-300\">견적 기본정보와 항목을 입력하세요</p>\n            </div>\n            <div className=\"px-6 pb-6\">\n              <form id=\"estimate-form\" onSubmit={handleSubmit} className=\"space-y-3\">\n                \n                {/* 기본 정보 */}\n                <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-4\">\n                  <div className=\"flex items-center mb-3 gap-3\">\n                    <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-indigo-50 dark:bg-indigo-900 text-indigo-600 dark:text-indigo-400\">📄</span>\n                    <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">기본 정보</h4>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <div>\n                      <label htmlFor=\"estimate-client\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">건축주</label>\n                      <select id=\"estimate-client\" name=\"clientId\" value={newEstimate.clientId} onChange={handleInputChange} className=\"mt-1 block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                        <option value=\"\">건축주 선택</option>\n                        {clients.map(client => <option key={client.id} value={client.id}>{client.name}</option>)}\n                      </select>\n                    </div>\n                    <div>\n                      <label htmlFor=\"estimate-workplace\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">작업장</label>\n                      <select id=\"estimate-workplace\" name=\"workplaceId\" value={newEstimate.workplaceId} onChange={handleInputChange} className=\"mt-1 block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required disabled={typeof newEstimate.clientId === 'string' ? newEstimate.clientId === '' : newEstimate.clientId === 0 || isNaN(newEstimate.clientId)}>\n                        <option value=\"\">{(typeof newEstimate.clientId === 'string' ? newEstimate.clientId !== '' : newEstimate.clientId !== 0 && !isNaN(newEstimate.clientId)) ? '작업장 선택' : '작업장 선택(먼저 건축주를 선택하세요)'}</option>\n                        {(typeof newEstimate.clientId === 'string' ? newEstimate.clientId !== '' : newEstimate.clientId !== 0 && !isNaN(newEstimate.clientId)) && getClientWorkplaces(newEstimate.clientId).map(workplace => <option key={workplace.id} value={workplace.id}>\n                            {workplace.name} - {workplace.address}\n                          </option>)}\n                      </select>\n                    </div>\n                    <div>\n                      <label htmlFor=\"estimate-project\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">프로젝트명</label>\n                      <input id=\"estimate-project\" type=\"text\" name=\"projectName\" value={newEstimate.projectName} onChange={handleInputChange} className=\"mt-1 block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                    </div>\n                    <div>\n                      <label htmlFor=\"estimate-title\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">견적서 제목</label>\n                      <input id=\"estimate-title\" type=\"text\" name=\"title\" value={newEstimate.title} onChange={handleInputChange} className=\"mt-1 block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                    </div>\n                    <div>\n                      <label htmlFor=\"estimate-valid-until\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">유효기한</label>\n                      <div className=\"mt-1 relative inline-block\" ref={cal.containerRef}>\n                        <div className=\"flex items-center gap-2\">\n                          <input id=\"estimate-valid-until\" type=\"text\" name=\"validUntil\" value={newEstimate.validUntil} onChange={handleInputChange} placeholder=\"YYYY-MM-DD\" inputMode=\"numeric\" className=\"block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 placeholder-gray-400\" onFocus={() => !modalState.noDueDate && cal.setOpen(true)} disabled={modalState.noDueDate} required={!modalState.noDueDate} />\n                          <button type=\"button\" className=\"px-2 py-2 text-gray-600 hover:text-gray-800\" onClick={() => !modalState.noDueDate && cal.setOpen(v => !v)} title=\"달력 열기\" disabled={modalState.noDueDate}>\n                            📅\n                          </button>\n              <label htmlFor=\"estimate-no-due-date\" className=\"flex items-center gap-1 text-xs text-gray-600 select-none\">\n                <input id=\"estimate-no-due-date\" name=\"estimate-no-due-date\" type=\"checkbox\" checked={modalState.noDueDate} onChange={e => {\n                        const checked = e.target.checked;\n                        setModalState(prev => ({\n                          ...prev,\n                          noDueDate: checked\n                        }));\n                        if (checked) {\n                          cal.setOpen(false);\n                          setNewEstimate(prev => ({\n                            ...prev,\n                            validUntil: ''\n                          }));\n                        }\n                      }} />\n                유효기간 선택 안함\n              </label>\n              {modalState.noDueDate && <div className=\"text-[11px] text-gray-500 mt-1\">\n                  유효기한 없이 발행됩니다. 견적 조건을 비고에 명시하세요.\n                </div>}\n                        </div>\n                        {cal.open && <div className=\"absolute z-50 bg-white border border-gray-300 rounded-md shadow-lg mt-2 p-3\" style={{\n                    transform: 'scale(1)',\n                    transformOrigin: 'top left'\n                  }}>\n                            <div className=\"flex items-center justify-between mb-2\">\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={cal.prevMonth}>◀</button>\n                              <div className=\"text-sm font-medium\">\n                                {cal.month.getFullYear()}년 {cal.month.getMonth() + 1}월\n                              </div>\n                              <button type=\"button\" className=\"px-2 py-1 text-sm border rounded\" onClick={cal.nextMonth}>▶</button>\n                            </div>\n                            <table className=\"text-xs select-none\">\n                              <thead>\n                                <tr className=\"text-left text-gray-600\">\n                                  {['일', '월', '화', '수', '목', '금', '토'].map((d, idx) => <th key={d} className={`px-2 py-1 ${idx === CALENDAR_SUNDAY_INDEX ? 'text-red-600' : idx === CALENDAR_SATURDAY_INDEX ? 'text-blue-600' : ''}`}>{d}</th>)}\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {renderCalendarRows()}\n                              </tbody>\n                            </table>\n                          </div>}\n                      </div>\n                    </div>\n                    <div className=\"col-span-2\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">상태</label>\n                      <div className=\"flex flex-wrap gap-1.5\">\n                        {statuses.map(s => {\n                    const active = newEstimate.status === s;\n                    const classes = active ? 'bg-indigo-600 dark:bg-indigo-500 text-white border-transparent shadow' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600';\n                    return <button key={s} type=\"button\" onClick={() => setNewEstimate(prev => ({\n                      ...prev,\n                      status: s\n                    }))} className={`px-3 py-1.5 rounded-full text-sm transition ${classes}`} aria-pressed={active}>\n                              {s}\n                            </button>;\n                  })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* 견적 항목들 */}\n                <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <div className=\"flex items-center gap-3\">\n                      <span className=\"inline-flex h-7 w-7 items-center justify-center rounded-full bg-green-50 dark:bg-green-900 text-green-600 dark:text-green-400\">🗂️</span>\n                      <h4 className=\"text-base font-semibold text-gray-900 dark:text-gray-100\">견적 항목</h4>\n                    </div>\n                    <button type=\"button\" onClick={addItem} className=\"text-indigo-600 hover:text-indigo-800 text-sm\">\n                      + 항목 추가\n                    </button>\n                  </div>\n                  \n                  <div ref={itemsContainerRef} className=\"space-y-3 max-h-96 overflow-y-auto pr-1\">\n                    {newEstimate.items.map((item, index) => <div key={index} className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-3 bg-gray-50 dark:bg-gray-800\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">항목 #{index + 1}</span>\n                          {newEstimate.items.length > 1 && <button type=\"button\" onClick={() => removeItem(index)} className=\"text-red-600 hover:text-red-800 text-sm\">\n                              삭제\n                            </button>}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-3 gap-2 mb-2\">\n                          <div>\n                            <label htmlFor={`estimate-item-category-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">카테고리</label>\n                            <select id={`estimate-item-category-${index}`} name={`estimate-item-category-${index}`} value={item.category} onChange={e => handleItemChange(index, 'category', e.target.value)} className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                              <option value=\"\">카테고리 선택</option>\n                              {categories.map(cat => <option key={cat} value={cat}>{cat}</option>)}\n                            </select>\n                          </div>\n                          <div>\n                            <label htmlFor={`estimate-item-name-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">내용</label>\n                            <input id={`estimate-item-name-${index}`} name={`estimate-item-name-${index}`} type=\"text\" value={item.name} onChange={e => handleItemChange(index, 'name', e.target.value)} className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                          </div>\n                          <div>\n                            <label htmlFor={`estimate-item-description-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">설명</label>\n                            <input id={`estimate-item-description-${index}`} name={`estimate-item-description-${index}`} type=\"text\" value={item.description} onChange={e => handleItemChange(index, 'description', e.target.value)} className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                          </div>\n                        </div>\n\n                        <div className=\"grid grid-cols-4 gap-2 mb-2\">\n                          <div>\n                            <label htmlFor={`estimate-item-quantity-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">수량</label>\n                            <input id={`estimate-item-quantity-${index}`} name={`estimate-item-quantity-${index}`} type=\"text\" value={item.quantity === '' ? '' : format(Number(item.quantity))} onChange={e => handleItemChange(index, 'quantity', e.target.value)} onFocus={e => e.target.select()} placeholder=\"0\" className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                          </div>\n                          <div>\n                            <label htmlFor={`estimate-item-unitprice-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">단가</label>\n                            <input id={`estimate-item-unitprice-${index}`} name={`estimate-item-unitprice-${index}`} type=\"text\" value={typeof item.unitPrice === 'number' && item.unitPrice !== 0 && !isNaN(item.unitPrice) ? format(Number(item.unitPrice)) : ''} onChange={e => handleItemChange(index, 'unitPrice', e.target.value)} onFocus={e => e.target.select()} placeholder=\"0\" className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required />\n                          </div>\n                          <div>\n                            <label htmlFor={`estimate-item-unit-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">단위</label>\n                            <select id={`estimate-item-unit-${index}`} name={`estimate-item-unit-${index}`} value={item.unit} onChange={e => handleItemChange(index, 'unit', e.target.value)} className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" required>\n                              <option value=\"\">단위 선택</option>\n                              {units.map(u => <option key={u} value={u}>{u}</option>)}\n                            </select>\n                          </div>\n                          <div>\n                            <label className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">합계</label>\n                            <div className=\"w-full bg-gray-100 dark:bg-gray-900 border border-gray-200 dark:border-gray-600 rounded px-2 py-1 text-sm\">\n                              {(() => {\n                        const MIN_VALUE = 0;\n                        const DEFAULT_QUANTITY = 1;\n                        const priceNum = Number(item.unitPrice);\n                        const qtyNum = Number(item.quantity);\n                        const price = priceNum !== MIN_VALUE && !isNaN(priceNum) ? priceNum : MIN_VALUE;\n                        const qty = qtyNum !== MIN_VALUE && !isNaN(qtyNum) ? qtyNum : DEFAULT_QUANTITY;\n                        return format(price * qty);\n                      })()}원\n                            </div>\n                          </div>\n                        </div>\n\n                        <div>\n                          <label htmlFor={`estimate-item-notes-${index}`} className=\"block text-xs font-medium text-gray-600 dark:text-gray-300 mb-1\">비고</label>\n                          <textarea id={`estimate-item-notes-${index}`} name={`estimate-item-notes-${index}`} value={item.notes} onChange={e => handleItemChange(index, 'notes', e.target.value)} rows={2} className=\"w-full border border-gray-200 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" />\n                        </div>\n                      </div>)}\n                  </div>\n\n                  <div className=\"mt-3 p-3 bg-gray-100 dark:bg-gray-900 rounded\">\n                    <div className=\"text-right\">\n                      <span className=\"text-lg font-bold text-gray-900 dark:text-gray-100\">\n                        총 견적 금액: {format(calculateTotal())}원\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white dark:bg-gray-700 rounded-xl shadow-sm border border-gray-100 dark:border-gray-600 p-4\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">특이사항 및 조건</label>\n                  <textarea name=\"notes\" value={newEstimate.notes} onChange={handleInputChange} rows={3} className=\"mt-1 block w-full border border-gray-200 rounded-md px-3 py-2 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\" placeholder=\"부가세 별도, 설계 변경 시 추가 견적 등...\" />\n                </div>\n              </form>\n            </div>\n\n            {/* Sticky 버튼 영역 */}\n            <div className=\"sticky bottom-0 left-0 right-0 bg-white/95 dark:bg-gray-800/95 backdrop-blur-sm border-t border-gray-200 dark:border-gray-700 px-6 py-4 rounded-b-2xl shadow-lg\">\n              <div className=\"flex justify-end space-x-3\">\n                <button type=\"button\" onClick={resetForm} className=\"px-6 py-2.5 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg transition font-medium\">\n                  취소\n                </button>\n                <button type=\"submit\" form=\"estimate-form\" className=\"px-6 py-2.5 rounded-lg bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white shadow-md transition font-bold\">\n                  {modalState.editingEstimate !== null && modalState.editingEstimate !== undefined ? '수정' : '작성'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>} v12={{\n    display: 'none'\n  }} v13={modalState.printEstimate !== null && modalState.printEstimate !== undefined && <div ref={componentRef} className=\"max-w-4xl mx-auto p-6 text-gray-800\">\n            <div className=\"bg-white shadow-xl rounded-xl\">\n              {/* Header */}\n              <header className=\"p-6 border-b border-gray-200 relative overflow-hidden\">\n                <div className=\"absolute -top-16 -left-16 w-40 h-40 bg-blue-500/10 rounded-full\" aria-hidden=\"true\"></div>\n                <div className=\"absolute -bottom-24 -right-12 w-40 h-40 bg-blue-500/10 rounded-full rotate-45\" aria-hidden=\"true\"></div>\n                <div className=\"relative z-10\">\n                  <h2 className=\"text-3xl font-extrabold text-blue-600\">견적서 (Quotation)</h2>\n                  <p className=\"mt-2 text-sm text-gray-500\">Quotation ID: {modalState.printEstimate.id}</p>\n                  <p className=\"text-sm text-gray-500\">Date: {modalState.printEstimate.date}</p>\n                </div>\n              </header>\n\n              {/* Info panels */}\n              <section className=\"grid md:grid-cols-2 gap-4 p-6\">\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-base font-semibold text-gray-900 mb-2 border-b-2 border-blue-500 pb-1\">발주처 정보 (Client)</h3>\n                  <div className=\"space-y-1 text-sm leading-5\">\n                    <p><strong>건축주명:</strong> {normalizeSpaces(String(modalState.printEstimate.clientName ?? ''))}</p>\n                    <p><strong>프로젝트명:</strong> {modalState.printEstimate.projectName ?? '-'}</p>\n                    <p><strong>작업장 주소:</strong> {modalState.printEstimate.workplaceAddress ?? '-'}</p>\n                    {modalState.printEstimate.validUntil !== null && modalState.printEstimate.validUntil !== undefined && modalState.printEstimate.validUntil !== '' && <p><strong>유효기한:</strong> {modalState.printEstimate.validUntil}</p>}\n                  </div>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h3 className=\"text-base font-semibold text-gray-900 mb-2 border-b-2 border-blue-500 pb-1\">시공업체 정보 (Contractor)</h3>\n                  <div className=\"space-y-1 text-sm leading-5\">\n                    <p><strong>업체명:</strong> {companyInfo.name}</p>\n                    {companyInfo.representative !== null && companyInfo.representative !== undefined && companyInfo.representative !== '' && <p><strong>대표자:</strong> {companyInfo.representative}</p>}\n                    {companyInfo.phone !== null && companyInfo.phone !== undefined && companyInfo.phone !== '' && <p><strong>연락처:</strong> {companyInfo.phone}</p>}\n                    {companyInfo.address !== null && companyInfo.address !== undefined && companyInfo.address !== '' && <p><strong>주소:</strong> {companyInfo.address}</p>}\n                    {companyInfo.businessNumber !== null && companyInfo.businessNumber !== undefined && companyInfo.businessNumber !== '' && <p><strong>사업자번호:</strong> {companyInfo.businessNumber}</p>}\n                  </div>\n                </div>\n              </section>\n\n              {/* Items table */}\n              <section className=\"p-6 pt-0\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-3\">견적 내역 (Quotation Details)</h3>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full text-left text-sm\">\n                    <thead className=\"bg-gray-100\">\n                      <tr>\n                        <th className=\"p-3 font-semibold text-gray-700\">순번</th>\n                        <th className=\"p-3 font-semibold text-gray-700\">구분</th>\n                        <th className=\"p-3 font-semibold text-gray-700 w-1/3\">공종 및 내용</th>\n                        <th className=\"p-3 font-semibold text-gray-700\">수량</th>\n                        <th className=\"p-3 font-semibold text-gray-700\">단위</th>\n                        <th className=\"p-3 font-semibold text-gray-700 text-right\">단가</th>\n                        <th className=\"p-3 font-semibold text-gray-700 text-right\">금액</th>\n                        <th className=\"p-3 font-semibold text-gray-700\">비고</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"divide-y divide-gray-200\">\n                      {(modalState.printEstimate.items ?? []).map((item, idx) => {\n                const MIN_VALUE = 0;\n                const FIRST_INDEX = 1;\n                const qtyNum = Number(item.quantity);\n                const priceNum = Number(item.unitPrice);\n                const qty = qtyNum !== MIN_VALUE && !isNaN(qtyNum) ? qtyNum : MIN_VALUE;\n                const price = priceNum !== MIN_VALUE && !isNaN(priceNum) ? priceNum : MIN_VALUE;\n                const total = qty * price;\n                return <tr key={idx}>\n                            <td className=\"p-3\">{idx + FIRST_INDEX}</td>\n                            <td className=\"p-3\">{item.category ?? '-'}</td>\n                            <td className=\"p-3\">\n                              <div className=\"font-medium\">{item.name}</div>\n                              {item.description !== null && item.description !== undefined && item.description !== '' && <div className=\"text-xs text-gray-500\">{item.description}</div>}\n                            </td>\n                            <td className=\"p-3\">{qty}</td>\n                            <td className=\"p-3\">{item.unit ?? '-'}</td>\n                            <td className=\"p-3 text-right\">{format(price)}원</td>\n                            <td className=\"p-3 text-right\">{format(total)}원</td>\n                            <td className=\"p-3\">{item.notes ?? ''}</td>\n                          </tr>;\n              })}\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td className=\"p-3 text-right font-bold\" colSpan={6}>총 합계</td>\n                        <td className=\"p-3 text-right font-bold\">{format(calculateTotal())}원</td>\n                        <td></td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              </section>\n\n              {/* Total in Korean + notes */}\n              <section className=\"px-6 pb-6\">\n                <div className=\"mt-3 text-sm text-gray-700 font-semibold\">\n                  총 견적금액 : 금 {numberToKorean(modalState.printEstimate.totalAmount)} 원정\n                </div>\n                {modalState.printEstimate.notes !== null && modalState.printEstimate.notes !== undefined && modalState.printEstimate.notes !== '' && <div className=\"mt-4\">\n                    <h4 className=\"text-sm font-semibold mb-1\">특이사항 및 조건</h4>\n                    <div className=\"text-sm whitespace-pre-wrap\">{modalState.printEstimate.notes}</div>\n                  </div>}\n              </section>\n            </div>\n          </div>} />;\n};\nexport default Estimates;","import { useState, useCallback } from 'react';\n\nexport function useModalState() {\n  const [map, setMap] = useState<Record<string, boolean>>({});\n\n  const open = useCallback((name: string) => setMap(prev => ({ ...prev, [name]: true })), []);\n  const close = useCallback((name: string) => setMap(prev => ({ ...prev, [name]: false })), []);\n  const toggle = useCallback((name: string) => setMap(prev => ({ ...prev, [name]: !prev[name] })), []);\n  const isOpen = useCallback((name: string) => !!map[name], [map]);\n  const reset = useCallback(() => setMap({}), []);\n\n  return { open, close, toggle, isOpen, reset, set: setMap };\n}\n\n","import Estimates from '../components/Estimates';\nexport default function EstimatesPage() {\n  return <Estimates />;\n}","// Simple number format/parse utilities as a React hook\n// Provides comma formatting and safe integer parsing used across forms.\n\nexport function useNumberFormat() {\n  /** Format a number-like value with thousands separators. */\n  const format = (value: number | string | null | undefined): string => {\n    if (value === null || value === undefined || value === '') return '';\n    const onlyDigits = String(value).replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return '';\n    const num = Number(onlyDigits);\n    if (Number.isNaN(num)) return '';\n    return num.toLocaleString();\n  };\n\n  /** Parse a user input string into an integer (commas and non-digits ignored). */\n  const parse = (input: string): number => {\n    const onlyDigits = String(input ?? '').replace(/[^\\d-]/g, '');\n    if (onlyDigits === '' || onlyDigits === '-') return 0;\n    const n = parseInt(onlyDigits, 10);\n    return Number.isNaN(n) ? 0 : n;\n  };\n\n  return { format, parse };\n}\n","import { useState, useMemo } from 'react';\n\nexport function useFilters(initial?: { selectedClient?: string; selectedStatus?: string }) {\n  const [selectedClient, setSelectedClient] = useState<string>(initial?.selectedClient ?? '');\n  const [selectedStatus, setSelectedStatus] = useState<string>(initial?.selectedStatus ?? '');\n\n  const isActive = useMemo(() => (selectedClient.trim() !== '' || selectedStatus.trim() !== ''), [selectedClient, selectedStatus]);\n  const reset = () => {\n    setSelectedClient('');\n    setSelectedStatus('');\n  };\n\n  const countLabel = (total: number, filtered: number) => (isActive ? `${filtered}개` : `총 ${total}개`);\n\n  return {\n    selectedClient,\n    selectedStatus,\n    setSelectedClient,\n    setSelectedStatus,\n    reset,\n    isActive,\n    countLabel,\n  };\n}\n"],"names":["useCalendar","options","arguments","length","undefined","value","onChange","closeOnSelect","open","setOpen","useState","month","setMonth","Date","containerRef","useRef","useEffect","parts","split","map","x","parseInt","y","m","Number","isFinite","ONE","onDoc","e","el","current","contains","target","document","addEventListener","removeEventListener","pad2","n","String","padStart","prevMonth","d","getFullYear","getMonth","nextMonth","pickDate","day","v","concat","getCalendarGrid","startDay","getDay","days","getDate","cells","i","push","rows","slice","PHONE_FORMAT","SEOUL_AREA_CODE_LENGTH","STANDARD_AREA_CODE_LENGTH","MIN_DIGITS_FOR_AREA_CODE","MIN_DIGITS_FOR_FIRST_HYPHEN","MAX_PHONE_DIGITS","SEOUL_DIGITS_THRESHOLD","LAST_FOUR_DIGITS","SEOUL_MIDDLE_START","SEOUL_MIDDLE_END","SEOUL_TOTAL_MAX","STANDARD_MIDDLE_START","STANDARD_MIDDLE_END","BUSINESS_NUMBER_FORMAT","MAX_DIGITS","FIRST_PART_LENGTH","SECOND_PART_LENGTH","TIMEOUT","AUTO_SAVE_DELAY","MS_IN_SECOND","SESSION_TIMEOUT","SECONDS_IN_MINUTE","ConfirmDialog_1","_compiledBlock","_props","_jsx","className","children","_jsxs","v0","v1","onClick","v2","v3","v4","v5","name","portals","_ref","title","message","confirmText","cancelText","onConfirm","onCancel","StatsCards_1","v6","v7","items","format","total","approved","filter","status","reviewing","totalAmount","reduce","sum","DocumentTextIcon","CheckCircleIcon","ClockIcon","CurrencyDollarIcon","FilterBar_1","id","clients","statuses","selectedClient","selectedStatus","filteredCount","totalCount","onChangeClient","onChangeStatus","onReset","hasClient","hasStatus","trim","hasFilter","client","s","EstimatesTable_1","type","checked","allSelected","onToggleAll","onToggleOne","getStatusColor","onEdit","onPrint","onDelete","onConvert","onStatusChange","selectedIds","estimate","idx","_estimate$validUntil","includes","clientName","projectName","workplaceName","validUntil","Tooltip","label","numberToKorean","number","units","tens","bigUnits","convertGroup","num","result","digits","toString","digit","position","groups","tempNumber","Math","abs","unshift","floor","group","Estimates_1","accept","v8","v9","v10","v11","style","v12","v13","Estimates","_modalState$printEsti","_modalState$printEsti2","_modalState$printEsti3","_modalState$printEsti4","estimates","setEstimates","convertEstimateToWorkItems","companyInfo","categories","useApp","navigate","useNavigate","componentRef","parse","useNumberFormat","modals","setMap","useCallback","prev","_objectSpread","close","toggle","isOpen","reset","set","useModalState","filters","useFilters","uiState","setUiState","modalState","setModalState","showModal","editingEstimate","printEstimate","showConfirmDelete","noDueDate","newEstimate","setNewEstimate","clientId","workplaceId","category","notes","description","quantity","unit","unitPrice","itemsContainerRef","cal","c","scrollTop","scrollHeight","toDbStatus","koreanStatus","_statusMap$koreanStat","timer","setTimeout","clearTimeout","getClientWorkplaces","_client$workplaces","find","workplaces","filteredEstimates","allVisibleIds","handleInputChange","parsedId","newValue","isNaN","updated","_client$workplaces2","wp","w","handleItemChange","index","field","updatedItems","_updatedItems$index$q","_updatedItems$index$u","replace","qParsed","pParsed","q","p","calculateTotal","item","_item$quantity","_item$unitPrice","resetForm","pendingDeleteId","setPendingDeleteId","pendingConvertId","setPendingConvertId","handleDownloadTemplate","createTemplate","handleExportToExcel","exportToExcel","async","_e$target$files","file","files","importedEstimates","importFromExcel","normalized","_e$id","_e$clientId","_e$clientName","_e$workplaceName","_e$workplaceAddress","_e$projectName","_e$totalAmount","_e$notes","now","workplaceAddress","date","Array","isArray","it","_it$name","alert","error","StatsCards","FilterBar","val","setSelectedClient","setSelectedStatus","EstimatesTable","toggleSelectOne","_prev$selectedIds","_prev$selectedIds2","from","Set","colors","payload","localStorage","setItem","JSON","stringify","_","estimateJson","quotationUrl","resolveBaseUrl","pub","process","path","URL","window","location","origin","pathname","endsWith","_unused","startsWith","encodeURIComponent","printWindow","FOCUS_DELAY_MS","focus","estimateId","handleStatusChange","newStatus","est","supabase","delete","in","err","ConfirmDialog","eq","confirmConvertSingle","convertedItems","onSubmit","_selectedClientData$n","_selectedWorkplaceDat","_selectedWorkplaceDat2","preventDefault","test","_it$quantity","_it$unitPrice","selectedClientData","selectedWorkplaceData","estimateData","address","toISOString","priceNum","qtyNum","price","qty","previousEstimates","_modalState$editingEs","_estimateData$clientN","_estimateData$workpla","_estimateData$project","_estimateData$title","_estimateData$validUn","_estimateData$notes","validWorkplaceId","data","updatedEstimate","estError","update","client_id","client_name","workplace_id","workplace_name","project_name","valid_until","total_amount","select","single","console","details","hint","code","전송데이터","estimate_number","estimate_id","FIRST_INDEX","itemsToInsert","_item$category","_item$description","_item$quantity2","_item$unit","_item$unitPrice2","_item$total","_item$notes","item_id","unit_price","itemsError","insert","_estimateData$clientN2","_estimateData$workpla2","_estimateData$project2","_estimateData$title2","_estimateData$validUn2","_estimateData$notes2","getCurrentUserId","userId","insertedEstimate","user_id","FIRST_INDEX_INSERT","_item$category2","_item$description2","_item$quantity3","_item$unit2","_item$unitPrice3","_item$total2","_item$notes2","htmlFor","required","disabled","workplace","ref","placeholder","inputMode","onFocus","transform","transformOrigin","row","i2","color","clickable","active","classes","addItem","removeItem","cat","u","form","display","representative","phone","businessNumber","_item$category3","_item$unit3","_item$notes3","colSpan","EstimatesPage","onlyDigits","toLocaleString","input","initial","_initial$selectedClie","_initial$selectedStat","isActive","useMemo","countLabel","filtered"],"sourceRoot":""}