{"version":3,"file":"static/js/217.88f5c99a.chunk.js","mappings":"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","sources":["components/CompanyInfo.tsx","services/browserFs.ts","utils/imageStorage.ts","components/ConfirmDialog.tsx"],"sourcesContent":["import { compiledBlock as _compiledBlock } from \"million/react\";\nconst CompanyInfo_1 = _compiledBlock(_props => <slot>\n    <div className=\"p-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100 mb-2\">환경설정</h1>\n        <p className=\"text-gray-600 dark:text-gray-300\">건축업체 정보와 시스템 설정을 관리하세요</p>\n      </div>\n\n      <div className=\"flex flex-col lg:flex-row lg:flex-wrap gap-8 mb-8\">\n        <div className=\"flex-1 bg-white dark:bg-gray-800 rounded-lg shadow flex flex-col\">\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-600 flex justify-between items-center bg-gray-50 dark:bg-gray-700\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">업체 정보 관리</h2>\n            {_props.v0}\n          </div>\n\n          <div className=\"p-6 flex-1\">\n            <div className=\"grid grid-cols-1 gap-6\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div>\n                  {_props.v1}\n                </div>\n                <div>\n                  {_props.v2}\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div>\n                  {_props.v3}\n                </div>\n                <div>\n                  {_props.v4}\n                </div>\n              </div>\n\n              <div>\n                {_props.v5}\n              </div>\n\n              <div>\n                {_props.v6}\n              </div>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div>\n                  {_props.v7}\n                </div>\n                <div>\n                  {_props.v8}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/30 rounded-lg\">\n              <p className=\"text-sm text-blue-700 dark:text-blue-300\">여기서 설정한 정보는 생성되는 모든 청구서/견적서에 자동으로 포함됩니다. 정확한 정보를 입력해주세요.</p>\n            </div>\n          </div>\n        </div>\n\n        {/* 시스템 설정 */}\n        <div className=\"flex-1 bg-white dark:bg-gray-800 rounded-lg shadow flex flex-col\">\n          <div className=\"px-6 py-4 border-b border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-700\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">시스템 설정</h2>\n          </div>\n          <div className=\"p-6 space-y-4\">\n            {/* 단위 관리 */}\n            <div>\n              <label htmlFor=\"new-unit-input\" className=\"block font-medium text-gray-900 dark:text-gray-100 mb-2\">단위 관리</label>\n              <div className=\"flex gap-2\">\n                <input id=\"new-unit-input\" name=\"newUnit\" type=\"text\" value={_props.v9} onChange={_props.v10} placeholder=\"새 단위 입력\" className=\"border border-gray-300 dark:border-gray-600 rounded px-3 py-2 text-sm flex-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                <button onClick={_props.v11} className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-2 rounded text-sm\">추가</button>\n              </div>\n              <div className=\"mt-2 flex gap-2 flex-wrap\">\n                {_props.v12}\n              </div>\n            </div>\n\n            {/* 카테고리 관리 */}\n            <div>\n              <label htmlFor=\"new-category-input\" className=\"block font-medium text-gray-900 dark:text-gray-100 mb-2\">카테고리 관리</label>\n              <div className=\"flex gap-2\">\n                <input id=\"new-category-input\" name=\"newCategory\" type=\"text\" value={_props.v13} onChange={_props.v14} placeholder=\"새 카테고리 입력\" className=\"border border-gray-300 dark:border-gray-600 rounded px-3 py-2 text-sm flex-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                <button onClick={_props.v15} className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-2 rounded text-sm\">추가</button>\n              </div>\n              <div className=\"mt-2 flex gap-2 flex-wrap\">\n                {_props.v16}\n              </div>\n            </div>\n\n            {/* 도장 이미지 */}\n            <div>\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100 mb-2\">도장 이미지</h3>\n              {_props.v17}\n              <div className=\"flex items-center gap-2 mb-3\">\n                <button onClick={_props.v18} className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm font-medium transition-colors\">\n                  📷 이미지 선택\n                </button>\n                {_props.v19}\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-4 bg-gray-50 dark:bg-gray-700\">\n                {_props.v20}\n              </div>\n\n              <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                💡 <strong>팁:</strong> 투명 배경의 PNG 파일을 사용하면 더 깔끔하게 표시됩니다\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n    {_props.v21}\n    {_props.v22}\n    {_props.v23}\n    </slot>, {\n  name: \"CompanyInfo_1\",\n  portals: [\"v0\", \"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\", \"v12\", \"v16\", \"v17\", \"v19\", \"v20\", \"v21\", \"v22\", \"v23\"]\n});\nconst CompanyInfo = function CompanyInfo() {\n  const {\n    companyInfo,\n    setCompanyInfo,\n    units,\n    setUnits,\n    categories,\n    setCategories,\n    stampImage,\n    setStampImage\n  } = useApp();\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [editForm, setEditForm] = useState<CompanyInfoType>({\n    ...companyInfo\n  });\n  const [newUnit, setNewUnit] = useState<string>('');\n  const [newCategory, setNewCategory] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [pendingUnit, setPendingUnit] = useState<string | null>(null);\n  const [pendingCategory, setPendingCategory] = useState<string | null>(null);\n  const [showConfirmRemoveStamp, setShowConfirmRemoveStamp] = useState<boolean>(false);\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditForm(prev => ({\n      ...prev,\n      [name]: value\n    }) as CompanyInfoType);\n  };\n  const handleSave = () => {\n    setCompanyInfo(editForm);\n    setIsEditing(false);\n    alert('건축업체 정보가 저장되었습니다.');\n  };\n  const handleCancel = () => {\n    setEditForm({\n      ...companyInfo\n    });\n    setIsEditing(false);\n  };\n  const handleAddUnit = () => {\n    const v = newUnit.trim();\n    if (v.length > 0 && !units.includes(v)) {\n      setUnits(prev => [...prev, v]);\n      setNewUnit('');\n      alert('새로운 단위가 추가되었습니다.');\n    } else if (units.includes(v)) {\n      alert('이미 존재하는 단위입니다.');\n    }\n  };\n  const handleRemoveUnit = (unit: string) => {\n    setPendingUnit(unit);\n  };\n  const confirmRemoveUnit = () => {\n    if (pendingUnit === null) return;\n    setUnits(prev => prev.filter(u => u !== pendingUnit));\n    setPendingUnit(null);\n    alert('단위가 삭제되었습니다.');\n  };\n  const handleAddCategory = () => {\n    const v = newCategory.trim();\n    if (v.length > 0 && !categories.includes(v)) {\n      setCategories(prev => [...prev, v]);\n      setNewCategory('');\n      alert('새로운 카테고리가 추가되었습니다.');\n    } else if (categories.includes(v)) {\n      alert('이미 존재하는 카테고리입니다.');\n    }\n  };\n  const handleRemoveCategory = (category: string) => {\n    setPendingCategory(category);\n  };\n  const confirmRemoveCategory = () => {\n    if (pendingCategory === null) return;\n    setCategories(prev => prev.filter(c => c !== pendingCategory));\n    setPendingCategory(null);\n    alert('카테고리가 삭제되었습니다.');\n  };\n  const KB_SIZE = 1024;\n  const MB_SIZE = 1024;\n  const MAX_FILE_SIZE_MB = 2;\n  const MAX_FILE_SIZE_BYTES = MAX_FILE_SIZE_MB * KB_SIZE * MB_SIZE; // 2MB\n  const BYTES_TO_KB = KB_SIZE;\n  const handleStampImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = (e.target.files ?? [])[0];\n    if (file === undefined) return;\n\n    // 파일 타입 검증\n    if (!file.type.startsWith('image/')) {\n      alert('이미지 파일만 업로드 가능합니다. (JPG, PNG, GIF 등)');\n      if (fileInputRef.current !== null) fileInputRef.current.value = '';\n      return;\n    }\n\n    // 파일 크기 검증 (2MB로 제한)\n    if (file.size > MAX_FILE_SIZE_BYTES) {\n      alert(`이미지 파일 크기는 2MB를 초과할 수 없습니다.\\n현재 파일 크기: ${Math.round(file.size / BYTES_TO_KB)}KB`);\n      if (fileInputRef.current !== null) fileInputRef.current.value = '';\n      return;\n    }\n    try {\n      const imageDataUrl = await imageToBase64(file);\n\n      // 1. Supabase에 저장 (companyInfo 업데이트하면 자동 저장)\n      setCompanyInfo({\n        ...companyInfo,\n        stampImage: imageDataUrl\n      });\n      setStampImage(imageDataUrl);\n\n      // 2. IndexedDB에도 백업 저장 (옵션)\n      await saveStampImage(imageDataUrl);\n      alert('도장 이미지가 성공적으로 저장되었습니다.');\n    } catch (error) {\n      alert('이미지 처리 중 오류가 발생했습니다.\\n파일이 손상되었거나 지원하지 않는 형식일 수 있습니다.');\n      if (fileInputRef.current !== null) fileInputRef.current.value = '';\n    }\n  };\n  const requestRemoveStampImage = () => setShowConfirmRemoveStamp(true);\n  const confirmRemoveStampImage = async () => {\n    try {\n      // 1. Supabase에서 삭제 (companyInfo 업데이트하면 자동 저장)\n      setCompanyInfo({\n        ...companyInfo,\n        stampImage: undefined\n      });\n      setStampImage(null);\n\n      // 2. IndexedDB에서도 삭제\n      await removeStampImage();\n      if (fileInputRef.current !== null) fileInputRef.current.value = '';\n      alert('도장 이미지가 완전히 삭제되었습니다.');\n    } catch (error) {\n      alert('이미지 삭제 중 오류가 발생했습니다.');\n    }\n    setShowConfirmRemoveStamp(false);\n  };\n  return /*@million jsx-skip*/<CompanyInfo_1 v0={!isEditing ? <button onClick={() => setIsEditing(true)} className=\"bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium py-1.5 px-3 rounded\">수정</button> : <div className=\"space-x-2\">\n                <button onClick={handleSave} className=\"bg-green-600 hover:bg-green-700 text-white text-sm font-medium py-1.5 px-3 rounded\">저장</button>\n                <button onClick={handleCancel} className=\"bg-gray-500 hover:bg-gray-600 text-white text-sm font-medium py-1.5 px-3 rounded\">취소</button>\n              </div>} v1={isEditing ? <>\n                      <label htmlFor=\"company-name\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">업체명 *</label>\n                      <input id=\"company-name\" type=\"text\" name=\"name\" value={editForm.name} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">업체명 *</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.name}</p>\n                    </>} v2={isEditing ? <>\n                      <label htmlFor=\"company-business-number\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">사업자등록번호 *</label>\n                      <input id=\"company-business-number\" type=\"text\" name=\"businessNumber\" value={editForm.businessNumber ?? ''} onChange={handleInputChange} placeholder=\"000-00-00000\" className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">사업자등록번호 *</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.businessNumber}</p>\n                    </>} v3={isEditing ? <>\n                      <label htmlFor=\"company-representative\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">대표자명 *</label>\n                      <input id=\"company-representative\" type=\"text\" name=\"representative\" value={editForm.representative ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">대표자명 *</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.representative}</p>\n                    </>} v4={isEditing ? <>\n                      <label htmlFor=\"company-phone\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">전화번호 *</label>\n                      <input id=\"company-phone\" type=\"tel\" name=\"phone\" value={editForm.phone ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">전화번호 *</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.phone}</p>\n                    </>} v5={isEditing ? <>\n                    <label htmlFor=\"company-email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">이메일</label>\n                    <input id=\"company-email\" type=\"email\" name=\"email\" value={editForm.email ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                  </> : <>\n                    <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">이메일</div>\n                    <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.email ?? '-'}</p>\n                  </>} v6={isEditing ? <>\n                    <label htmlFor=\"company-address\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">주소 *</label>\n                    <input id=\"company-address\" type=\"text\" name=\"address\" value={editForm.address ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" required />\n                  </> : <>\n                    <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">주소 *</div>\n                    <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.address}</p>\n                  </>} v7={isEditing ? <>\n                      <label htmlFor=\"company-bank-account\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">계좌번호</label>\n                      <input id=\"company-bank-account\" type=\"text\" name=\"bankAccount\" value={editForm.bankAccount ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">계좌번호</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.bankAccount ?? '-'}</p>\n                    </>} v8={isEditing ? <>\n                      <label htmlFor=\"company-account-holder\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">예금주명</label>\n                      <input id=\"company-account-holder\" type=\"text\" name=\"accountHolder\" value={editForm.accountHolder ?? ''} onChange={handleInputChange} className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" />\n                    </> : <>\n                      <div className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">예금주명</div>\n                      <p className=\"text-gray-900 dark:text-gray-100 py-2\">{companyInfo.accountHolder ?? '-'}</p>\n                    </>} v9={newUnit} v10={e => setNewUnit(e.target.value)} v11={handleAddUnit} v12={units.map(u => <span key={u} className=\"inline-flex items-center bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-xs\">\n                    {u}\n                    <button onClick={() => handleRemoveUnit(u)} className=\"ml-2 text-red-600 dark:text-red-400\">✕</button>\n                  </span>)} v13={newCategory} v14={e => setNewCategory(e.target.value)} v15={handleAddCategory} v16={categories.map(c => <span key={c} className=\"inline-flex items-center bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 rounded text-xs\">\n                    {c}\n                    <button onClick={() => handleRemoveCategory(c)} className=\"ml-2 text-red-600 dark:text-red-400\">✕</button>\n                  </span>)} v17={<input ref={fileInputRef} id=\"stamp-image\" type=\"file\" accept=\"image/jpeg,image/jpg,image/png,image/gif,image/webp\" onChange={handleStampImageChange} className=\"hidden\" />} v18={() => fileInputRef.current?.click()} v19={stampImage !== null && <button onClick={requestRemoveStampImage} className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm font-medium transition-colors\">\n                    🗑️ 삭제\n                  </button>} v20={stampImage !== null ? <div className=\"flex items-center gap-4\">\n                    <img src={stampImage} alt=\"업로드된 도장 이미지\" className=\"w-20 h-20 object-contain border border-gray-200 dark:border-gray-600 rounded bg-white dark:bg-gray-800 shadow-sm\" />\n                    <div className=\"text-sm text-gray-600 dark:text-gray-300\">\n                      <p className=\"font-medium text-green-600 dark:text-green-400 mb-1\">✅ 도장 이미지가 등록되었습니다</p>\n                      <p>청구서 출력 시 자동으로 표시됩니다</p>\n                    </div>\n                  </div> : <div className=\"text-center py-4\">\n                    <div className=\"text-gray-400 dark:text-gray-500 mb-2\">\n                      <svg className=\"mx-auto h-12 w-12\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      </svg>\n                    </div>\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">도장 이미지가 등록되지 않았습니다</p>\n                    <p className=\"text-xs text-gray-400 dark:text-gray-500\">JPG, PNG, GIF 파일 (최대 2MB)</p>\n                  </div>} v21={<ConfirmDialog open={pendingUnit != null} title=\"단위 삭제\" message={`'${pendingUnit ?? ''}' 단위를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmRemoveUnit} onCancel={() => setPendingUnit(null)} />} v22={<ConfirmDialog open={pendingCategory != null} title=\"카테고리 삭제\" message={`'${pendingCategory ?? ''}' 카테고리를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.`} confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmRemoveCategory} onCancel={() => setPendingCategory(null)} />} v23={<ConfirmDialog open={showConfirmRemoveStamp} title=\"도장 이미지 삭제\" message=\"도장 이미지를 삭제하시겠습니까? 이 작업은 되돌릴 수 없습니다.\" confirmText=\"삭제\" cancelText=\"취소\" onConfirm={confirmRemoveStampImage} onCancel={() => setShowConfirmRemoveStamp(false)} />} />;\n};\nimport { block as _block } from \"million/react\";\nimport { useRef, useState } from 'react';\nimport { useApp } from '../contexts/AppContext';\nimport { imageToBase64, saveStampImage, removeStampImage } from '../utils/imageStorage';\nimport type { CompanyInfo as CompanyInfoType } from '../types/domain';\nimport ConfirmDialog from './ConfirmDialog';\nexport default CompanyInfo;","// Experimental browser folder storage using File System Access API (Edge/Chrome)\n\nimport '../types/global';\n\nconst DB_NAME = 'cms-fs';\nconst STORE = 'handles';\nconst DIR_KEY = 'dirHandle';\n\nfunction isSupported(): boolean {\n  return typeof window !== 'undefined' && 'showDirectoryPicker' in window;\n}\n\nfunction openDb(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const req = indexedDB.open(DB_NAME, 1);\n    req.onupgradeneeded = () => {\n      const db = req.result;\n      if (!db.objectStoreNames.contains(STORE)) db.createObjectStore(STORE);\n    };\n    req.onsuccess = () => resolve(req.result);\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function idbGet(key: string): Promise<unknown> {\n  const db = await openDb();\n  return new Promise((resolve, reject) => {\n    const tx = db.transaction(STORE, 'readonly');\n    const st = tx.objectStore(STORE);\n    const req = st.get(key);\n    req.onsuccess = () => resolve(req.result ?? null);\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function idbSet(key: string, value: unknown): Promise<void> {\n  const db = await openDb();\n  return new Promise((resolve, reject) => {\n    const tx = db.transaction(STORE, 'readwrite');\n    const st = tx.objectStore(STORE);\n    const req = st.put(value, key);\n    req.onsuccess = () => resolve();\n    req.onerror = () => reject(req.error);\n  });\n}\n\nasync function getSavedDirectoryHandle(): Promise<FileSystemDirectoryHandle | null> {\n  if (!isSupported()) return null;\n  try {\n    const handle = (await idbGet(DIR_KEY)) as FileSystemDirectoryHandle | null;\n    return handle ?? null;\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function saveDirectoryHandle(handle: FileSystemDirectoryHandle): Promise<boolean> {\n  if (!isSupported()) return false;\n  try {\n    await idbSet(DIR_KEY, handle);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function verifyPermission(\n  handle: FileSystemDirectoryHandle, \n  mode: 'read' | 'readwrite' = 'readwrite'\n): Promise<boolean> {\n  if (handle == null) return false;\n  if (await handle.queryPermission({ mode }) === 'granted') return true;\n  if (await handle.requestPermission({ mode }) === 'granted') return true;\n  return false;\n}\n\nasync function chooseDirectory(): Promise<FileSystemDirectoryHandle | null> {\n  if (!isSupported()) return null;\n  try {\n    if (typeof window.showDirectoryPicker !== 'function') return null;\n    const handle = await window.showDirectoryPicker({ id: 'cms-data' });\n    if (!(await verifyPermission(handle, 'readwrite'))) return null;\n    await saveDirectoryHandle(handle);\n    return handle;\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function getFileHandle(\n  dirHandle: FileSystemDirectoryHandle, \n  name: string\n): Promise<FileSystemFileHandle> {\n  return await dirHandle.getFileHandle(name, { create: true });\n}\n\nasync function readKey(\n  dirHandle?: FileSystemDirectoryHandle | null, \n  key?: string\n): Promise<unknown> {\n  try {\n    if (dirHandle == null) dirHandle = await getSavedDirectoryHandle();\n    if (dirHandle == null || key == null || key === '') return null;\n    if (!(await verifyPermission(dirHandle, 'read'))) return null;\n    const fileHandle = await getFileHandle(dirHandle, `${key}.json`);\n    const file = await fileHandle.getFile();\n    const text = await file.text();\n    if (text.length === 0) return null;\n    return JSON.parse(text);\n  } catch (e) {\n    return null;\n  }\n}\n\nasync function writeKey(\n  dirHandle: FileSystemDirectoryHandle | null, \n  key: string, \n  obj: unknown\n): Promise<boolean> {\n  try {\n    if (dirHandle == null) dirHandle = await getSavedDirectoryHandle();\n    if (dirHandle == null) return false;\n    if (!(await verifyPermission(dirHandle, 'readwrite'))) return false;\n    const fileHandle = await getFileHandle(dirHandle, `${key}.json`);\n    const writable = await fileHandle.createWritable();\n    const INDENT = 2; // eslint-disable-line no-magic-numbers\n    await writable.write(new Blob([JSON.stringify(obj, null, INDENT)], { type: 'application/json' }));\n    await writable.close();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nasync function writeKeyDirect(key: string, value: unknown): Promise<boolean> {\n  const dir = await getSavedDirectoryHandle();\n  if (dir == null) return false;\n  return await writeKey(dir, key, value);\n}\n\nasync function writeImageFile(filename: string, blob: Blob): Promise<boolean> {\n  try {\n    const dirHandle = await getSavedDirectoryHandle();\n    if (dirHandle == null) return false;\n    if (!(await verifyPermission(dirHandle, 'readwrite'))) return false;\n\n    const fileHandle = await dirHandle.getFileHandle(filename, { create: true });\n    const writable = await fileHandle.createWritable();\n    await writable.write(blob);\n    await writable.close();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport const browserFs = {\n  isSupported,\n  getSavedDirectoryHandle,\n  saveDirectoryHandle,\n  chooseDirectory,\n  readKey,\n  writeKey,\n  writeKeyDirect,\n  writeImageFile,\n};\n","// 도장 이미지 저장을 위한 유틸리티\nimport { KIB } from '../constants/units';\nimport { browserFs } from '../services/browserFs';\n\nconst DB_NAME = 'ConstructionAppDB';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'stampImages';\nconst STAMP_KEY = 'companyStamp';\nconst STAMP_FILENAME = 'company-stamp.png';\n\n// Storage info interface\ninterface StorageInfo {\n  used: string;\n  stampImageSize: string;\n  folderPath?: string;\n}\n\n// IndexedDB 초기화\nconst openDB = (): Promise<IDBDatabase> => {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = () => reject(request.error);\n    request.onsuccess = () => resolve(request.result);\n\n    request.onupgradeneeded = (event) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (!db.objectStoreNames.contains(STORE_NAME)) {\n        db.createObjectStore(STORE_NAME);\n      }\n    };\n  });\n};\n\n// IndexedDB와 브라우저 저장소 폴더에 이미지 저장\nexport const saveStampImage = async (imageDataUrl: string): Promise<boolean> => {\n  try {\n    // Base64를 Blob으로 변환\n    const response = await fetch(imageDataUrl);\n    const blob = await response.blob();\n\n    // 용량 확인 (5MB 제한)\n    const MAX_STAMP_IMAGE_MIB = 5;\n    const maxSize = MAX_STAMP_IMAGE_MIB * KIB * KIB;\n    if (blob.size > maxSize) {\n      return false;\n    }\n\n    // 1. IndexedDB에 저장 (백업용)\n    const db = await openDB();\n    const transaction = db.transaction([STORE_NAME], 'readwrite');\n    const store = transaction.objectStore(STORE_NAME);\n\n    await new Promise<void>((resolve, reject) => {\n      const request = store.put(blob, STAMP_KEY);\n      request.onsuccess = () => resolve();\n      request.onerror = () => reject(request.error);\n    });\n\n    db.close();\n\n    // 2. 브라우저 저장소 폴더에 파일로 저장 (선택된 폴더가 있는 경우)\n    if (browserFs.isSupported()) {\n      try {\n        await browserFs.writeImageFile(STAMP_FILENAME, blob);\n      } catch (fileError) {\n        // 파일 저장 실패해도 IndexedDB에는 저장되었으므로 계속 진행\n      }\n    }\n\n    return true;\n  } catch (error) {\n    // Failed to save stamp image\n    return false;\n  }\n};\n\n// IndexedDB에서 이미지 불러오기 (Blob을 Data URL로 변환)\nexport const loadStampImage = async (): Promise<string | null> => {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction([STORE_NAME], 'readonly');\n    const store = transaction.objectStore(STORE_NAME);\n\n    const blob = await new Promise<Blob | null>((resolve, reject) => {\n      const request = store.get(STAMP_KEY);\n      request.onsuccess = () => {\n        const result = request.result;\n        resolve((result !== undefined && result !== null) ? result : null);\n      };\n      request.onerror = () => reject(request.error);\n    });\n\n    db.close();\n\n    if (blob === null) return null;\n\n    // Blob을 Data URL로 변환\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(reader.error);\n      reader.readAsDataURL(blob);\n    });\n  } catch (error) {\n    // Failed to load stamp image\n    return null;\n  }\n};\n\n// IndexedDB에서 이미지 삭제\nexport const removeStampImage = async (): Promise<boolean> => {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction([STORE_NAME], 'readwrite');\n    const store = transaction.objectStore(STORE_NAME);\n\n    await new Promise<void>((resolve, reject) => {\n      const request = store.delete(STAMP_KEY);\n      request.onsuccess = () => resolve();\n      request.onerror = () => reject(request.error);\n    });\n\n    db.close();\n    return true;\n  } catch (error) {\n    // Failed to remove stamp image\n    return false;\n  }\n};\n\n// localStorage 저장 공간 확인\nexport const checkStorageAvailable = (): boolean => {\n  try {\n    const test = 'test';\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n// 이미지 파일을 Base64로 변환\nexport const imageToBase64 = (file: File): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const result = e.target?.result;\n      if (typeof result === 'string') {\n        resolve(result);\n      } else {\n        reject(new Error('Failed to convert file to base64'));\n      }\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(file);\n  });\n};\n\n// 저장 폴더 경로 가져오기\nexport const getStampFolderPath = async (): Promise<string | null> => {\n  try {\n    const folderHandle = await browserFs.getSavedDirectoryHandle();\n    if (folderHandle !== null) {\n      return folderHandle.name;\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n};\n\n// IndexedDB 사용량 확인 (개발용)\nexport const getStorageInfo = async (): Promise<StorageInfo> => {\n  let total = 0;\n\n  // localStorage 사용량\n  for (const key in localStorage) {\n    if (localStorage.hasOwnProperty(key)) {\n      total += localStorage[key].length + key.length;\n    }\n  }\n\n  // IndexedDB에서 도장 이미지 크기 확인\n  let stampImageSize = '0 KB';\n  let folderPath: string | undefined = undefined;\n\n  try {\n    const db = await openDB();\n    const transaction = db.transaction([STORE_NAME], 'readonly');\n    const store = transaction.objectStore(STORE_NAME);\n\n    const blob = await new Promise<Blob | null>((resolve, reject) => {\n      const request = store.get(STAMP_KEY);\n      request.onsuccess = () => {\n        const result = request.result;\n        resolve((result !== undefined && result !== null) ? result : null);\n      };\n      request.onerror = () => reject(request.error);\n    });\n\n    db.close();\n\n    if (blob !== null) {\n      stampImageSize = Math.round(blob.size / KIB) + ' KB';\n    }\n\n    // 폴더 경로 가져오기\n    const path = await getStampFolderPath();\n    if (path !== null) {\n      folderPath = path;\n    }\n  } catch (error) {\n    // Failed to get storage info\n  }\n\n  return {\n    used: Math.round(total / KIB) + ' KB',\n    stampImageSize: stampImageSize,\n    folderPath: folderPath\n  };\n};\n","import { compiledBlock as _compiledBlock } from \"million/react\";\nimport { block as _block } from \"million/react\";\nimport React from 'react';\ntype Props = {\n  open: boolean;\n  title: string;\n  message: string | React.ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n};\nconst ConfirmDialog_1 = _compiledBlock(_props => <div className=\"fixed inset-0 bg-black bg-opacity-30 dark:bg-black dark:bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg w-full max-w-md p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2\">{_props.v0}</h3>\n        <div className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">{_props.v1}</div>\n        <div className=\"flex justify-end space-x-2\">\n          <button onClick={_props.v2} className=\"px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-gray-800 dark:hover:text-gray-100\">{_props.v3}</button>\n          <button onClick={_props.v4} className=\"px-4 py-2 bg-red-600 hover:bg-red-700 dark:bg-red-700 dark:hover:bg-red-800 text-white rounded\">{_props.v5}</button>\n        </div>\n      </div>\n    </div>, {\n  name: \"ConfirmDialog_1\",\n  portals: [\"v0\", \"v1\", \"v3\", \"v5\"]\n});\nconst ConfirmDialog: React.FC<Props> = ({\n  open,\n  title,\n  message,\n  confirmText = '확인',\n  cancelText = '취소',\n  onConfirm,\n  onCancel\n}) => {\n  if (!open) return null;\n  return /*@million jsx-skip*/<ConfirmDialog_1 v0={title} v1={message} v2={onCancel} v3={cancelText} v4={onConfirm} v5={confirmText} />;\n};\nexport default ConfirmDialog;"],"names":["CompanyInfo_1","_compiledBlock","_props","_jsxs","children","className","_jsx","v0","v1","v2","v3","v4","v5","v6","v7","v8","htmlFor","id","name","type","value","v9","onChange","v10","placeholder","onClick","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","portals","_editForm$businessNum","_editForm$representat","_editForm$phone","_editForm$email","_companyInfo$email","_editForm$address","_editForm$bankAccount","_companyInfo$bankAcco","_editForm$accountHold","_companyInfo$accountH","companyInfo","setCompanyInfo","units","setUnits","categories","setCategories","stampImage","setStampImage","useApp","isEditing","setIsEditing","useState","editForm","setEditForm","_objectSpread","newUnit","setNewUnit","newCategory","setNewCategory","fileInputRef","useRef","pendingUnit","setPendingUnit","pendingCategory","setPendingCategory","showConfirmRemoveStamp","setShowConfirmRemoveStamp","handleInputChange","e","target","prev","handleSave","alert","handleCancel","_Fragment","required","businessNumber","representative","phone","email","address","bankAccount","accountHolder","handleAddUnit","v","trim","length","includes","map","u","handleAddCategory","c","ref","accept","async","_e$target$files","file","files","undefined","startsWith","current","size","MAX_FILE_SIZE_MB","concat","Math","round","imageDataUrl","imageToBase64","saveStampImage","error","_fileInputRef$current","click","requestRemoveStampImage","src","alt","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","ConfirmDialog","open","title","message","confirmText","cancelText","onConfirm","confirmRemoveUnit","filter","onCancel","confirmRemoveCategory","removeStampImage","STORE","DIR_KEY","isSupported","window","openDb","Promise","resolve","reject","req","indexedDB","onupgradeneeded","db","result","objectStoreNames","contains","createObjectStore","onsuccess","onerror","getSavedDirectoryHandle","handle","key","transaction","objectStore","get","_req$result","idbGet","saveDirectoryHandle","put","idbSet","verifyPermission","mode","arguments","queryPermission","requestPermission","getFileHandle","dirHandle","create","writeKey","obj","fileHandle","writable","createWritable","INDENT","write","Blob","JSON","stringify","close","browserFs","chooseDirectory","showDirectoryPicker","readKey","getFile","text","parse","writeKeyDirect","dir","writeImageFile","filename","blob","STORE_NAME","STAMP_KEY","openDB","request","event","response","fetch","maxSize","KIB","store","fileError","loadStampImage","reader","FileReader","onload","readAsDataURL","delete","_e$target","Error","ConfirmDialog_1","_ref"],"sourceRoot":""}